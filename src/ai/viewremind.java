/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ai;

import java.io.FileNotFoundException;
import java.io.*;
import java.time.LocalDate;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.*;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ULTRON
 */
public class viewremind extends javax.swing.JFrame {

    /**
     * Creates new form viewremind
     */
    
    DefaultTableModel tm;
    public viewremind() {
        initComponents();

        this.setLocationRelativeTo(null);
        this.pack();
        tm = (DefaultTableModel) tb.getModel();
        btsave.setVisible(false);
        btdel.setVisible(false);
        lbl.setVisible(false);
        FileReader fr;
        try {
            fr = new FileReader("assets/reminder.txt");
            BufferedReader br = new BufferedReader(fr);
            String s;
            while ((s = br.readLine()) != null) {
                tm.addRow(new Object[]{s.substring(0, s.indexOf("=")), s.substring(s.indexOf("=") + 1, s.lastIndexOf("=")), s.substring(s.lastIndexOf("=") + 1)});
            }
        } catch (Exception ex) {
            Logger.getLogger(viewalm.class.getName()).log(Level.SEVERE, null, ex);
        }

        //BufferedReader br=new BufferedReader();
        //tm.addRow(new Object[]{"a","b","c"});
        tb.getModel().addTableModelListener(new TableModelListener() {
            public void tableChanged(TableModelEvent e) {
                //System.out.println(e);
                btsave.setVisible(true);
                btdel.setVisible(false);
            }
        });

        tb.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent event) {
                // do some actions here, for example
                // print first column value from selected row
                //System.out.println(tb.getValueAt(table.getSelectedRow(), 0).toString());
                btsave.setVisible(false);
                btdel.setVisible(true);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tb = new javax.swing.JTable();
        btsave = new javax.swing.JButton();
        lbl = new javax.swing.JLabel();
        btdel = new javax.swing.JButton();

        setTitle("Reminders");
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tb.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Time", "Title"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tb);
        if (tb.getColumnModel().getColumnCount() > 0) {
            tb.getColumnModel().getColumn(0).setResizable(false);
            tb.getColumnModel().getColumn(1).setResizable(false);
            tb.getColumnModel().getColumn(2).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 392, 327));

        btsave.setText("Save Changes");
        btsave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btsaveActionPerformed(evt);
            }
        });
        getContentPane().add(btsave, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 340, -1, -1));

        lbl.setForeground(new java.awt.Color(0, 102, 204));
        lbl.setText("Changes saved");
        getContentPane().add(lbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 350, -1, -1));

        btdel.setText("Delete Reminder");
        btdel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btdelActionPerformed(evt);
            }
        });
        getContentPane().add(btdel, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 340, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btsaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btsaveActionPerformed
        save();
    }//GEN-LAST:event_btsaveActionPerformed

    private void btdelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btdelActionPerformed
        int a=JOptionPane.showConfirmDialog(null, "Remove this Reminder?","Confirm an action:",JOptionPane.YES_NO_OPTION);
        if(a==JOptionPane.YES_OPTION)
        {
            tm.removeRow(tb.getSelectedRow());
            save();
            btdel.setVisible(false);
        }
    }//GEN-LAST:event_btdelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(viewalm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(viewalm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(viewalm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(viewalm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new viewremind().setVisible(true);
            }
        });
    }

    public void save()
    {
        try {
            FileWriter fw = new FileWriter("assets/reminder.txt");
            BufferedWriter bw = new BufferedWriter(fw);
            PrintWriter pw = new PrintWriter(bw);
            for (int i = 0; i < tb.getRowCount(); i++) {
                pw.println(tb.getValueAt(i, 0) + "=" + tb.getValueAt(i, 1) + "=" + tb.getValueAt(i, 2));
            }
            pw.close();
            bw.close();
            fw.close();

        } catch (Exception ex) {
        }
        lbl.setVisible(true);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btdel;
    private javax.swing.JButton btsave;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl;
    public javax.swing.JTable tb;
    // End of variables declaration//GEN-END:variables
}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ai;

import java.time.LocalDateTime;
import javax.swing.JOptionPane;

/**
 *
 * @author aNaWorLd
 */
public class DD extends javax.swing.JFrame {

    /**
     * Creates new form DD
     */
    welcome w;
    public DD(welcome w) {
        this.w=w;
        initComponents();
        this.setLocationRelativeTo(null);
        int y = LocalDateTime.now().getYear();

        for (int i = 1; i <= 31; i++) {
            dd.addItem(i + "");
        }
        for (int i = 1; i <= 12; i++) {
            mm.addItem(i + "");
        }
        for (int i = 1980; i <= y; i++) {
            yy.addItem(i + "");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dd = new javax.swing.JComboBox<>();
        mm = new javax.swing.JComboBox<>();
        yy = new javax.swing.JComboBox<>();
        date = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setTitle("Choose DOB");

        dd.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ddItemStateChanged(evt);
            }
        });
        dd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                ddFocusLost(evt);
            }
        });

        mm.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mmItemStateChanged(evt);
            }
        });
        mm.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                mmFocusLost(evt);
            }
        });
        mm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mmActionPerformed(evt);
            }
        });

        yy.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                yyItemStateChanged(evt);
            }
        });
        yy.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                yyFocusLost(evt);
            }
        });

        date.setEditable(false);

        jLabel1.setText("Day");

        jLabel2.setText("Month");

        jLabel3.setText("Year");

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(date)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dd, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(mm, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(yy, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLabel1)
                .addGap(66, 66, 66)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(46, 46, 46))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ddFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ddFocusLost
        int d = Integer.parseInt(dd.getSelectedItem().toString());
        int m = Integer.parseInt(mm.getSelectedItem().toString());
        int y = Integer.parseInt(yy.getSelectedItem().toString());
        if (d == LocalDateTime.now().getDayOfMonth() && m == LocalDateTime.now().getMonthValue() && y == LocalDateTime.now().getYear()) {
            JOptionPane.showMessageDialog(null, "The date-of-birth you've entered doesn't seem to be correct!");
        }
    }//GEN-LAST:event_ddFocusLost

    private void mmItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mmItemStateChanged

        int a = Integer.parseInt(mm.getSelectedItem().toString());
        if (a == 4 || a == 6 || a == 9 || a == 11) {
            dd.removeAllItems();
            for (int i = 1; i <= 30; i++) {
                dd.addItem(i + "");
            }
        } else if (a == 2) {
            int y = Integer.parseInt(yy.getSelectedItem().toString());

            if (((y % 4 == 0) && (y % 100 != 0)) || (y % 400 == 0)) {
                dd.removeAllItems();
                for (int i = 1; i <= 29; i++) {
                    dd.addItem(i + "");
                }
            } else {
                dd.removeAllItems();
                for (int i = 1; i <= 28; i++) {
                    dd.addItem(i + "");
                }
            }
        } else {
            dd.removeAllItems();
            for (int i = 1; i <= 31; i++) {
                dd.addItem(i + "");
            }
        }
        date.setText(dd.getSelectedItem()+"/"+mm.getSelectedItem()+"/"+yy.getSelectedItem());
    }//GEN-LAST:event_mmItemStateChanged

    private void mmFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mmFocusLost
        int d = Integer.parseInt(dd.getSelectedItem().toString());
        int m = Integer.parseInt(mm.getSelectedItem().toString());
        int y = Integer.parseInt(yy.getSelectedItem().toString());
        if (d == LocalDateTime.now().getDayOfMonth() && m == LocalDateTime.now().getMonthValue() && y == LocalDateTime.now().getYear()) {
            JOptionPane.showMessageDialog(null, "The date-of-birth you've entered doesn't seem to be correct!");
        }
    }//GEN-LAST:event_mmFocusLost

    private void mmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mmActionPerformed

    private void yyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_yyItemStateChanged
        int a = Integer.parseInt(yy.getSelectedItem().toString());

        if (Integer.parseInt(mm.getSelectedItem().toString()) == 2) {
            if (((a % 4 == 0) && (a % 100 != 0)) || (a % 400 == 0)) {
                dd.removeAllItems();
                for (int i = 1; i <= 29; i++) {
                    dd.addItem(i + "");
                }
            } else {
                dd.removeAllItems();
                for (int i = 1; i <= 28; i++) {
                    dd.addItem(i + "");
                }
            }
        }
        date.setText(dd.getSelectedItem()+"/"+mm.getSelectedItem()+"/"+yy.getSelectedItem());
    }//GEN-LAST:event_yyItemStateChanged

    private void yyFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_yyFocusLost
        int d = Integer.parseInt(dd.getSelectedItem().toString());
        int m = Integer.parseInt(mm.getSelectedItem().toString());
        int y = Integer.parseInt(yy.getSelectedItem().toString());
        if (d == LocalDateTime.now().getDayOfMonth() && m == LocalDateTime.now().getMonthValue() && y == LocalDateTime.now().getYear()) {
            JOptionPane.showMessageDialog(null, "The date-of-birth you've entered doesn't seem to be correct!");
        }
    }//GEN-LAST:event_yyFocusLost

    private void ddItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ddItemStateChanged
       date.setText(dd.getSelectedItem()+"/"+mm.getSelectedItem()+"/"+yy.getSelectedItem());
    }//GEN-LAST:event_ddItemStateChanged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
w.lbldob.setText(date.getText());       
this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
          //      new DD().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField date;
    private javax.swing.JComboBox<String> dd;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JComboBox<String> mm;
    private javax.swing.JComboBox<String> yy;
    // End of variables declaration//GEN-END:variables
}

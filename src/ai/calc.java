package ai;


import java.awt.Color;
import java.awt.Font;
import java.awt.print.PrinterException;
import java.beans.PropertyVetoException;
import javax.swing.ImageIcon;

import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;


/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * anagrams.java
 *
 * Created on Feb 1, 2015, 8:23:35 AM
 */


/**
 *
 * @author ANADI
 */
public class calc extends javax.swing.JFrame {

    String his1 = "", his2 = "", his3 = "", his4 = "", his5 = "";
    int cc, nr, nc, status, roni, roni1, coni, coni1, nr1, cr1;
    int cr;
    int sr;
    double valu;
    String sign = "";
    String sc;
    String df;
    String df1;
    int aa0 = 0;
    double f = 0.0;
    double g = 0.0;
    double dds = 0.0;
    double k = 0.0;
    double a = 0.0;
    double d = 0.0;
    double h = 0.0;
    double j = 0.0;
    double x = 0.0;
    double y33 = 0;
    double y44 = 1;
    float zz1, ww1, ee1;
    float aa1, bb1, cc1, dd1;
    int ff1, gg1, hh1, ii1, jj1, kk1, ll1, pp1;
    int rew[];
    int id[];
    int clk;
    int sin, cos, tan, sinh1, cosh1, tanh1, dss, css, ult, lg, arr, crr, abbs, tabu, fatu;
    int min = 1;
    int bold = 0, itl = 0;
    String help;
    short lko = 0;
    int mula = 0;
    DefaultTableModel model;

    /**
     * Creates new form anagrams
     */
    public calc() {

        initComponents();
   
        this.setLocationRelativeTo(this);
           this.setSize(1030, 750);
        help = a8.getText();
        // fo.setSelectedItem("Tahoma");
        a8.setText("");
        id = t1.getSelectedIndices();
        rew = l1.getSelectedIndices();
        a1.setHorizontalAlignment(JTextField.RIGHT);
        a5.setAlignmentX(JTable.RIGHT_ALIGNMENT);
        a5.setShowGrid(true);
        adb.setHorizontalAlignment(JTextField.CENTER);
       
        prbtn.setIcon(new ImageIcon("assets/pri.png"));
        z1.setVisible(false);
        z2.setVisible(false);
        q2.setVisible(false);
        q1.setVisible(false);
        y1.setVisible(false);
        y2.setVisible(false);
        y3.setVisible(false);
        z3.setVisible(false);

        z4.setVisible(false);
        y4.setVisible(false);

        v1.setVisible(false);
        q1.setVisible(false);
        y11.setVisible(false);
        y12.setVisible(false);
        y13.setVisible(false);
        y14.setVisible(false);
        h5.setVisible(false);
        /* String o = JOptionPane.showInputDialog(null, "Enter Password");
        if (o.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(null, "Trial Version Is ACTIVATED!", "WELCOME", WIDTH);

            h44.setVisible(false);
            g1.setEnabled(false);
            g2.setEnabled(false);
            h5.setVisible(true);
            d1.setVisible(false);
            d3.setVisible(false);
            d4.setVisible(false);
            work.setVisible(false);
            g1.setToolTipText("function not Activated!");
            g2.setToolTipText("function not Activated!");
            s1.setVisible(false);
        } else if (o.equalsIgnoreCase("a")) {
            // JOptionPane.showMessageDialog(null, "Welcome To Universal Calculator", "WELCOME", WIDTH);
        } else {
            System.exit(0);
        }*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jPopupMenu3 = new javax.swing.JPopupMenu();
        jPopupMenu4 = new javax.swing.JPopupMenu();
        jPopupMenu5 = new javax.swing.JPopupMenu();
        jPopupMenu6 = new javax.swing.JPopupMenu();
        k1 = new javax.swing.JDesktopPane();
        k8 = new javax.swing.JLabel();
        d2 = new javax.swing.JDesktopPane();
        x1 = new javax.swing.JButton();
        x2 = new javax.swing.JButton();
        x3 = new javax.swing.JButton();
        x4 = new javax.swing.JButton();
        x5 = new javax.swing.JButton();
        x6 = new javax.swing.JButton();
        x7 = new javax.swing.JButton();
        x8 = new javax.swing.JButton();
        x9 = new javax.swing.JButton();
        x10 = new javax.swing.JButton();
        x11 = new javax.swing.JButton();
        x12 = new javax.swing.JButton();
        x13 = new javax.swing.JButton();
        x14 = new javax.swing.JButton();
        x15 = new javax.swing.JButton();
        x17 = new javax.swing.JButton();
        x18 = new javax.swing.JButton();
        g1 = new javax.swing.JCheckBox();
        g2 = new javax.swing.JCheckBox();
        x19 = new javax.swing.JButton();
        x21 = new javax.swing.JButton();
        s1 = new javax.swing.JButton();
        d1 = new javax.swing.JDesktopPane();
        x16 = new javax.swing.JButton();
        b8 = new javax.swing.JButton();
        b9 = new javax.swing.JButton();
        b6 = new javax.swing.JButton();
        b10 = new javax.swing.JButton();
        b5 = new javax.swing.JButton();
        b4 = new javax.swing.JButton();
        x22 = new javax.swing.JButton();
        x23 = new javax.swing.JButton();
        x24 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        llb = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        sinh = new javax.swing.JButton();
        cosh = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        a1 = new javax.swing.JTextField();
        d4 = new javax.swing.JDesktopPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        t1 = new javax.swing.JList();
        t2 = new javax.swing.JComboBox();
        q2 = new javax.swing.JButton();
        y1 = new javax.swing.JTextField();
        y2 = new javax.swing.JTextField();
        z2 = new javax.swing.JLabel();
        z1 = new javax.swing.JLabel();
        z3 = new javax.swing.JLabel();
        y3 = new javax.swing.JTextField();
        d11 = new javax.swing.JButton();
        z4 = new javax.swing.JLabel();
        y4 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        y14 = new javax.swing.JLabel();
        y13 = new javax.swing.JLabel();
        y12 = new javax.swing.JLabel();
        y11 = new javax.swing.JLabel();
        q1 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        v1 = new javax.swing.JInternalFrame();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jScrollPane7 = new javax.swing.JScrollPane();
        a5 = new javax.swing.JTable();
        a7 = new javax.swing.JTextField();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jDesktopPane3 = new javax.swing.JDesktopPane();
        size = new javax.swing.JComboBox();
        fo = new javax.swing.JComboBox();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        a6 = new javax.swing.JComboBox();
        afo = new javax.swing.JCheckBox();
        prbtn = new javax.swing.JButton();
        jDesktopPane7 = new javax.swing.JDesktopPane();
        jDesktopPane9 = new javax.swing.JDesktopPane();
        forb = new javax.swing.JCheckBox();
        addrb = new javax.swing.JCheckBox();
        stab = new javax.swing.JCheckBox();
        ggl = new javax.swing.JCheckBox();
        vggl = new javax.swing.JCheckBox();
        hggl = new javax.swing.JCheckBox();
        jDesktopPane8 = new javax.swing.JDesktopPane();
        jDesktopPane4 = new javax.swing.JDesktopPane();
        jc7 = new javax.swing.JCheckBox();
        jc8 = new javax.swing.JCheckBox();
        jc9 = new javax.swing.JCheckBox();
        jc10 = new javax.swing.JCheckBox();
        jc6 = new javax.swing.JCheckBox();
        jc5 = new javax.swing.JCheckBox();
        jc4 = new javax.swing.JCheckBox();
        jc3 = new javax.swing.JCheckBox();
        jc2 = new javax.swing.JCheckBox();
        jc1 = new javax.swing.JCheckBox();
        jc13 = new javax.swing.JCheckBox();
        jc12 = new javax.swing.JCheckBox();
        jc11 = new javax.swing.JCheckBox();
        jc14 = new javax.swing.JCheckBox();
        jc15 = new javax.swing.JCheckBox();
        bnm = new javax.swing.JLabel();
        adb = new javax.swing.JTextField();
        sb = new javax.swing.JTextField();
        d3 = new javax.swing.JDesktopPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        a2 = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        l1 = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        kk = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        a4 = new javax.swing.JTextArea();
        v2 = new javax.swing.JInternalFrame();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        a8 = new javax.swing.JTextArea();
        h5 = new javax.swing.JButton();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        jScrollPane9 = new javax.swing.JScrollPane();
        j2 = new javax.swing.JTree();
        jPanel3 = new javax.swing.JPanel();
        le1 = new javax.swing.JTextField();
        jButton21 = new javax.swing.JButton();
        work = new javax.swing.JButton();
        t11 = new javax.swing.JMenuBar();
        h44 = new javax.swing.JMenu();
        jMenuItem42 = new javax.swing.JMenuItem();
        jMenuItem43 = new javax.swing.JMenuItem();
        jMenuItem19 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem18 = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem33 = new javax.swing.JMenuItem();
        jMenuItem34 = new javax.swing.JMenuItem();
        jMenuItem35 = new javax.swing.JMenuItem();
        jMenuItem36 = new javax.swing.JMenuItem();
        jMenuItem37 = new javax.swing.JMenuItem();
        jMenuItem38 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        q09 = new javax.swing.JMenu();
        jMenuItem13 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenuItem15 = new javax.swing.JMenuItem();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenuItem25 = new javax.swing.JMenuItem();
        q06 = new javax.swing.JMenu();
        q00 = new javax.swing.JMenuItem();
        q01 = new javax.swing.JMenuItem();
        q02 = new javax.swing.JMenuItem();
        q03 = new javax.swing.JMenuItem();
        q04 = new javax.swing.JMenuItem();
        jMenuItem44 = new javax.swing.JMenuItem();
        jMenuItem45 = new javax.swing.JMenuItem();
        jMenuItem46 = new javax.swing.JMenuItem();
        i2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem26 = new javax.swing.JMenuItem();
        jMenuItem27 = new javax.swing.JMenuItem();
        jMenuItem28 = new javax.swing.JMenuItem();
        jMenuItem29 = new javax.swing.JMenuItem();
        jMenuItem30 = new javax.swing.JMenuItem();
        jMenuItem31 = new javax.swing.JMenuItem();
        jMenuItem39 = new javax.swing.JMenuItem();
        jMenuItem32 = new javax.swing.JMenuItem();
        jMenuItem41 = new javax.swing.JMenuItem();
        jMenuItem47 = new javax.swing.JMenuItem();
        q07 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenuItem20 = new javax.swing.JMenuItem();
        jMenuItem21 = new javax.swing.JMenuItem();
        jMenuItem22 = new javax.swing.JMenuItem();
        jMenuItem23 = new javax.swing.JMenuItem();
        jMenuItem24 = new javax.swing.JMenuItem();
        jMenuItem40 = new javax.swing.JMenuItem();

        setTitle("InArCo Calculator");
        setForeground(java.awt.Color.white);
        setResizable(false);

        k1.setBackground(new java.awt.Color(255, 255, 255));

        k8.setFont(new java.awt.Font("Algerian", 1, 18)); // NOI18N
        k8.setForeground(new java.awt.Color(255, 102, 204));
        k8.setText("Inarco Calculator");
        k8.setFocusable(false);
        k1.add(k8);
        k8.setBounds(460, 0, 220, 40);

        d2.setBackground(new java.awt.Color(204, 255, 255));
        d2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3), "ARITHMATIC CONTROLS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Algerian", 1, 18), new java.awt.Color(255, 102, 255))); // NOI18N
        d2.setFocusable(false);

        x1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        x1.setForeground(new java.awt.Color(0, 102, 0));
        x1.setText("1");
        x1.setFocusable(false);
        x1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x1ActionPerformed(evt);
            }
        });
        d2.add(x1);
        x1.setBounds(20, 40, 50, 50);

        x2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        x2.setForeground(new java.awt.Color(0, 102, 0));
        x2.setText("2");
        x2.setFocusable(false);
        x2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x2ActionPerformed(evt);
            }
        });
        d2.add(x2);
        x2.setBounds(70, 40, 50, 50);

        x3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        x3.setForeground(new java.awt.Color(0, 102, 0));
        x3.setText("3");
        x3.setFocusable(false);
        x3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x3ActionPerformed(evt);
            }
        });
        d2.add(x3);
        x3.setBounds(120, 40, 50, 50);

        x4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        x4.setForeground(new java.awt.Color(0, 102, 0));
        x4.setText("4");
        x4.setFocusable(false);
        x4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x4ActionPerformed(evt);
            }
        });
        d2.add(x4);
        x4.setBounds(20, 90, 50, 50);

        x5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        x5.setForeground(new java.awt.Color(0, 102, 0));
        x5.setText("5");
        x5.setFocusable(false);
        x5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x5ActionPerformed(evt);
            }
        });
        d2.add(x5);
        x5.setBounds(70, 90, 50, 50);

        x6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        x6.setForeground(new java.awt.Color(0, 102, 0));
        x6.setText("6");
        x6.setFocusable(false);
        x6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x6ActionPerformed(evt);
            }
        });
        d2.add(x6);
        x6.setBounds(120, 90, 50, 50);

        x7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        x7.setForeground(new java.awt.Color(0, 102, 0));
        x7.setText("7");
        x7.setFocusable(false);
        x7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x7ActionPerformed(evt);
            }
        });
        d2.add(x7);
        x7.setBounds(20, 140, 50, 50);

        x8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        x8.setForeground(new java.awt.Color(0, 102, 0));
        x8.setText("8");
        x8.setFocusable(false);
        x8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x8ActionPerformed(evt);
            }
        });
        d2.add(x8);
        x8.setBounds(70, 140, 50, 50);

        x9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        x9.setForeground(new java.awt.Color(0, 102, 0));
        x9.setText("9");
        x9.setFocusable(false);
        x9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x9ActionPerformed(evt);
            }
        });
        d2.add(x9);
        x9.setBounds(120, 140, 50, 50);

        x10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        x10.setForeground(new java.awt.Color(204, 0, 51));
        x10.setText(".");
        x10.setFocusable(false);
        x10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x10ActionPerformed(evt);
            }
        });
        d2.add(x10);
        x10.setBounds(20, 190, 50, 50);

        x11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        x11.setForeground(new java.awt.Color(0, 102, 0));
        x11.setText("0");
        x11.setFocusable(false);
        x11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x11ActionPerformed(evt);
            }
        });
        d2.add(x11);
        x11.setBounds(70, 190, 50, 50);

        x12.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        x12.setForeground(new java.awt.Color(204, 0, 51));
        x12.setText("%");
        x12.setFocusable(false);
        x12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x12ActionPerformed(evt);
            }
        });
        d2.add(x12);
        x12.setBounds(120, 190, 50, 50);

        x13.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        x13.setForeground(new java.awt.Color(204, 0, 51));
        x13.setText("+");
        x13.setFocusable(false);
        x13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x13ActionPerformed(evt);
            }
        });
        x13.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                x13KeyPressed(evt);
            }
        });
        d2.add(x13);
        x13.setBounds(170, 40, 70, 50);

        x14.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        x14.setForeground(new java.awt.Color(204, 0, 51));
        x14.setText("-");
        x14.setFocusable(false);
        x14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x14ActionPerformed(evt);
            }
        });
        d2.add(x14);
        x14.setBounds(240, 40, 70, 50);

        x15.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        x15.setForeground(new java.awt.Color(204, 0, 51));
        x15.setText("*");
        x15.setFocusable(false);
        x15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x15ActionPerformed(evt);
            }
        });
        d2.add(x15);
        x15.setBounds(170, 90, 70, 50);

        x17.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        x17.setForeground(new java.awt.Color(204, 0, 51));
        x17.setText("/");
        x17.setFocusable(false);
        x17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x17ActionPerformed(evt);
            }
        });
        d2.add(x17);
        x17.setBounds(240, 90, 70, 50);

        x18.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        x18.setForeground(new java.awt.Color(255, 102, 102));
        x18.setText("=");
        x18.setFocusable(false);
        x18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x18ActionPerformed(evt);
            }
        });
        d2.add(x18);
        x18.setBounds(170, 140, 140, 50);

        g1.setBackground(new java.awt.Color(153, 255, 102));
        g1.setText("Keyboard Disabled");
        g1.setFocusable(false);
        g1.setMargin(new java.awt.Insets(2, 1, 2, 1));
        g1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g1ActionPerformed(evt);
            }
        });
        d2.add(g1);
        g1.setBounds(20, 250, 130, 30);

        g2.setBackground(new java.awt.Color(153, 255, 102));
        g2.setText("OnScreen Num Disabled");
        g2.setFocusable(false);
        g2.setMargin(new java.awt.Insets(2, 1, 2, 0));
        g2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                g2ActionPerformed(evt);
            }
        });
        d2.add(g2);
        g2.setBounds(150, 250, 160, 30);

        x19.setBackground(new java.awt.Color(0, 255, 255));
        x19.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        x19.setForeground(new java.awt.Color(51, 51, 255));
        x19.setText("C");
        x19.setFocusable(false);
        x19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x19ActionPerformed(evt);
            }
        });
        d2.add(x19);
        x19.setBounds(170, 190, 50, 50);

        x21.setBackground(new java.awt.Color(0, 255, 255));
        x21.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        x21.setForeground(new java.awt.Color(51, 51, 255));
        x21.setText("BackSpace");
        x21.setFocusable(false);
        x21.setMargin(new java.awt.Insets(2, 1, 2, 1));
        x21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x21ActionPerformed(evt);
            }
        });
        d2.add(x21);
        x21.setBounds(220, 190, 90, 50);

        s1.setBackground(new java.awt.Color(51, 255, 255));
        s1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        s1.setForeground(new java.awt.Color(51, 51, 51));
        s1.setText("PRINT SOLUTION");
        s1.setFocusable(false);
        s1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                s1ActionPerformed(evt);
            }
        });
        d2.add(s1);
        s1.setBounds(70, 290, 170, 40);

        k1.add(d2);
        d2.setBounds(10, 90, 330, 340);

        d1.setBackground(new java.awt.Color(204, 255, 255));
        d1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3), "ARITHMATIC CONTROLS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Algerian", 1, 18), new java.awt.Color(255, 102, 255))); // NOI18N
        d1.setFocusable(false);

        x16.setText("Sin");
        x16.setFocusable(false);
        x16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x16ActionPerformed(evt);
            }
        });
        d1.add(x16);
        x16.setBounds(20, 40, 100, 40);

        b8.setText("cos");
        b8.setFocusable(false);
        b8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b8ActionPerformed(evt);
            }
        });
        d1.add(b8);
        b8.setBounds(120, 40, 100, 40);

        b9.setText("tan");
        b9.setFocusable(false);
        b9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b9ActionPerformed(evt);
            }
        });
        d1.add(b9);
        b9.setBounds(220, 40, 100, 40);

        b6.setText("<html><body>x<sup>3</sup></body></html> ");
        b6.setFocusable(false);
        b6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b6ActionPerformed(evt);
            }
        });
        d1.add(b6);
        b6.setBounds(220, 130, 100, 40);

        b10.setText("Cube Root");
        b10.setFocusable(false);
        b10.setMargin(new java.awt.Insets(2, 0, 2, 0));
        b10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b10ActionPerformed(evt);
            }
        });
        d1.add(b10);
        b10.setBounds(120, 210, 100, 50);

        b5.setText("<html><body>x<sup>2</sup></body></html> ");
        b5.setFocusable(false);
        b5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b5ActionPerformed(evt);
            }
        });
        d1.add(b5);
        b5.setBounds(120, 130, 100, 40);

        b4.setText("Square Root");
        b4.setFocusable(false);
        b4.setMargin(new java.awt.Insets(2, 0, 2, 0));
        b4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b4ActionPerformed(evt);
            }
        });
        d1.add(b4);
        b4.setBounds(20, 210, 100, 50);

        x22.setText("Pie");
        x22.setFocusable(false);
        x22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x22ActionPerformed(evt);
            }
        });
        d1.add(x22);
        x22.setBounds(20, 130, 100, 40);

        x23.setText("1/x");
        x23.setFocusable(false);
        x23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x23ActionPerformed(evt);
            }
        });
        d1.add(x23);
        x23.setBounds(20, 170, 100, 40);

        x24.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        x24.setText("+/-");
        x24.setFocusable(false);
        x24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                x24ActionPerformed(evt);
            }
        });
        d1.add(x24);
        x24.setBounds(120, 170, 100, 40);

        jButton2.setText("log(x)");
        jButton2.setFocusable(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        d1.add(jButton2);
        jButton2.setBounds(220, 170, 100, 40);

        jButton3.setText("R<->D");
        jButton3.setFocusable(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        d1.add(jButton3);
        jButton3.setBounds(220, 210, 100, 50);

        jButton14.setText("<html><body>x<sup>1/y</sup></body></html>\n");
        jButton14.setFocusable(false);
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        d1.add(jButton14);
        jButton14.setBounds(120, 260, 100, 50);

        llb.setText("<html><body>x<sup>  y</sup></body></html>");
        llb.setFocusable(false);
        llb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                llbActionPerformed(evt);
            }
        });
        d1.add(llb);
        llb.setBounds(20, 260, 100, 50);

        jButton18.setText("absolute");
        jButton18.setFocusable(false);
        jButton18.setMargin(new java.awt.Insets(2, 0, 2, 0));
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });
        d1.add(jButton18);
        jButton18.setBounds(220, 260, 100, 50);

        sinh.setText("sinh");
        sinh.setFocusable(false);
        sinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sinhActionPerformed(evt);
            }
        });
        d1.add(sinh);
        sinh.setBounds(20, 80, 100, 50);

        cosh.setText("cosh");
        cosh.setFocusable(false);
        cosh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coshActionPerformed(evt);
            }
        });
        d1.add(cosh);
        cosh.setBounds(120, 80, 100, 50);

        jButton17.setText("tanh");
        jButton17.setFocusable(false);
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        d1.add(jButton17);
        jButton17.setBounds(220, 80, 100, 50);

        k1.add(d1);
        d1.setBounds(340, 90, 340, 340);

        a1.setBackground(new java.awt.Color(51, 255, 255));
        a1.setEditable(false);
        a1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        a1.setForeground(new java.awt.Color(204, 0, 51));
        a1.setText("0");
        a1.setToolTipText("enter here");
        a1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        a1.setFocusable(false);
        a1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a1ActionPerformed(evt);
            }
        });
        a1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                a1KeyPressed(evt);
            }
        });
        k1.add(a1);
        a1.setBounds(350, 40, 400, 30);

        d4.setBackground(new java.awt.Color(204, 255, 255));
        d4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3), "ARITHMATIC CONTROLS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Algerian", 1, 18), new java.awt.Color(255, 102, 255))); // NOI18N
        d4.setFocusable(false);

        t1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "RECTANGLE", "SQUARE", "CIRCLE", "TRIANGLE", "CUBE", "CUBOID", "TRAPEZIUM", "RHOMBUS", "CONE", "CYLINDER", "SPHERE" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        t1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        t1.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                t1HierarchyChanged(evt);
            }
        });
        t1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                t1ValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(t1);

        d4.add(jScrollPane3);
        jScrollPane3.setBounds(10, 40, 110, 200);

        t2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "~$~<<SELECT>>~$~" }));
        t2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                t2ItemStateChanged(evt);
            }
        });
        d4.add(t2);
        t2.setBounds(130, 60, 140, 30);

        q2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        q2.setText("FIND");
        q2.setFocusable(false);
        q2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                q2ActionPerformed(evt);
            }
        });
        d4.add(q2);
        q2.setBounds(550, 100, 110, 40);

        y1.setNextFocusableComponent(y2);
        y1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                y1ActionPerformed(evt);
            }
        });
        y1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                y1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                y1KeyReleased(evt);
            }
        });
        d4.add(y1);
        y1.setBounds(370, 40, 130, 20);

        y2.setNextFocusableComponent(y3);
        y2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                y2ActionPerformed(evt);
            }
        });
        y2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                y2KeyReleased(evt);
            }
        });
        d4.add(y2);
        y2.setBounds(370, 80, 130, 20);

        z2.setForeground(new java.awt.Color(204, 0, 0));
        z2.setText("BREADTH");
        d4.add(z2);
        z2.setBounds(280, 80, 80, 30);

        z1.setForeground(new java.awt.Color(204, 0, 0));
        z1.setText("LENGTH");
        d4.add(z1);
        z1.setBounds(280, 40, 80, 30);

        z3.setForeground(new java.awt.Color(204, 0, 51));
        z3.setText("RADIUS");
        d4.add(z3);
        z3.setBounds(280, 120, 70, 20);

        y3.setNextFocusableComponent(y4);
        y3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                y3ActionPerformed(evt);
            }
        });
        y3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                y3KeyReleased(evt);
            }
        });
        d4.add(y3);
        y3.setBounds(370, 120, 130, 20);

        d11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        d11.setForeground(new java.awt.Color(51, 51, 51));
        d11.setText("PROCEED");
        d11.setFocusable(false);
        d11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d11ActionPerformed(evt);
            }
        });
        d4.add(d11);
        d11.setBounds(130, 140, 130, 40);

        z4.setForeground(new java.awt.Color(204, 0, 51));
        z4.setText("SIDE 4");
        d4.add(z4);
        z4.setBounds(280, 160, 90, 14);

        y4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                y4ActionPerformed(evt);
            }
        });
        y4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                y4KeyReleased(evt);
            }
        });
        d4.add(y4);
        y4.setBounds(370, 160, 130, 20);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 0, 51));
        jLabel3.setText("WHAT TO FIND");
        d4.add(jLabel3);
        jLabel3.setBounds(160, 40, 110, 14);

        y14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        y14.setText(" cm");
        d4.add(y14);
        y14.setBounds(500, 160, 34, 14);

        y13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        y13.setText(" cm");
        d4.add(y13);
        y13.setBounds(500, 120, 34, 17);

        y12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        y12.setText(" cm");
        d4.add(y12);
        y12.setBounds(500, 80, 34, 17);

        y11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        y11.setText(" cm");
        d4.add(y11);
        y11.setBounds(500, 40, 34, 17);

        q1.setEditable(false);
        q1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        q1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ANSWER", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14), new java.awt.Color(255, 0, 51))); // NOI18N
        q1.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        d4.add(q1);
        q1.setBounds(280, 60, 380, 120);

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        d4.add(jSeparator1);
        jSeparator1.setBounds(120, 40, 10, 200);

        k1.add(d4);
        d4.setBounds(10, 430, 670, 250);

        v1.setClosable(true);
        v1.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        v1.setTitle("Worksheet");
        v1.setVisible(true);

        jDesktopPane1.setBackground(new java.awt.Color(204, 255, 255));

        a5.setAutoCreateRowSorter(true);
        a5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"2", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"3", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"4", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"5", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"6", "", null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"7", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"8", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"9", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"10", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"11", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"12", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"13", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"14", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"15", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"16", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"17", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"18", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"19", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"20", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"21", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"22", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"23", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"24", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"25", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"26", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"27", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"28", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"29", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"30", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"31", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"32", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"33", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"34", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"35", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"36", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"37", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"38", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"39", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"40", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"41", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"42", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"43", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"44", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"45", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"46", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"47", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"48", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"49", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"50", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"51", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"52", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"53", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"54", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"55", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"56", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"57", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"58", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"59", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"60", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"61", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"62", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"63", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"64", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"65", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"66", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"67", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"68", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"69", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"70", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"71", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"72", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"73", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"74", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"75", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"76", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"77", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"78", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"79", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"80", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"81", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"82", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"83", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"84", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"85", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"86", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"87", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"89", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"90", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"91", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"92", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"93", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"94", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"95", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"96", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"97", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"98", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"99", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"100", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"101", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"102", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"103", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"104", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"105", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"106", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"107", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"108", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"109", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"110", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"111", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"112", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"113", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"114", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"115", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"116", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"117", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"118", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"119", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"120", "", null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"121", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"122", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"123", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"124", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"125", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"126", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"127", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"128", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"129", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"130", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"131", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"132", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"133", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"134", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"135", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"136", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"137", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"138", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"139", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"140", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"141", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"142", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"143", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"145", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"146", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"147", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"148", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"149", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"150", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"151", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"152", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"153", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"154", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"155", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"156", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"157", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"158", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"159", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"160", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"161", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"162", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"163", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"164", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"165", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"166", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"167", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"168", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"169", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"170", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"171", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"172", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"173", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"174", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"175", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"176", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"177", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"178", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"179", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"180", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"181", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"182", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"183", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"184", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"185", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"186", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"187", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"188", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"189", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"190", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"191", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"192", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"193", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"194", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"195", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"196", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"197", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"198", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"199", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"200", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true, true, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        a5.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        a5.setColumnSelectionAllowed(true);
        a5.setComponentPopupMenu(jPopupMenu1);
        a5.setDebugGraphicsOptions(javax.swing.DebugGraphics.NONE_OPTION);
        a5.setInheritsPopupMenu(true);
        a5.setRowHeight(21);
        a5.getTableHeader().setReorderingAllowed(false);
        a5.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                a5MouseDragged(evt);
            }
        });
        a5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                a5MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                a5MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                a5MouseReleased(evt);
            }
        });
        a5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                a5KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                a5KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                a5KeyTyped(evt);
            }
        });
        jScrollPane7.setViewportView(a5);
        a5.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (a5.getColumnModel().getColumnCount() > 0) {
            a5.getColumnModel().getColumn(0).setResizable(false);
            a5.getColumnModel().getColumn(0).setPreferredWidth(30);
        }

        jDesktopPane1.add(jScrollPane7);
        jScrollPane7.setBounds(0, 170, 990, 420);

        a7.setToolTipText("Formula Bar");
        a7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        a7.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                a7KeyReleased(evt);
            }
        });
        jDesktopPane1.add(a7);
        a7.setBounds(200, 140, 790, 30);

        jTabbedPane2.setOpaque(true);

        jDesktopPane3.setBackground(new java.awt.Color(51, 153, 255));

        size.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", "62", "63", "64", "65", "66", "67", "68", "69", "70", "71", "72" }));
        size.setSelectedIndex(7);
        size.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(51, 51, 255)));
        size.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                sizeItemStateChanged(evt);
            }
        });
        jDesktopPane3.add(size);
        size.setBounds(180, 20, 60, 20);

        fo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Abadi MT Condensed Light", "Albertus Extra Bold", "Albertus Medium", "Antique Olive", "Arial", "Arial Black", "Arial MT", "Arial Narrow", "Bazooka", "Book Antiqua", "Bookman Old Style", "Boulder", "Calisto MT", "Calligrapher", "Century Gothic", "Century Schoolbook", "Cezanne", "CG Omega", "CG Times", "Charlesworth", "Chaucer", "Clarendon Condensed", "Comic Sans MS", "Copperplate Gothic Bold", "Copperplate Gothic Light", "Cornerstone", "Coronet", "Courier", "Courier New", "Cuckoo", "Dauphin", "Denmark", "Fransiscan", "Garamond", "Geneva", "Haettenschweiler", "Heather", "Helvetica", "Herald", "Impact", "Jester", "Letter Gothic", "Lithograph", "Lithograph Light", "Long Island", "Lucida Console", "Lucida Handwriting", "Lucida Sans", "Lucida Sans Unicode", "Marigold", "Market", "Matisse ITC", "MS LineDraw", "News GothicMT", "OCR A Extended", "Old Century", "Pegasus", "Pickwick", "Poster", "Pythagoras", "Sceptre", "Sherwood", "Signboard", "Socket", "Steamer", "Storybook", "Subway", "Tahoma", "Technical", "Teletype", "Tempus Sans ITC", "Times", "Times New Roman", "Times New Roman PS", "Trebuchet MS", "Tristan", "Tubular", "Unicorn", "Univers", "Univers Condensed", "Vagabond", "Verdana", "Westminster" }));
        fo.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(51, 51, 255)));
        fo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                foItemStateChanged(evt);
            }
        });
        jDesktopPane3.add(fo);
        fo.setBounds(10, 20, 170, 21);

        jButton15.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton15.setText("<html><body><u>U</u></body></html"); // NOI18N
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jDesktopPane3.add(jButton15);
        jButton15.setBounds(110, 60, 50, 40);

        jButton16.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        jButton16.setText("I");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        jDesktopPane3.add(jButton16);
        jButton16.setBounds(60, 60, 50, 40);

        jButton19.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton19.setText("B");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });
        jDesktopPane3.add(jButton19);
        jButton19.setBounds(10, 60, 50, 40);

        a6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AutoSum", "Sum", "Product", "Average", "Max", "Min" }));
        a6.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                a6ItemStateChanged(evt);
            }
        });
        a6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                a6ActionPerformed(evt);
            }
        });
        jDesktopPane3.add(a6);
        a6.setBounds(760, 40, 100, 20);

        afo.setForeground(new java.awt.Color(255, 51, 51));
        afo.setText(" Fill Handle");
        afo.setOpaque(false);
        afo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                afoActionPerformed(evt);
            }
        });
        jDesktopPane3.add(afo);
        afo.setBounds(760, 70, 100, 23);

        prbtn.setToolTipText("Print");
        prbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prbtnActionPerformed(evt);
            }
        });
        jDesktopPane3.add(prbtn);
        prbtn.setBounds(870, 0, 120, 110);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 995, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Home", jPanel2);

        jDesktopPane7.setBackground(new java.awt.Color(255, 255, 204));

        jDesktopPane9.setBackground(new java.awt.Color(102, 153, 255));
        jDesktopPane9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Show/Hide", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BOTTOM, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N

        forb.setSelected(true);
        forb.setText("Formula Bar");
        forb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                forbActionPerformed(evt);
            }
        });
        jDesktopPane9.add(forb);
        forb.setBounds(10, 10, 110, 23);

        addrb.setSelected(true);
        addrb.setText("Address Bar");
        addrb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addrbActionPerformed(evt);
            }
        });
        jDesktopPane9.add(addrb);
        addrb.setBounds(10, 30, 110, 23);

        stab.setSelected(true);
        stab.setText("Status Bar");
        stab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stabActionPerformed(evt);
            }
        });
        jDesktopPane9.add(stab);
        stab.setBounds(10, 50, 110, 23);

        ggl.setSelected(true);
        ggl.setText("Gridlines");
        ggl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gglActionPerformed(evt);
            }
        });
        jDesktopPane9.add(ggl);
        ggl.setBounds(120, 10, 140, 23);

        vggl.setSelected(true);
        vggl.setText("Verticle Gridlines");
        vggl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vgglActionPerformed(evt);
            }
        });
        jDesktopPane9.add(vggl);
        vggl.setBounds(120, 30, 140, 23);

        hggl.setSelected(true);
        hggl.setText("Horizontal Gridlines");
        hggl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hgglActionPerformed(evt);
            }
        });
        jDesktopPane9.add(hggl);
        hggl.setBounds(120, 50, 140, 23);

        jDesktopPane7.add(jDesktopPane9);
        jDesktopPane9.setBounds(0, 0, 280, 110);

        jTabbedPane2.addTab("View", jDesktopPane7);

        jDesktopPane8.setBackground(new java.awt.Color(204, 255, 204));
        jTabbedPane2.addTab("Insert", jDesktopPane8);

        jDesktopPane4.setBackground(new java.awt.Color(255, 204, 204));

        jc7.setForeground(new java.awt.Color(51, 255, 51));
        jc7.setText("<html><body>x<sup>2</sup></body></html> ");
        jc7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jc7ActionPerformed(evt);
            }
        });
        jDesktopPane4.add(jc7);
        jc7.setBounds(100, 20, 100, 25);

        jc8.setForeground(new java.awt.Color(51, 255, 51));
        jc8.setText("<html><body>x<sup>3</sup></body></html> ");
        jc8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jc8ActionPerformed(evt);
            }
        });
        jDesktopPane4.add(jc8);
        jc8.setBounds(100, 40, 100, 25);

        jc9.setForeground(new java.awt.Color(51, 255, 51));
        jc9.setText("1/x");
        jc9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jc9ActionPerformed(evt);
            }
        });
        jDesktopPane4.add(jc9);
        jc9.setBounds(100, 60, 100, 23);

        jc10.setForeground(new java.awt.Color(51, 255, 51));
        jc10.setText("log(x)");
        jc10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jc10ActionPerformed(evt);
            }
        });
        jDesktopPane4.add(jc10);
        jc10.setBounds(100, 80, 100, 23);

        jc6.setForeground(new java.awt.Color(51, 255, 51));
        jc6.setText("tanh");
        jc6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jc6ActionPerformed(evt);
            }
        });
        jDesktopPane4.add(jc6);
        jc6.setBounds(100, 0, 100, 23);

        jc5.setForeground(new java.awt.Color(51, 255, 51));
        jc5.setText("cosh");
        jc5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jc5ActionPerformed(evt);
            }
        });
        jDesktopPane4.add(jc5);
        jc5.setBounds(0, 80, 100, 23);

        jc4.setForeground(new java.awt.Color(51, 255, 51));
        jc4.setText("sinh");
        jc4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jc4ActionPerformed(evt);
            }
        });
        jDesktopPane4.add(jc4);
        jc4.setBounds(0, 60, 100, 23);

        jc3.setForeground(new java.awt.Color(51, 255, 51));
        jc3.setText("tan");
        jc3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jc3ActionPerformed(evt);
            }
        });
        jDesktopPane4.add(jc3);
        jc3.setBounds(0, 40, 100, 23);

        jc2.setForeground(new java.awt.Color(51, 255, 51));
        jc2.setText("cos");
        jc2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jc2ActionPerformed(evt);
            }
        });
        jDesktopPane4.add(jc2);
        jc2.setBounds(0, 20, 100, 23);

        jc1.setForeground(new java.awt.Color(51, 255, 51));
        jc1.setText("sin");
        jc1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jc1ActionPerformed(evt);
            }
        });
        jDesktopPane4.add(jc1);
        jc1.setBounds(0, 0, 100, 23);

        jc13.setForeground(new java.awt.Color(51, 255, 51));
        jc13.setText("absolute");
        jc13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jc13ActionPerformed(evt);
            }
        });
        jDesktopPane4.add(jc13);
        jc13.setBounds(200, 40, 110, 23);

        jc12.setForeground(new java.awt.Color(51, 255, 51));
        jc12.setText("cube root");
        jc12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jc12ActionPerformed(evt);
            }
        });
        jDesktopPane4.add(jc12);
        jc12.setBounds(200, 20, 110, 23);

        jc11.setForeground(new java.awt.Color(51, 255, 51));
        jc11.setText("square root");
        jc11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jc11ActionPerformed(evt);
            }
        });
        jDesktopPane4.add(jc11);
        jc11.setBounds(200, 0, 110, 23);

        jc14.setForeground(new java.awt.Color(51, 255, 51));
        jc14.setText("Factorial");
        jc14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jc14ActionPerformed(evt);
            }
        });
        jDesktopPane4.add(jc14);
        jc14.setBounds(200, 60, 110, 23);

        jc15.setForeground(new java.awt.Color(51, 255, 51));
        jc15.setText("Table");
        jc15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jc15ActionPerformed(evt);
            }
        });
        jDesktopPane4.add(jc15);
        jc15.setBounds(200, 80, 110, 23);

        jTabbedPane2.addTab("Formulas", jDesktopPane4);

        jDesktopPane1.add(jTabbedPane2);
        jTabbedPane2.setBounds(0, 0, 1000, 140);

        bnm.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        bnm.setText("fx");
        jDesktopPane1.add(bnm);
        bnm.setBounds(180, 140, 20, 30);

        adb.setToolTipText("Name Box");
        adb.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jDesktopPane1.add(adb);
        adb.setBounds(0, 140, 170, 30);

        sb.setEditable(false);
        sb.setText("Ready");
        sb.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jDesktopPane1.add(sb);
        sb.setBounds(0, 590, 680, 30);

        javax.swing.GroupLayout v1Layout = new javax.swing.GroupLayout(v1.getContentPane());
        v1.getContentPane().setLayout(v1Layout);
        v1Layout.setHorizontalGroup(
            v1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 994, Short.MAX_VALUE)
        );
        v1Layout.setVerticalGroup(
            v1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 651, Short.MAX_VALUE)
        );

        k1.add(v1);
        v1.setBounds(10, 700, 1010, 680);

        d3.setBackground(new java.awt.Color(204, 255, 255));
        d3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3), "ARITHMATIC CONTROLS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Algerian", 1, 18), new java.awt.Color(255, 102, 255))); // NOI18N
        d3.setForeground(new java.awt.Color(0, 0, 204));
        d3.setFocusable(false);

        a2.setEditable(false);
        a2.setBackground(new java.awt.Color(204, 204, 204));
        a2.setColumns(20);
        a2.setFont(new java.awt.Font("Algerian", 1, 18)); // NOI18N
        a2.setForeground(new java.awt.Color(204, 0, 0));
        a2.setLineWrap(true);
        a2.setRows(5);
        jScrollPane2.setViewportView(a2);

        d3.add(jScrollPane2);
        jScrollPane2.setBounds(150, 20, 170, 270);

        l1.setBackground(new java.awt.Color(204, 255, 204));
        l1.setFont(new java.awt.Font("Times New Roman", 1, 17)); // NOI18N
        l1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "TABLE", "DETAILS", "FACTORS", "FACTORIAL", "ODD NUMBER", "EVEN NUMBER" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        l1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(l1);

        d3.add(jScrollPane1);
        jScrollPane1.setBounds(10, 20, 140, 270);

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Algerian", 3, 36)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("CALCULATE");
        jButton1.setFocusable(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        d3.add(jButton1);
        jButton1.setBounds(10, 530, 310, 50);

        jButton6.setFont(new java.awt.Font("Monotype Corsiva", 1, 24)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 51, 255));
        jButton6.setText("<HTML>\n<BODY>\n<CENTER>\nSIMPLE \n<BR>\nINTEREST\n</CENTER>\n</BODY>\n</HTML>");
        jButton6.setFocusable(false);
        jButton6.setMargin(new java.awt.Insets(2, 1, 2, 1));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        d3.add(jButton6);
        jButton6.setBounds(10, 470, 140, 60);

        jButton7.setFont(new java.awt.Font("Monotype Corsiva", 1, 24)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 51, 255));
        jButton7.setText("<HTML>\n<BODY>\n<CENTER>\nCOMPOUND\n<BR>\nINTEREST\n</CENTER>\n</BODY>\n</HTML> ");
        jButton7.setFocusable(false);
        jButton7.setMargin(new java.awt.Insets(1, 1, 2, 1));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        d3.add(jButton7);
        jButton7.setBounds(150, 470, 170, 60);

        jButton9.setFont(new java.awt.Font("Algerian", 1, 36)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 0, 0));
        jButton9.setText("HCF");
        jButton9.setFocusable(false);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        d3.add(jButton9);
        jButton9.setBounds(150, 410, 170, 60);

        jButton8.setFont(new java.awt.Font("Algerian", 1, 36)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 0, 0));
        jButton8.setText("LCM");
        jButton8.setFocusable(false);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        d3.add(jButton8);
        jButton8.setBounds(10, 410, 140, 60);

        jButton10.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        jButton10.setForeground(new java.awt.Color(0, 153, 0));
        jButton10.setText("PROFIT %");
        jButton10.setFocusable(false);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        d3.add(jButton10);
        jButton10.setBounds(150, 350, 170, 60);

        kk.setFont(new java.awt.Font("Algerian", 1, 18)); // NOI18N
        kk.setForeground(new java.awt.Color(51, 51, 255));
        kk.setText("Pythagoras");
        kk.setFocusable(false);
        kk.setMargin(new java.awt.Insets(2, 1, 2, 1));
        kk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kkActionPerformed(evt);
            }
        });
        d3.add(kk);
        kk.setBounds(10, 290, 140, 60);

        jButton12.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        jButton12.setForeground(new java.awt.Color(0, 153, 0));
        jButton12.setText("LOSS %");
        jButton12.setFocusable(false);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        d3.add(jButton12);
        jButton12.setBounds(10, 350, 140, 60);

        jButton13.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        jButton13.setForeground(new java.awt.Color(51, 51, 255));
        jButton13.setText("HERONS");
        jButton13.setFocusable(false);
        jButton13.setMargin(new java.awt.Insets(2, 1, 2, 1));
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        d3.add(jButton13);
        jButton13.setBounds(150, 290, 170, 60);

        k1.add(d3);
        d3.setBounds(680, 90, 330, 590);

        a4.setBackground(new java.awt.Color(51, 255, 102));
        a4.setColumns(20);
        a4.setEditable(false);
        a4.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        a4.setForeground(new java.awt.Color(255, 0, 51));
        a4.setLineWrap(true);
        a4.setRows(5);
        a4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Solution", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N
        jScrollPane5.setViewportView(a4);

        k1.add(jScrollPane5);
        jScrollPane5.setBounds(10, 0, 300, 90);

        v2.setClosable(true);
        v2.setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        v2.setTitle("HELP AND SUPPORT");
        v2.setVisible(true);

        jLabel5.setFont(new java.awt.Font("Algerian", 3, 36)); // NOI18N
        jLabel5.setText("CALCULATOR's HELP AND SUPPORT");
        jLabel5.setFocusable(false);

        a8.setBackground(new java.awt.Color(153, 255, 255));
        a8.setColumns(20);
        a8.setEditable(false);
        a8.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        a8.setForeground(new java.awt.Color(0, 0, 255));
        a8.setLineWrap(true);
        a8.setRows(5);
        a8.setText("\t\t About Universal Calculator\nThis Universal Calculator Consist of many operations of calculation. This Calculator is programmed keeping sense in the mind that user perform his maximum calculation in one calculator.This Universal Calculator consist of following Controls- \n1)Arithmatic Controls.\n2)Scientific Controls\n3)Extra Controls\n4)Mensuration Controls\t\t\n  About Arithmatic Controls\n i)It Performs Simple Arithmatic Operators.\n ii)Keyboard Disabled Option Disabled The Working Of Keyboard.\n iii)On Screen Num Pad Option Disenables All The Buttons Of Simple Mode\n\t\t About Sum(+) function\nSum(+) function performs the sum of two or more than two numbers.Sum(+) function adds the integer values,float values as given by the user.\nExample-\n1)Integer+Integer-\n\t 20+10=30\n2)Float+Integer-\n\t 15.5+5=20.5\n3)Float+Float-\n\t 10.5+5.5=16.0\n\t\t About Subtraction(-) function\nSubtraction(-) function performs the difference of two numbers.Subtract(-) function subtracts the integer values,float values as given by the user.\nExample-\n1)Integer-Integer-\n\t 20-10=10\n2)Float-Integer-\n\t 15.5-5=10.5\n3)Float-Float-\n\t 10.5-5.5=5.0\t\t\n About Multiplication(*) function\nMultiplication(*) function performs the product of two or more than two numbers.Multiplication(*) function multiplies the integer values,float values as given by the user.\nExample-\n1)Integer*Integer-\n\t 20*10=200\n2)Float*Integer-\n\t 2.2*3=6.6\n3)Float*Float-\n\t 2.2*5.1=11.22\t\t\n About Division(/) function\nDivision(/) function performs the Division of two numbers.Division(/) function divides the integer values,float values as given by the user.\nExample-\n1)25*10%\n\t 2.5%\n2)50*10%\n\t 5%\t\t \nAbout Percentage(%) function\nPercentage(%) function calculates the Percentage.\nExample-\n1)Integer/Integer-\n\t 20/10=2\n2)Float/Integer-\n\t 2.2*3=0.734\n3)Float/Float-\n\t 4.2/2.2=1.90\t\t  About Scientific Controls\n i)It Performs Scientic Operators.\n ii)Sin(x) function returns the Sine value of the number.\n iii)Cos(x) function returns the Cosine value of the number.\n iv)Tan(x) function returns the Tangent value of the number.\n v)Pie returns the value of pie i.e 3.14\n vi)Square function returns the square of the number.\n vii)Sqrt function returns the square root of the number.\n viii)Cube function returns the cube of the number.\n ix)cube root returns the cube root of the number.\n x)1/x function returns the reciprocol of the number.\n xi) +/- function makes the number positive to negative or vica-versa.\n xii)Log function returns the Base 10 logarithm of given number.\n xiii)Sinh function returns the Sinh value of the number.\n xiv)Cosh function returns the Cosh value of the number.\n xv)Tanh function returns the tanh value of the number. \t\t About Sin(x) function\nSin(x) function gives the Sine value of a number.\nExample-\n1)Sin(90)-\n\t 1\n1)Sin(0)-\n\t 0\t\t About Cos(x) function\nCos(x) function gives the Cosine value of a number.\nExample-\n1)Cos(90)-\n\t0\n2)Cos(0)-\n\t 1\t\t About tan(x) function\ntan(x) function gives the tangent value of a number.\nExample-\n1)tan(90)-\n\tInfinity\n2)tan(0)-\n\t 0\t\t About Pie function\nPie function sets the value of pie that is 3.14\t\t About Square function\nSquare function gives the square of a number.\nExample-\n1)sq(2)-\n\t4\t{2*2=4}\n2)sq(10)-\n\t100\t{10*10=100}\n\t\t About Square Root function\nSquare Root function gives the square root of a number.\nExample-\n1)sqrt(4)-\n\t2\n2)sqrt(81)-\n\t9\t\t About Cube function\nCube function gives the cube of a number.\nExample-\n1)cube(2)-\n\t8\t{2*2*2=8}\n2)cube(3)\n\t27\t{3*3*3=27}\t\t About Cube Root function\nCube Root function gives the Cube root of a number.\nExample-\n1)cube root(8)-\n\t2\n2)cube root(27)-\n\t3\t\t About 1/x function\n1/x function gives the Reciprocal of a number.\nExample-\n1)1/x(2)-\n\t0.5\t\t About +/- function\n+/- function converts the number positive to negative or negative to positive.\nExample-\n1)+/-(8)\n\t-8\n2)+/-(-27)\n\t27\n2)1/x(10)-\n\t0.1\n\t\t About log(x) function\nlog(x) function gives the base 10 logarithm value of a number.\nExample-\n1)log(10)-\n\t1\n2)log(25)-\n\t1.39\t\t About R<-->D function\nR<-->D function converts the Radian to Degree or Degree to Radian as per user's choice.\nExample-\n1)If user opts for Radian to Degree then-\n     radian(80)-\n\tdegree(4583.6626)\n2)If user opts for Degree to Radian then-\n     degree(180)-\n\tradian(3.1415927) \t\t About absolute function\nabsolute function converts the any number to its absolute form.\nExample-\n1)abs(63)-\n\t63\n2)abs(-23)-\n\t23  \t\tAbout Extra Controls\n i)Table function returns the table of given number upto 10th multiple.\n ii)Factorial function returns the factorial of given number.\n iii)Details function gives the all details of given number.\n iv)Even number function gives the all even numbers upto given number.\n v)Odd number function gives the all odd numbers upto given number.\n vi)LCM Finds The LCM Of Two Numbers.\n vii)HCF Finds The HCF Of Two Numbers.\n viii)Simple Interest Calculated As Entering Principal,Time,Rate.\n ix)Compound Interest Calculated As Entering Principal,Time,Rate.\n x)Herons function calculates area of triangle.\n xi)Pythagoras function calculates the different sides of right angled triangle.\n xii)Loss% finds the loss% of given selling price.\n xiii)Profit% finds the profit% of given selling price.\n\t\t About Table function\nTable function calculates the Table of any number and any number of multiples as given by user.\nExample-\n\tTable(2)-\n\n\tMultiple-10\n\t\t2*1=1\n\t\t2*2=4\n\t\t2*3=6\n\t\t2*4=8\n\t\t2*5=10\n\t\t2*6=12\n\t\t2*7=14\n\t\t2*8=16\n\t\t2*9=18\n\t\t2*10=20\n\t\t About Details function\nDetails function gives the every detail about that number.\nExample-\n1)Details(121)-\n\tIt is Natural number and whole Number.\n\tIt is odd number.\n\tIt is palindrome number.\n2)Details(153)-\n\tIt is Natural number and whole Number.\n\tIt is odd number.\n\tIt is armstrong number.\n\t\t About Factors function\nFactors function gives the every detail about that number.\nExample-\n1)Factors(6)-\n\t1,2,3\n2)Factors(10)-\n\t1,2,5\t\t About Factorial function\nFactorial function gives the factorial of a number.\nExample-\n1)Factorial(6)-\n\t720\n2)Factorial(3)-\n\t6\t\t About Odd Numbers function\nOdd Numbers function gives all the odd numbers from and till the number given by the user.\nExample-\n1)Odd Numbers(1-10)-\n\t1,3,5,7,9\n2)Odd Numbers(1-5)-\n\t1,3\t\t About Even Numbers function\nEven Numbers function gives all the Even numbers from and till the number given by the user.\nExample-\n1)Even Numbers(1-10)-\n\t2,4,6,8,10\n2)Even Numbers(1-5)-\n\t2,4\t\t About Pythagoras function\nPythagoras function finds the Base,Perpendicular,Hypotnues of right angled triangle as per selected by the user.\nExample-\n1)If user select for finding base-\n\tEnter the Perpendicular height- 4\n\tEnter the Hypotnues length- 3\n\t\tsq(Base)=sq(Hypotenues)+sq(Perpendicular)\n\t\tBase=sqrt(16+9)\n\t\tBase=5\n1)If user select for finding Perpendicular-\n\tEnter the Base- 5\n\tEnter the Hypotnues length- 3\n\t\tsq(Perpendicular)=sq(Hypotenues)-sq(base)\n\t\tPerpendicular=sqrt(25-9)\n\t\tPerpendicular=4\n1)If user select for finding Hypotnues-\n\tEnter the Perpendicular height- 4\n\tEnter the Hypotnues length- 3\n\t\tsq(Hypotnues)=sq(Hypotenues)+sq(Perpendicular)\n\t\tHypotnues=sqrt(16+9)\n\t\tHypotnues=5\t\t About Herons function\nHerons function gives perimeter of triangle where all the sides of triangle are unequal.\nExample-\n\tEnter the first side- 3\n\tEnter the second side- 4\n\tEnter the third side- 5\n\t\tarea=sqrt{s(s-a)(s-b)(s-c)}\n\t\twhere s=(a+b+c)/2    {a,b,c are the sides of triangle.}\n\t\tarea=sqrt{6(6-3)(6-4)(6-5)}\n\t\tarea=sqrt{36}\n\t\tarea=6\t\t About Loss% function\nLoss% function calculates the loss% by the selling price and cost price entered by the user.\nExample-\n\tCost price- 10\n\tSelling Price- 5\n\t\tLoss%=(Loss/Cost price)*100    {Loss=Selling price-Cost price}\n\t\tLoss%=(5/10)*100\n\t\tLoss%=50%\t\t About Profit% function\nProfit% function calculates the Profit% by the selling price and cost price entered by the user.\nExample-\n\tCost price- 5\n\tSelling Price- 10\n\t\tProfit%=(Loss/Cost price)*100    {Profit=Cost price-Selling price}\n\t\tProfit%=(5/5)*100\n\t\tProfit%=100%\t\t About LCM function\nLCM function gives the Least Common Factor of two numbers.\nExample-\n1)LCM(4,5)-\n\t20\n2)LCM(25,30)-\n\t150\t\t About HCF function\nHCF function gives the Highest Common Factor of two numbers.\nExample-\n1)HCF(20,30)-\n\t10\n2)HCF(5,10)-\n\t5\t\t About Simple Interest function\nSimple Interest calculates the simple interest by Principle,Rate,Time entered by the user.\nExample-\n\tPrinciple- 5\n\tRate- 6\n\tTime- 10\n\tSI=(Principle*Rate*Time)/100\n\tSI=(5*6*10)/100\n\tSI=3\t\t About Compound Interest function\nCompound Interest calculates the Compound interest by Principle,Rate,Time entered by the user.\nExample-\n\tPrinciple- 5\n\tRate- 6\n\tTime- 4\n\tTime of Interest- 2\nCI=Principal*power(time*time of interest)[{1+(Rate/Time of interest)}]\nCI=5*power(4*2)[{1+(6/2)}]\nCI=327680  \t\t  About Mensuration Controls\n i)In menutrationn you can find the Areas,Perimeter,Volume,Total Surface Area,Curved Surface Area.\n ii)first you can select the shape.\n iii)then select what to find.\n iv)then click on proceed button.\n v)Enter the values.\n vi)click on find button\t\t About Area function\nArea function calculates the area of shape selected by the user.\nExample-\n1)If user selected the Rectangle-\n\tLength=20cm    Breadth=10cm\n\t\tArea=Length*Breadth\n\t\tArea=20*10\n\t\tArea=200cm\n2)If user selected the square-\n\tSide=10cm\n\t\tArea=Side*Side\n\t\tArea=10*10\n\t\tArea=100cm\n3)If user selected Circle-\n\tRadius=2cm\n\t\tArea=3.14*Radius*Radius\n\t\tArea=3.14*2*2\n\t\tArea=12.56cm\n4)If user selected Triangle-\n\tBase=2cm   Height=5cm\n\t\tArea=1/2(Base*Height)\n\t\tArea=1/2(2*5)\n\t\tArea=5cm\n5)If user selected the Trapezium-\n\tLenght=2cm  Breadth=2cm  Height=3cm\n\t\tArea=(Length+Breadth)/2*Height\n\t\tArea=(2+2)/2*3\n\t\tArea=6cm\n6)If user selected Rhombus-\n\tDiagonal 1=2cm Diagonal 2=5cm\n\t\tArea=(Diagonal 1*Diagonal 2)/2\n\t\tArea=(2*5)/2\n\t\tArea=5cm\t\t About Perimeter function\nPerimeter function calculates the perimeter of shape selected by the user.\nExample-\n1)If user selected the Rectangle-\n\tLength=20cm    Breadth=10cm\n\t\tPerimeter=2*(Length+Breadth)\n\t\tPerimeter=2*(20+10)\n\t\tPerimeter=60cm\n2)If user selected the square-\n\tSide=10cm\n\t\tPerimeter=4*Side\n\t\tPerimeter=4*10\n\t\tPerimeter=40cm\n3)If user selected Circle-\n\tRadius=2cm\n\t\tPerimeter=2*3.14*Radius\n\t\tPerimeter=2*3.14*2\n\t\tPerimeter=12.56cm\n4)If user selected Triangle-\n\tSide1=2cm\tSide2=3cm\tSide3=4cm\n\t\tPerimeter=Side1+Side2+Side3\n\t\tPerimeter=3+4+5\n\t\tPerimeter=12cm\n5)If user selected the Trapezium-\n\tLenght=2cm  Breadth=2cm  Height=3cm\n\t\tPerimeter=sum of all Sides\n\t\tPerimeter=2+2+3\n\t\tPerimeter=7cm\n6)If user selected Rhombus-\n\tSide=2\n\t\tPerimeter=4*Side\n\t\tPerimeter=4*2\n\t\tPerimeter=8cm\t\t About Volume function\nVolume function calculates the Volume of shape selected by the user.\nExample-\n1)If user selected the Cube-\n\tLength=20cm    Breadth=10cm    Height=5cm\n\t\tVolume=Length*Breadth*Height\n\t\tVolume=10*20*5\n\t\tPerimeter=1000cm\n2)If user selected the Cuboid-\n\tLength=5cm  Breadth=2cm  height=1cm\n\t\tVolume=length*Breadth*Height\n\t\tVolume=5*2*1\n\t\tVolume=10cm\n3)If user selected Cone-\n\tRadius=2cm  Slant Height=1\n\t\tVolume=(3.14*Radius*Radius*Slant Height)/3\n\t\tVolume=(3.14*2*2*1)/3\n\t\tVolume=0cm\n4)If user selected Cylinder-\n\tRadius=2cm Height=1\n\t\tVolume=3.14*Radius*Radius*Height\n\t\tVolume=3.14*2*2*1\n\t\tVolume=12.56cm\n5)If user selected the Sphere-\n\tRadius=2cm\n\t\tVolume=(4/3)*3.14*Radius*Radius*Radius\n\t\tVolume=(4/3)*3.14*2*2*2\n\t\tVolume=24cm\t\t About Total Surface Area function\nTotal Surface Area function calculates the Total Surface Area of shape selected by the user.\nExample-\n1)If user selected the Cuboid-\n\tLength=20cm    Breadth=10cm    Height=5cm\n\t\tTSA=2*(Length*Breadth+Breadth*Height+Height*Length)\n\t\tTSA=2*(20*10+10*5+5*20)\n\t\tTSA=700cm\n2)If user selected Cone-\n\tRadius=2cm  Slant Height=1\n\t\tTSA=3.14*Radius*(Radius+Slant Height)\n\t\tTSA=3.14*2*(2+1)\n\t\tTSA=18.84cm\n3)If user selected Cylinder-\n\tRadius=2cm Height=1\n\t\tTSA=2*3.14*Radius*(Radius+Height)\n\t\tTSA=2*3.14*2*(2+1)\n\t\tTSA=36cm\n4)If user selected the Sphere-\n\tRadius=2cm\n\t\tTSA=4*3.14*Radius*Radius\n\t\tTSA=4*3.14*2*2\n\t\tTSA=48cm\t\t About Curved Surface Area function\nCurved Surface Area function calculates the Curved Surface Area of shape selected by the user.\nExample-\n1)If user selected Cone-\n\tRadius=2cm  Slant Height=1\n\t\tCSA=3.14*Radius*Slant Height\n\t\tCSA=3.14*2*1\n\t\tCSA=6.28cm\n2)If user selected Cylinder-\n\tRadius=2cm Height=1\n\t\tCSA=2*3.14*Radius*Height\n\t\tCSA=2*3.14*2*1\n\t\tCSA=12cm\n");
        a8.setAutoscrolls(false);
        jScrollPane8.setViewportView(a8);

        h5.setBackground(new java.awt.Color(153, 204, 255));
        h5.setFont(new java.awt.Font("Monotype Corsiva", 1, 24)); // NOI18N
        h5.setForeground(new java.awt.Color(255, 51, 51));
        h5.setText("Get Full Version");
        h5.setFocusable(false);
        h5.setMargin(new java.awt.Insets(2, 1, 2, 1));
        h5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h5ActionPerformed(evt);
            }
        });

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Calculator");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Arithmatic Controls");
        javax.swing.tree.DefaultMutableTreeNode treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Sum(+)");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Subtraction(-)");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Multiplication(*)");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Division(/)");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Percentage(%)");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Scientific Controls");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Sin(x)");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("cos(x)");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("tan(x)");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Pie");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Square");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Square Root");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Cube");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Cube Root");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("1/x");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("+/-");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("log(x)");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("R<-->D");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("absolute");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Extra Controls");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Table");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Details");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Factors");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Factorial");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Odd Numbers");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Even Numbers");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Pythagoras");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Herons");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Loss%");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Profit%");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("LCM");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("HCF");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Simple Interest");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Compound Interest");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Mensuration Controls");
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Area");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Perimeter");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Volume");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Total Surface Area");
        treeNode2.add(treeNode3);
        treeNode3 = new javax.swing.tree.DefaultMutableTreeNode("Curved Surface Area");
        treeNode2.add(treeNode3);
        treeNode1.add(treeNode2);
        j2.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        j2.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                j2ValueChanged(evt);
            }
        });
        j2.addHierarchyListener(new java.awt.event.HierarchyListener() {
            public void hierarchyChanged(java.awt.event.HierarchyEvent evt) {
                j2HierarchyChanged(evt);
            }
        });
        jScrollPane9.setViewportView(j2);

        jTabbedPane5.addTab("Contents", jScrollPane9);

        jButton21.setText("SEARCH");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(le1, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(jButton21)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(le1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton21)
                .addContainerGap(387, Short.MAX_VALUE))
        );

        jTabbedPane5.addTab("Search", jPanel3);

        javax.swing.GroupLayout v2Layout = new javax.swing.GroupLayout(v2.getContentPane());
        v2.getContentPane().setLayout(v2Layout);
        v2Layout.setHorizontalGroup(
            v2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(v2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(v2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(h5, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTabbedPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(v2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(v2Layout.createSequentialGroup()
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 729, Short.MAX_VALUE)
                        .addGap(10, 10, 10))))
        );
        v2Layout.setVerticalGroup(
            v2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(v2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(v2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(h5, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(v2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane8)
                    .addComponent(jTabbedPane5))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        k1.add(v2);
        v2.setBounds(10, 1530, 1000, 640);

        work.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        work.setText("WORKSHEET");
        work.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                workActionPerformed(evt);
            }
        });
        k1.add(work);
        work.setBounds(800, 30, 210, 50);

        h44.setText("View");
        h44.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                h44ActionPerformed(evt);
            }
        });

        jMenuItem42.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem42.setText("Calculator");
        jMenuItem42.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem42ActionPerformed(evt);
            }
        });
        h44.add(jMenuItem42);

        jMenuItem43.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem43.setText("Worksheet");
        jMenuItem43.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem43ActionPerformed(evt);
            }
        });
        h44.add(jMenuItem43);

        jMenuItem19.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem19.setText("Exit");
        jMenuItem19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem19ActionPerformed(evt);
            }
        });
        h44.add(jMenuItem19);

        t11.add(h44);

        jMenu2.setText("Edit");

        jMenuItem18.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, 0));
        jMenuItem18.setText("Clear");
        jMenuItem18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem18ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem18);

        t11.add(jMenu2);

        jMenu1.setText("History");

        jMenuItem33.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_NUMPAD1, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem33.setText("History 1");
        jMenuItem33.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem33ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem33);

        jMenuItem34.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_NUMPAD2, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem34.setText("History 2");
        jMenuItem34.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem34ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem34);

        jMenuItem35.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_NUMPAD3, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem35.setText("History 3");
        jMenuItem35.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem35ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem35);

        jMenuItem36.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_NUMPAD4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem36.setText("History 4");
        jMenuItem36.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem36ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem36);

        jMenuItem37.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_NUMPAD5, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem37.setText("History 5");
        jMenuItem37.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem37ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem37);

        jMenuItem38.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ESCAPE, java.awt.event.InputEvent.SHIFT_MASK));
        jMenuItem38.setText("Clear History");
        jMenuItem38.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem38ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem38);

        t11.add(jMenu1);

        jMenu5.setText("Help");

        jMenuItem7.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jMenuItem7.setText("View Help");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem7);

        jMenuItem8.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F3, 0));
        jMenuItem8.setText("About AD's Calculator");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem8);

        t11.add(jMenu5);

        q09.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                q09MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                q09MouseExited(evt);
            }
        });
        q09.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
                q09MenuDeselected(evt);
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                q09MenuSelected(evt);
            }
        });
        q09.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                q09ActionPerformed(evt);
            }
        });

        jMenuItem13.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ADD, 0));
        jMenuItem13.setText("Add");
        jMenuItem13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem13ActionPerformed(evt);
            }
        });
        q09.add(jMenuItem13);

        jMenuItem14.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_SUBTRACT, 0));
        jMenuItem14.setText("Substract");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });
        q09.add(jMenuItem14);

        jMenuItem15.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_MULTIPLY, 0));
        jMenuItem15.setText("Product");
        jMenuItem15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem15ActionPerformed(evt);
            }
        });
        q09.add(jMenuItem15);

        jMenuItem16.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DIVIDE, 0));
        jMenuItem16.setText("Divide");
        jMenuItem16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem16ActionPerformed(evt);
            }
        });
        q09.add(jMenuItem16);

        jMenuItem17.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ENTER, 0));
        jMenuItem17.setText("Equals");
        jMenuItem17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem17ActionPerformed(evt);
            }
        });
        q09.add(jMenuItem17);

        jMenuItem25.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem25.setText("Print Solution");
        jMenuItem25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem25ActionPerformed(evt);
            }
        });
        q09.add(jMenuItem25);

        t11.add(q09);

        q06.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                q06MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                q06MouseExited(evt);
            }
        });
        q06.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
                q06MenuDeselected(evt);
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                q06MenuSelected(evt);
            }
        });

        q00.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_EQUALS, java.awt.event.InputEvent.SHIFT_MASK));
        q00.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                q00ActionPerformed(evt);
            }
        });
        q06.add(q00);

        q01.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_MINUS, 0));
        q01.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                q01ActionPerformed(evt);
            }
        });
        q06.add(q01);

        q02.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_8, java.awt.event.InputEvent.SHIFT_MASK));
        q02.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                q02ActionPerformed(evt);
            }
        });
        q06.add(q02);

        q03.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_SLASH, 0));
        q03.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                q03ActionPerformed(evt);
            }
        });
        q06.add(q03);

        q04.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_EQUALS, 0));
        q04.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                q04ActionPerformed(evt);
            }
        });
        q06.add(q04);

        jMenuItem44.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem44.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem44ActionPerformed(evt);
            }
        });
        q06.add(jMenuItem44);

        jMenuItem45.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem45.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem45ActionPerformed(evt);
            }
        });
        q06.add(jMenuItem45);

        jMenuItem46.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem46.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem46ActionPerformed(evt);
            }
        });
        q06.add(jMenuItem46);

        t11.add(q06);

        i2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                i2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                i2MouseExited(evt);
            }
        });
        i2.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
                i2MenuDeselected(evt);
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                i2MenuSelected(evt);
            }
        });

        jMenuItem4.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_1, 0));
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        i2.add(jMenuItem4);

        jMenuItem5.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_2, 0));
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        i2.add(jMenuItem5);

        jMenuItem6.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_3, 0));
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        i2.add(jMenuItem6);

        jMenuItem26.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_4, 0));
        jMenuItem26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem26ActionPerformed(evt);
            }
        });
        i2.add(jMenuItem26);

        jMenuItem27.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_5, 0));
        jMenuItem27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem27ActionPerformed(evt);
            }
        });
        i2.add(jMenuItem27);

        jMenuItem28.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_6, 0));
        jMenuItem28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem28ActionPerformed(evt);
            }
        });
        i2.add(jMenuItem28);

        jMenuItem29.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_7, 0));
        jMenuItem29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem29ActionPerformed(evt);
            }
        });
        i2.add(jMenuItem29);

        jMenuItem30.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_8, 0));
        jMenuItem30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem30ActionPerformed(evt);
            }
        });
        i2.add(jMenuItem30);

        jMenuItem31.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_9, 0));
        jMenuItem31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem31ActionPerformed(evt);
            }
        });
        i2.add(jMenuItem31);

        jMenuItem39.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_0, 0));
        jMenuItem39.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem39ActionPerformed(evt);
            }
        });
        i2.add(jMenuItem39);

        jMenuItem32.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_PERIOD, 0));
        jMenuItem32.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem32ActionPerformed(evt);
            }
        });
        i2.add(jMenuItem32);

        jMenuItem41.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        jMenuItem41.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem41ActionPerformed(evt);
            }
        });
        i2.add(jMenuItem41);

        jMenuItem47.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem47.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem47ActionPerformed(evt);
            }
        });
        i2.add(jMenuItem47);

        t11.add(i2);

        q07.setFocusable(false);
        q07.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                q07MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                q07MouseExited(evt);
            }
        });
        q07.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
                q07MenuDeselected(evt);
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                q07MenuSelected(evt);
            }
        });
        q07.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                q07ActionPerformed(evt);
            }
        });

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_NUMPAD1, 0));
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        q07.add(jMenuItem1);

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_NUMPAD2, 0));
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        q07.add(jMenuItem2);

        jMenuItem3.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_NUMPAD3, 0));
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        q07.add(jMenuItem3);

        jMenuItem9.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_NUMPAD4, 0));
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });
        q07.add(jMenuItem9);

        jMenuItem10.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_NUMPAD5, 0));
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });
        q07.add(jMenuItem10);

        jMenuItem11.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_NUMPAD6, 0));
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });
        q07.add(jMenuItem11);

        jMenuItem12.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_NUMPAD7, 0));
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });
        q07.add(jMenuItem12);

        jMenuItem20.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_NUMPAD8, 0));
        jMenuItem20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem20ActionPerformed(evt);
            }
        });
        q07.add(jMenuItem20);

        jMenuItem21.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_NUMPAD9, 0));
        jMenuItem21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem21ActionPerformed(evt);
            }
        });
        q07.add(jMenuItem21);

        jMenuItem22.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_NUMPAD0, 0));
        jMenuItem22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem22ActionPerformed(evt);
            }
        });
        q07.add(jMenuItem22);

        jMenuItem23.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_BACK_SPACE, 0));
        jMenuItem23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem23ActionPerformed(evt);
            }
        });
        q07.add(jMenuItem23);

        jMenuItem24.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_DECIMAL, 0));
        jMenuItem24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem24ActionPerformed(evt);
            }
        });
        q07.add(jMenuItem24);

        jMenuItem40.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem40.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem40ActionPerformed(evt);
            }
        });
        q07.add(jMenuItem40);

        t11.add(q07);

        setJMenuBar(t11);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(k1, javax.swing.GroupLayout.DEFAULT_SIZE, 1024, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(k1, javax.swing.GroupLayout.PREFERRED_SIZE, 2211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void x1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x1ActionPerformed
        jb1();
}//GEN-LAST:event_x1ActionPerformed

    private void x2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x2ActionPerformed
        jb2();       // TODO add your handling code here:
}//GEN-LAST:event_x2ActionPerformed

    private void x3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x3ActionPerformed
        jb3(); // TODO add your handling code here:
}//GEN-LAST:event_x3ActionPerformed

    private void x4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x4ActionPerformed
        jb4();  // TODO add your handling code here:
}//GEN-LAST:event_x4ActionPerformed

    private void x5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x5ActionPerformed
        jb5();  // TODO add your handling code here:
}//GEN-LAST:event_x5ActionPerformed

    private void x6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x6ActionPerformed
        jb6(); // TODO add your handling code here:
}//GEN-LAST:event_x6ActionPerformed

    private void x7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x7ActionPerformed
        jb7();// TODO add your handling code here:
}//GEN-LAST:event_x7ActionPerformed

    private void x8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x8ActionPerformed
        jb8(); // TODO add your handling code here:
}//GEN-LAST:event_x8ActionPerformed

    private void x9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x9ActionPerformed
        jb9(); // TODO add your handling code here:
}//GEN-LAST:event_x9ActionPerformed

    private void x10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x10ActionPerformed
        if (y1.isVisible() == true || y2.isVisible() == true || y3.isVisible() == true || y4.isVisible() == true) {
            a1.setText("0");
            a4.setText("");
        } else {
            String jk = a1.getText();
            if (jk.contains(".") == true) {
            } else {

                a1.setText(a1.getText() + ".");
                a4.setText(a4.getText() + ".");
            }
        }    // TODO add your handling code here:
}//GEN-LAST:event_x10ActionPerformed

    private void x11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x11ActionPerformed
        jb0();
}//GEN-LAST:event_x11ActionPerformed

    private void x12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x12ActionPerformed
        float b = Float.parseFloat(a1.getText());
        if (a == 0 && d == 0 && j == 0) {
            double p = (h * b) / 100;
            a4.setText("Per=(" + h + "*" + b + ")/100");
            a4.append("\nPer=" + p + "%");
            a1.setText("" + p);
        }
        aa0 = 1;
}//GEN-LAST:event_x12ActionPerformed

    private void x13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x13ActionPerformed
        add();
}//GEN-LAST:event_x13ActionPerformed

    private void x14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x14ActionPerformed
        sub();

}//GEN-LAST:event_x14ActionPerformed

    private void x15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x15ActionPerformed
        pro();
}//GEN-LAST:event_x15ActionPerformed

    private void x17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x17ActionPerformed
        div();
}//GEN-LAST:event_x17ActionPerformed

    private void x19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x19ActionPerformed
        back();
}//GEN-LAST:event_x19ActionPerformed

    private void x18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x18ActionPerformed
        eq();
}//GEN-LAST:event_x18ActionPerformed

    private void x16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x16ActionPerformed
        double l = (double) Float.parseFloat(a1.getText());
        double m = (double) Math.sin(l);
        double ss = Math.round(m);
        a1.setText("" + ss);

        a4.setText("Sin(" + l + ")=" + ss);
        aa0 = 1;

}//GEN-LAST:event_x16ActionPerformed

    private void b8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b8ActionPerformed
        double l = Double.parseDouble(a1.getText());
        double m = (double) Math.cos(l);
        double ss = Math.round(m);
        a1.setText("" + ss);
        a4.setText("Cos(" + l + ")=" + ss);
        aa0 = 1;
}//GEN-LAST:event_b8ActionPerformed

    private void b9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b9ActionPerformed
        double l = (double) Double.parseDouble(a1.getText());
        double e = (double) Math.tan(l);
        double ss = Math.round(e);
        a1.setText("" + ss);

        a4.setText("tan(" + l + ")=" + ss);
        aa0 = 1;
}//GEN-LAST:event_b9ActionPerformed

    private void b6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b6ActionPerformed
        long z = Long.parseLong(a1.getText());
        long y = (long) Math.pow(z, 3);
        a1.setText("" + y);
        a4.setText("Cube(" + z + ")=" + y);
        aa0 = 1;
}//GEN-LAST:event_b6ActionPerformed

    private void b10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b10ActionPerformed
        double z = Double.parseDouble(a1.getText());
        double y = (double) Math.cbrt(z);
        a1.setText("" + y);
        a4.setText("Cube Root(" + z + ")=" + y);
        aa0 = 1;
}//GEN-LAST:event_b10ActionPerformed

    private void b5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b5ActionPerformed
        long z = Long.parseLong(a1.getText());
        long y = (long) Math.pow(z, 2);
        a1.setText("" + y);
        a4.setText("Square(" + z + ")=" + y);
        aa0 = 1;
}//GEN-LAST:event_b5ActionPerformed

    private void b4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b4ActionPerformed
        double llk = Double.parseDouble(a1.getText());
        double v = (double) Math.sqrt(llk);
        a1.setText("" + v);
        a4.setText("Sqrt(" + llk + ")=" + v);
        aa0 = 1;
}//GEN-LAST:event_b4ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed
        JOptionPane.showMessageDialog(null, "This Calculator is programmed by ANADI DWIVEDI" + "\n Full Copyright to ANADI", "About ANADI DWIVEDI's Calculator", WIDTH);
}//GEN-LAST:event_jMenuItem8ActionPerformed

    private void x22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x22ActionPerformed
        a1.setText("3.14");
        a4.setText(a4.getText() + "*3.14");
}//GEN-LAST:event_x22ActionPerformed

    private void x21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x21ActionPerformed

        String dr = a1.getText();

        int yu = a4.getSelectionEnd();

        String hj = a4.getText();

        char yh = hj.charAt(yu - 1);
        a1.setText("" + yh);
        String ju = a1.getText();
        if (ju.equalsIgnoreCase("+") || ju.equalsIgnoreCase("-") || ju.equalsIgnoreCase("*") || ju.equalsIgnoreCase("/") || ju.equalsIgnoreCase(")")) {
        } else {
            String ke = hj.substring(0, yu - 1);
            a4.setText("" + ke);
        }
        a1.setText("" + dr);

        String cd = a1.getText();
        int re = a1.getSelectionEnd();
        String de = cd.substring(0, re - 1);
        if (de.equals("")) {
            a1.setText("0");
        } else {
            a1.setText("" + de);
        }


}//GEN-LAST:event_x21ActionPerformed

    private void x23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x23ActionPerformed
        float y = Integer.parseInt(a1.getText());
        float fgh = 1 / y;
        a1.setText("" + fgh);
        a4.setText("Reciprocal(" + y + ")");
        a4.append("\n=1/" + y);
        a4.append("\n=" + fgh);
        aa0 = 1;
}//GEN-LAST:event_x23ActionPerformed

    private void x24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_x24ActionPerformed
        String q = a1.getText();
        int y = Integer.parseInt(q);
        if (y > 0) {
            a1.setText("-" + a1.getText());
            a4.setText("-" + a4.getText());
        } else if (y < 0) {
            a1.setText("" + q.substring(1));
            a4.setText("" + q.substring(1));
        }
}//GEN-LAST:event_x24ActionPerformed

    private void g1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g1ActionPerformed
        if (g1.isSelected() == true) {
            a1.setEditable(false);
            i2.setVisible(false);
            y1.setEditable(false);
            y2.setEditable(false);
            y3.setEditable(false);
            q07.setVisible(false);
        } else {
            i2.setVisible(true);
            a1.setEditable(true);
            y1.setEditable(true);
            y2.setEditable(true);
            y3.setEditable(true);
            q07.setVisible(true);
        }

}//GEN-LAST:event_g1ActionPerformed

    private void x13KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_x13KeyPressed
    }//GEN-LAST:event_x13KeyPressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        eq1();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        double o = Double.parseDouble(a1.getText());
        double z = (double) Math.log10(o);
        a1.setText("" + z);
        a4.setText("log(" + o + ")=" + z);
        aa0 = 1;


    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        float jj2 = JOptionPane.showConfirmDialog(null, "Do You Want To Convert Degree To Radian?");
        if (jj2 == JOptionPane.YES_OPTION) {
            float l55 = Float.parseFloat(JOptionPane.showInputDialog(null, "Enter Degree"));
            float e = (float) Math.toRadians(l55);
            a1.setText("" + e);
            a4.setText("deg(" + l55 + ")=Rad(" + e + ")");
        }
        if (jj2 == JOptionPane.NO_OPTION) {
            float jj3 = JOptionPane.showConfirmDialog(null, "Do You Want To Convert Radian To Degree?");
            if (jj3 == JOptionPane.YES_OPTION) {
                float oo8 = Float.parseFloat(JOptionPane.showInputDialog(null, "Enter Radian"));
                float e = (float) Math.toDegrees(oo8);
                a1.setText("" + e);
                a4.setText("Rad(" + oo8 + ")=deg(" + e + ")");
            }
        }
        aa0 = 1;
    }//GEN-LAST:event_jButton3ActionPerformed

    private void d11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d11ActionPerformed

        a4.setText("");
        a4.setEnabled(false);

        q1.setVisible(false);
        q1.setText("");
        y1.setText("");
        y2.setText("");
        y3.setText("");
        y4.setText("");
        String q = (String) t1.getSelectedValue();
        String e = (String) t2.getSelectedItem();
        if (e.equalsIgnoreCase("~$~<<SELECT>>~$~")) {
            int u = t1.getSelectedIndex();
            if (u == -1) {

                JOptionPane.showMessageDialog(null, "Invalid Selection");
            }
        }

        if (q.equalsIgnoreCase("rectangle") && e.equalsIgnoreCase("area")) {
            z1.setVisible(true);
            z2.setVisible(true);
            q2.setVisible(true);
            a1.setVisible(false);
            y11.setVisible(true);
            y1.setVisible(true);
            z1.setText("LENGTH");
            z4.setVisible(false);
            y4.setVisible(false);
            y14.setVisible(false);
            y2.setVisible(true);
            z2.setText("BREADTH");
            y12.setVisible(true);
            d11.setVisible(false);
            y3.setVisible(false);
            y13.setVisible(false);
            z3.setVisible(false);
        }
        if (q.equalsIgnoreCase("rectangle") && e.equalsIgnoreCase("PERIMETER")) {
            z1.setVisible(true);
            z2.setVisible(true);
            q2.setVisible(true);
            y1.setVisible(true);
            d11.setVisible(false);
            z1.setText("LENGTH");
            a1.setVisible(false);
            y11.setVisible(true);
            y2.setVisible(true);
            z2.setText("BREADTH");
            y12.setVisible(true);
            y3.setVisible(false);
            y13.setVisible(false);
            z4.setVisible(false);
            y4.setVisible(false);
            y14.setVisible(false);
            z3.setVisible(false);
        }

        if (q.equalsIgnoreCase("circle") && e.equalsIgnoreCase("PERIMETER")) {
            z3.setVisible(true);
            y3.setVisible(true);
            z3.setText("RADIUS");
            y13.setVisible(true);
            d11.setVisible(false);
            q2.setVisible(true);
            y11.setVisible(false);
            z2.setVisible(false);
            y2.setVisible(false);
            y12.setVisible(false);
            z1.setVisible(false);
            z4.setVisible(false);
            a1.setVisible(false);
            y4.setVisible(false);
            y14.setVisible(false);
            y1.setVisible(false);
        }
        if (q.equalsIgnoreCase("circle") && e.equalsIgnoreCase("area")) {
            z3.setVisible(true);
            y3.setVisible(true);
            y13.setVisible(true);
            q2.setVisible(true);
            z3.setText("RADIUS");
            y11.setVisible(false);
            d11.setVisible(false);
            z2.setVisible(false);
            y2.setVisible(false);
            y12.setVisible(false);
            z4.setVisible(false);
            a1.setVisible(false);
            y4.setVisible(false);
            y14.setVisible(false);
            z1.setVisible(false);
            y1.setVisible(false);
        }

        if (q.equalsIgnoreCase("TRIANGLE") && e.equalsIgnoreCase("area")) {
            JOptionPane.showMessageDialog(null, "This Function is works only for Equilateral Triangle.\nFor finding the area of isoceles or scalen triangle \nRefer to 'HERON'S METHOD' located in \n'EXTRA CONTROLS'");
            z1.setVisible(true);
            z1.setText("BASE");
            z2.setVisible(true);
            z2.setText("HEIGHT");
            d11.setVisible(false);
            q2.setVisible(true);
            y1.setVisible(true);
            y11.setVisible(true);
            y2.setVisible(true);
            z4.setVisible(false);
            y4.setVisible(false);
            y14.setVisible(false);
            y3.setVisible(false);
            y13.setVisible(false);
            a1.setVisible(false);
            y12.setVisible(true);
            z3.setVisible(false);
        }
        if (q.equalsIgnoreCase("TRIANGLE") && e.equalsIgnoreCase("PERIMETER")) {
            z1.setVisible(true);
            z1.setText("SIDE 1");
            d11.setVisible(false);
            q2.setVisible(true);
            y1.setVisible(true);
            y11.setVisible(true);
            z4.setVisible(false);
            y4.setVisible(false);
            a1.setVisible(false);
            y14.setVisible(false);
            y2.setVisible(true);
            z2.setVisible(true);
            y12.setVisible(true);
            z3.setVisible(true);
            y3.setVisible(true);
            y13.setVisible(true);
            z2.setText("SIDE 2");
            z3.setText("SIDE 3");

        }

        if (q.equalsIgnoreCase("square") && e.equalsIgnoreCase("area")) {
            z1.setVisible(true);
            y1.setVisible(true);
            z1.setText("SIDE");
            y11.setVisible(true);
            q2.setVisible(true);
            a1.setVisible(false);
            z4.setVisible(false);
            y4.setVisible(false);
            d11.setVisible(false);
            y14.setVisible(false);
            y13.setVisible(false);
            y3.setVisible(false);
            z3.setVisible(false);
            z2.setVisible(false);
            y2.setVisible(false);
            y12.setVisible(false);
        }
        if (q.equalsIgnoreCase("square") && e.equalsIgnoreCase("PERIMETER")) {
            z1.setVisible(true);
            a1.setVisible(false);
            y1.setVisible(true);
            y11.setVisible(true);
            q2.setVisible(true);
            y13.setVisible(false);
            y3.setVisible(false);
            d11.setVisible(false);
            z3.setVisible(false);
            z2.setVisible(false);
            z1.setText("SIDE");
            y2.setVisible(false);
            y12.setVisible(false);
            z4.setVisible(false);
            y4.setVisible(false);
            y14.setVisible(false);
        }
        if (q.equalsIgnoreCase("CUBE") && e.equalsIgnoreCase("VOLUME")) {
            z1.setVisible(true);
            z1.setText("Length");
            y1.setVisible(true);
            y11.setVisible(true);
            z2.setVisible(false);
            d11.setVisible(false);
            y2.setVisible(false);
            y12.setVisible(false);
            z3.setVisible(false);
            y3.setVisible(false);
            a1.setVisible(false);
            y13.setVisible(false);
            q2.setVisible(true);
            z4.setVisible(false);
            y4.setVisible(false);
            y14.setVisible(false);
        }
        if (q.equalsIgnoreCase("CUBOID") && e.equalsIgnoreCase("VOLUME")) {
            z1.setVisible(true);
            z1.setText("Length");
            z2.setVisible(true);
            z2.setText("BREADTH");
            d11.setVisible(false);
            z3.setVisible(true);
            z3.setText("HEIGHT");
            y2.setVisible(true);
            y12.setVisible(true);
            y3.setVisible(true);
            y13.setVisible(true);
            y1.setVisible(true);
            a1.setVisible(false);
            y11.setVisible(true);
            z4.setVisible(false);
            y4.setVisible(false);
            y14.setVisible(false);

            q2.setVisible(true);

        }
        if (q.equalsIgnoreCase("CUBOID") && e.equalsIgnoreCase("Total Surface Area")) {
            z1.setVisible(true);
            z1.setText("Length");
            z2.setVisible(true);
            z2.setText("BREADTH");
            z3.setVisible(true);
            d11.setVisible(false);
            z3.setText("HEIGHT");
            a1.setVisible(false);
            y2.setVisible(true);
            y12.setVisible(true);
            y3.setVisible(true);
            y13.setVisible(true);
            y1.setVisible(true);
            y11.setVisible(true);
            z4.setVisible(false);
            y4.setVisible(false);
            y14.setVisible(false);
            q2.setVisible(true);

        }
        if (q.equalsIgnoreCase("TRAPEZIUM") && e.equalsIgnoreCase("PERIMETER")) {
            z1.setVisible(true);
            z1.setText("SIDE 1");
            a1.setVisible(false);
            z2.setVisible(true);
            z2.setText("SIDE 2");
            z3.setVisible(true);
            z3.setText("SIDE 3");
            y2.setVisible(true);
            d11.setVisible(false);
            y12.setVisible(true);
            y3.setVisible(true);
            y13.setVisible(true);
            y1.setVisible(true);
            y11.setVisible(true);
            z4.setVisible(true);
            z4.setText("SIDE 4");
            y4.setVisible(true);
            y14.setVisible(true);
            q2.setVisible(true);
        }
        if (q.equalsIgnoreCase("TRAPEZIUM") && e.equalsIgnoreCase("area")) {
            z1.setVisible(true);
            z1.setText("LENGTH");
            z2.setVisible(true);
            z2.setText("BASE");
            a1.setVisible(false);
            z3.setVisible(true);
            z3.setText("HEIGHT");
            d11.setVisible(false);
            y2.setVisible(true);
            y12.setVisible(true);
            y3.setVisible(true);
            y13.setVisible(true);
            y1.setVisible(true);
            y11.setVisible(true);
            z4.setVisible(false);
            y4.setVisible(false);
            y14.setVisible(false);

            q2.setVisible(true);
        }
        if (q.equalsIgnoreCase("rhombus") && e.equalsIgnoreCase("area")) {
            z1.setVisible(true);
            z1.setText("DIAGONAL 1");
            z2.setVisible(true);
            z2.setText("DIAGONAL 2");
            y1.setVisible(true);
            d11.setVisible(false);
            y11.setVisible(true);
            a1.setVisible(false);
            y2.setVisible(true);
            y12.setVisible(true);
            z3.setVisible(false);
            y3.setVisible(false);
            z4.setVisible(false);
            y4.setVisible(false);
            y14.setVisible(false);
            y13.setVisible(false);
            q2.setVisible(true);
        }
        if (q.equalsIgnoreCase("rhombus") && e.equalsIgnoreCase("PERIMETER")) {
            z1.setVisible(true);
            y1.setVisible(true);
            z1.setText("LENGTH");
            d11.setVisible(false);
            y11.setVisible(true);
            q2.setVisible(true);
            z2.setVisible(false);
            y2.setVisible(false);
            a1.setVisible(false);
            y12.setVisible(false);
            z3.setVisible(false);
            y3.setVisible(false);
            y13.setVisible(false);
            z4.setVisible(false);
            y4.setVisible(false);
            y14.setVisible(false);
        }
        if (q.equalsIgnoreCase("CONE") && e.equalsIgnoreCase("Total Surface Area")) {
            z3.setVisible(true);
            z3.setText("RADIUS");
            y3.setVisible(true);
            y13.setVisible(true);
            d11.setVisible(false);
            z4.setVisible(true);
            z4.setText("SLANT HEIGHT");
            y4.setVisible(true);
            y14.setVisible(true);
            a1.setVisible(false);
            y11.setVisible(false);
            q2.setVisible(true);
            z1.setVisible(false);
            z2.setVisible(false);
            y1.setVisible(false);
            y2.setVisible(false);
            y12.setVisible(false);
        }
        if (q.equalsIgnoreCase("CONE") && e.equalsIgnoreCase("CURVED SURFACE AREA")) {
            z3.setText("RADIUS");
            z3.setVisible(true);
            a1.setVisible(false);
            y3.setVisible(true);
            y13.setVisible(true);
            z4.setVisible(true);
            z4.setText("SLANT HEIGHT");
            y4.setVisible(true);
            d11.setVisible(false);
            y14.setVisible(true);
            y11.setVisible(false);
            q2.setVisible(true);
            z1.setVisible(false);
            z2.setVisible(false);
            y1.setVisible(false);
            y2.setVisible(false);
            y12.setVisible(false);
        }
        if (q.equalsIgnoreCase("CONE") && e.equalsIgnoreCase("VOLUME")) {
            z3.setText("RADIUS");
            z3.setVisible(true);
            y3.setVisible(true);
            y13.setVisible(true);
            d11.setVisible(false);
            z4.setVisible(true);
            a1.setVisible(false);
            z4.setText("SLANT HEIGHT");
            y4.setVisible(true);
            y14.setVisible(true);
            y11.setVisible(false);
            q2.setVisible(true);
            z1.setVisible(false);
            z2.setVisible(false);
            y1.setVisible(false);
            y2.setVisible(false);
            y12.setVisible(false);
        }
        if (q.equalsIgnoreCase("CYLINDER") && e.equalsIgnoreCase("CURVED SURFACE AREA")) {
            z3.setVisible(true);
            z3.setText("RADIUS");
            y3.setVisible(true);
            y13.setVisible(true);
            z4.setVisible(true);
            a1.setVisible(false);
            z4.setText("HEIGHT");
            y4.setVisible(true);
            d11.setVisible(false);
            y14.setVisible(true);
            y11.setVisible(false);
            q2.setVisible(true);
            z1.setVisible(false);
            z2.setVisible(false);
            y1.setVisible(false);
            y2.setVisible(false);
            y12.setVisible(false);
        }
        if (q.equalsIgnoreCase("CYLINDER") && e.equalsIgnoreCase("Total Surface Area")) {
            z3.setVisible(true);
            z3.setText("RADIUS");
            y3.setVisible(true);
            y13.setVisible(true);
            z4.setVisible(true);
            z4.setText("HEIGHT");
            a1.setVisible(false);
            y4.setVisible(true);
            y14.setVisible(true);
            d11.setVisible(false);
            y11.setVisible(false);
            q2.setVisible(true);
            z1.setVisible(false);
            z2.setVisible(false);
            y1.setVisible(false);
            y2.setVisible(false);
            y12.setVisible(false);
        }
        if (q.equalsIgnoreCase("CYLINDER") && e.equalsIgnoreCase("VOLUME")) {
            z3.setVisible(true);
            z3.setText("RADIUS");
            y3.setVisible(true);
            y13.setVisible(true);
            z4.setVisible(true);
            z4.setText("HEIGHT");
            a1.setVisible(false);
            y4.setVisible(true);
            y14.setVisible(true);
            d11.setVisible(false);
            y11.setVisible(false);
            q2.setVisible(true);
            z1.setVisible(false);
            z2.setVisible(false);
            y1.setVisible(false);
            y2.setVisible(false);
            y12.setVisible(false);
        }
        if (q.equalsIgnoreCase("SPHERE") && e.equalsIgnoreCase("Total Surface Area")) {
            z3.setVisible(true);
            z3.setText("RADIUS");
            y3.setVisible(true);
            y13.setVisible(true);
            z4.setVisible(false);
            y4.setVisible(false);
            a1.setVisible(false);
            y14.setVisible(false);
            y11.setVisible(false);
            d11.setVisible(false);
            q2.setVisible(true);
            z1.setVisible(false);
            z2.setVisible(false);
            y1.setVisible(false);
            y2.setVisible(false);
            y12.setVisible(false);
        }
        if (q.equalsIgnoreCase("SPHERE") && e.equalsIgnoreCase("VOLUME")) {
            z3.setVisible(true);
            z3.setText("RADIUS");
            y3.setVisible(true);
            y13.setVisible(true);
            z4.setVisible(false);
            y4.setVisible(false);
            y14.setVisible(false);
            a1.setVisible(false);
            y11.setVisible(false);
            q2.setVisible(true);
            d11.setVisible(false);
            z1.setVisible(false);
            z2.setVisible(false);
            y1.setVisible(false);
            y2.setVisible(false);
            y12.setVisible(false);
        }


}//GEN-LAST:event_d11ActionPerformed

    private void q2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_q2ActionPerformed
        a4.setEnabled(true);
        d11.setVisible(true);
        a1.setVisible(true);
        y11.setVisible(false);
        y12.setVisible(false);
        y13.setVisible(false);
        y14.setVisible(false);
        q1.setVisible(true);
        q2.setVisible(false);
        z1.setVisible(false);
        z2.setVisible(false);
        z3.setVisible(false);
        z4.setVisible(false);
        y1.setVisible(false);
        y2.setVisible(false);
        y3.setVisible(false);
        y4.setVisible(false);
        String p4 = y1.getText();
        String p1 = y2.getText();
        String p2 = y3.getText();
        String p3 = y4.getText();
        if (p1.equals("") || p2.equals("") || p3.equals("") || p4.equals("")) {
            q1.setText("VALUES ARE NOT ENTERED!");
        }
        String q = (String) t1.getSelectedValue();
        String e = (String) t2.getSelectedItem();
//RECTANGLE
        if (q.equalsIgnoreCase("rectangle") && e.equalsIgnoreCase("area")) {
            float y = Float.parseFloat(y1.getText());
            float t = Float.parseFloat(y2.getText());
            float p = y * t;
            a4.setText("Area=Length*Breadth");
            a4.append("\n =" + y + "*" + t);
            a4.append("\n =" + p + "cm sq");
            q1.setText("AREA OF RECTANGLE IS " + p + "cm sq");
        }
        if (q.equalsIgnoreCase("rectangle") && e.equalsIgnoreCase("PERIMETER")) {
            float y = Float.parseFloat(y1.getText());
            float t = Float.parseFloat(y2.getText());
            float p = 2 * (y + t);
            a4.setText("Perimeter=2*(Length+Breadth)");
            a4.append("\n =2*(" + y + "+" + t + ")");
            a4.append("\n =" + p + "cm");
            q1.setText("PERIMETER OF RECTANGLE IS " + p + " cm");
        }
//SQUARE
        if (q.equalsIgnoreCase("square") && e.equalsIgnoreCase("PERIMETER")) {
            float y = Float.parseFloat(y1.getText());
            float p = 4 * y;
            a4.setText("Perimeter=4*Side");
            a4.append("\n =4*" + y);
            a4.append("\n =" + p + "cm");
            q1.setText("PERIMETER OF SQUARE IS " + p + " cm");
        }
        if (q.equalsIgnoreCase("square") && e.equalsIgnoreCase("area")) {
            float y = Float.parseFloat(y1.getText());
            float p = y * y;
            a4.setText("Area=Side*Side");
            a4.append("\n =" + y + "*" + y);
            a4.append("\n =" + p + "cm sq");
            q1.setText("AREA OF SQUARE IS " + p + " cm sq");
        }
//CIRCLE
        if (q.equalsIgnoreCase("circle") && e.equalsIgnoreCase("PERIMETER")) {
            float y = Float.parseFloat(y3.getText());
            float p = 2 * (22 / 7) * y;
            a4.setText("Perimeter=2*(22/7)*radius");
            a4.append("\n =2*(22/7)*" + y);
            a4.append("\n =" + p + "cm");
            q1.setText("PERIMETER OF CIRCLE IS " + p + " cm");
        }
        if (q.equalsIgnoreCase("circle") && e.equalsIgnoreCase("AREA")) {
            float y = Float.parseFloat(y3.getText());
            float p = (22 / 7) * y * y;
            a4.setText("Area=(22/7)*radius*radius");
            a4.append("\n =(22/7)*" + y + "*" + y);
            a4.append("\n =" + p + "cm sq");
            q1.setText("AREA OF CIRCLE IS " + p + " cm sq");
        }
//TRIANGLE
        if (q.equalsIgnoreCase("triangle") && e.equalsIgnoreCase("area")) {
            float y = Float.parseFloat(y1.getText());
            float t = Float.parseFloat(y2.getText());
            float p = (y * t) / 2;
            a4.setText("Area=(Base*Height)/2");
            a4.append("\n =>(" + y + "*" + t + ")/2");
            a4.append("\n =" + p + "cm sq");
            q1.setText("AREA OF TRIANGLE IS " + p + " cm sq");
        }
        if (q.equalsIgnoreCase("triangle") && e.equalsIgnoreCase("PERIMETER")) {
            float y = Float.parseFloat(y1.getText());
            float ui = Float.parseFloat(y2.getText());
            float uii = Float.parseFloat(y3.getText());
            float p = y + ui + uii;
            a4.setText("Perimeter=Side 1+SIDE 2+SIDE 3");
            a4.append("\n =>" + y + "+" + ui + "+" + uii);
            a4.append("\n =" + p + "cm");
            q1.setText("PERIMETER OF TRIANGLE IS " + p + " cm");
        }
//CUBE
        if (q.equalsIgnoreCase("CUBE") && e.equalsIgnoreCase("VOLUME")) {
            float y = Float.parseFloat(y1.getText());
            float p = (float) Math.pow(y, 3);
            a4.setText("Volume=Length*Breadth*Height");
            a4.append("\n =>" + y + "*" + y + "*" + y);
            a4.append("\n =" + p + "cm cube");
            q1.setText("VOLUME OF CUBE IS " + p + " cm cube");
        }
//CUBOID
        if (q.equalsIgnoreCase("CUBOID") && e.equalsIgnoreCase("VOLUME")) {
            float y = Float.parseFloat(y1.getText());
            float t = Float.parseFloat(y2.getText());
            float u = Float.parseFloat(y3.getText());
            float p = y * t * u;
            a4.setText("Volume=Length*Breadth*Height");
            a4.append("\n =>" + y + "*" + t + "*" + u);
            a4.append("\n =" + p + "cm cube");
            q1.setText("VOLUME OF CUBOID IS " + p + " cm cube");
        }
        if (q.equalsIgnoreCase("CUBOID") && e.equalsIgnoreCase("total SURFACE AREA")) {
            float y = Float.parseFloat(y1.getText());
            float t = Float.parseFloat(y2.getText());
            float u = Float.parseFloat(y3.getText());
            float p = y * t;
            float o = t * u;
            float r = u * y;
            float z = 2 * (p + o + r);
            a4.setText("TSA=2*(LB+BH+HL)");
            a4.append("\n =>2*(" + p + "+" + o + "+" + r + ")");
            a4.append("\n =" + z + "cm sq");
            q1.setText("SURFACE AREA OF CUBOID IS " + z + " cm sq");
        }
//TRAPEZIUM
        if (q.equalsIgnoreCase("trapezium") && e.equalsIgnoreCase("PERIMETER")) {
            float y = Float.parseFloat(y1.getText());
            float t = Float.parseFloat(y2.getText());
            float u = Float.parseFloat(y3.getText());
            float r = Float.parseFloat(y4.getText());
            float p = y + t + u + r;
            a4.setText("Perimeter=Sum all Sides");
            a4.append("\n =>" + y + "+" + t + "+" + u + "+" + r);
            a4.append("\n =" + p + "cm");
            q1.setText("PERIMETER OF TRAPEZIUM IS " + p + " cm");
        }

        if (q.equalsIgnoreCase("TRAPEZIUM") && e.equalsIgnoreCase("AREA")) {
            float y = Float.parseFloat(y1.getText());
            float t = Float.parseFloat(y2.getText());
            float u = Float.parseFloat(y3.getText());
            float z = (y + t) / 2;
            float l = z * u;
            a4.setText("Area={(Lenth+Breadth)/2}*Height");
            a4.append("\n =>{(" + y + "+" + t + ")/2)*" + u + "}");
            a4.append("\n =" + l + "cm sq");
            q1.setText("AREA OF TRAPEZIUM IS " + l + " cm sq");
        }
//RHOMBUS
        if (q.equalsIgnoreCase("rhombus") && e.equalsIgnoreCase("area")) {
            float y = Float.parseFloat(y1.getText());
            float t = Float.parseFloat(y2.getText());
            float p = (y * t) / 2;
            a4.setText("Area=(Diagonal 1*Diagonal 2)/2");
            a4.append("\n =>(" + y + "*" + t + ")/2");
            a4.append("\n =" + p + "cm sq");
            q1.setText("AREA OF RHOMBUS IS " + p + " cm sq");
        }
        if (q.equalsIgnoreCase("rhombus") && e.equalsIgnoreCase("PERIMETER")) {
            float y = Float.parseFloat(y1.getText());
            float p = 4 * y;
            a4.setText("Perimeter=4*Length");
            a4.append("\n =>4*" + y);
            a4.append("\n =" + p + "cm");
            q1.setText("PERIMETER OF RHOMBUSIS " + p + " cm");
        }
//CONE
        if (q.equalsIgnoreCase("cone") && e.equalsIgnoreCase("total surface area")) {
            float y = Float.parseFloat(y3.getText());
            float t = Float.parseFloat(y4.getText());
            float p = (float) ((3.14) * y * (y + t));
            a4.setText("TSA=3.14*Radius*(Radius+Slant Height)");
            a4.append("\n =>3.14*" + y + "*(" + y + "+" + t + ")");
            a4.append("\n =" + p + "cm sq");
            q1.setText("Total Surface Area OF CONE IS " + p + " cm sq");
        }
        if (q.equalsIgnoreCase("cone") && e.equalsIgnoreCase("CURVED surface area")) {
            float y = Float.parseFloat(y3.getText());
            float t = Float.parseFloat(y4.getText());
            float p = (float) (3.14 * y * t);
            a4.setText("CSA=3.14*Radius*Slant Height");
            a4.append("\n =>3.14*" + y + "*" + t);
            a4.append("\n =" + p + "cm sq");
            q1.setText("CURVED SURFACE AREA OF CONE IS " + p + " cm sq");
        }
        if (q.equalsIgnoreCase("cone") && e.equalsIgnoreCase("VOLUME")) {
            float y = Float.parseFloat(y3.getText());
            float t = Float.parseFloat(y4.getText());
            float p = 1 / 3 * 22 / 7 * y * y * t;
            a4.setText("VOLUME=(22/7)*(1/3)*Radius*Radius*Slant Height");
            a4.append("\n =>(22/7)*(1/3)*" + y + "*" + y + "*" + t);
            a4.append("\n =" + p + "cm cube");
            q1.setText("VOLUME OF CONE IS " + p + " cm cube");
        }
//CYLINDER
        if (q.equalsIgnoreCase("CYLINDER") && e.equalsIgnoreCase("CURVED surface area")) {
            float y = Float.parseFloat(y3.getText());
            float t = Float.parseFloat(y4.getText());
            float p = 2 * 22 / 7 * y * t;
            a4.setText("CSA=2*(22/7)*Radius*Height");
            a4.append("\n =>2*(22/7)*" + y + "*" + t);
            a4.append("\n =" + p + "cm sq");
            q1.setText("CURVED SURFACE AREA OF CYLINDER IS " + p + " cm sq");
        }
        if (q.equalsIgnoreCase("CYLINDER") && e.equalsIgnoreCase("TOTAL surface area")) {
            float y = Float.parseFloat(y3.getText());
            float t = Float.parseFloat(y4.getText());
            float p = 2 * (22 / 7) * y * (y + t);
            a4.setText("TSA=2*(22/7)*Radius*(Radius+Height)");
            a4.append("\n =>2*(22/7)*" + y + "*(" + y + "+" + t + ")");
            a4.append("\n =" + p + "cm sq");
            q1.setText("Total Surface Area OF CYLINDER IS " + p + " cm sq");
        }
        if (q.equalsIgnoreCase("CYLINDER") && e.equalsIgnoreCase("VOLUME")) {
            float y = Float.parseFloat(y3.getText());
            float t = Float.parseFloat(y4.getText());
            float p = (22 / 7) * y * y * t;
            a4.setText("Volume=(22/7)*Radius*Radius*Height");
            a4.append("\n =>22/7*" + y + "*" + y + "*" + t);
            a4.append("\n =" + p + "cm cube");
            q1.setText("THE VOLUME OF CYLINDER IS " + p + " cm cube");
        }
//SPHERE
        if (q.equalsIgnoreCase("sphere") && e.equalsIgnoreCase("total surface area")) {
            float y = Float.parseFloat(y3.getText());
            float p = 4 * 22 / 7 * y * y;
            a4.setText("TSA=4*(22/7)*Radius*Radius");
            a4.append("\nTSA=4*(22/7)*" + y + "*" + y);
            a4.append("\nTSA=" + p + "cm sq");
            q1.setText("Total Surface Area OF SPHERE IS " + p + " cm sq");
        }
        if (q.equalsIgnoreCase("sphere") && e.equalsIgnoreCase("VOLUME")) {
            float y = Float.parseFloat(y3.getText());
            float p = (4 / 3) * (22 / 7) * y * y * y;
            a4.setText("Volume=4/3*(22/7)*Radius*Radius*Radius");
            a4.append("\n =>4/3*(22/7)*" + y + "*" + y + "*" + y);
            a4.append("\n =" + p + "cm cube");
            q1.setText("THE VOLUME OF SPHERE IS " + p + " cm cube");
        }
        aa0 = 1;
    }//GEN-LAST:event_q2ActionPerformed

    private void g2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_g2ActionPerformed
        if (g2.isSelected() == true) {
            x1.setEnabled(false);
            x2.setEnabled(false);
            x3.setEnabled(false);
            x4.setEnabled(false);
            x5.setEnabled(false);
            x6.setEnabled(false);
            x7.setEnabled(false);
            x8.setEnabled(false);
            x9.setEnabled(false);

            x11.setEnabled(false);

        }
        if (g2.isSelected() == false) {
            x1.setEnabled(true);
            x2.setEnabled(true);
            x3.setEnabled(true);
            x4.setEnabled(true);
            x5.setEnabled(true);
            x6.setEnabled(true);
            x7.setEnabled(true);
            x8.setEnabled(true);
            x9.setEnabled(true);

            x11.setEnabled(true);

        }
}//GEN-LAST:event_g2ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        v2.setVisible(true);
        try {
            v2.setMaximum(true);
        } catch (PropertyVetoException ex) {
            ex.printStackTrace();
        }

    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void y4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_y4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_y4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        a2.setText("");
        a1.setText("0");
        zz1 = Float.parseFloat(JOptionPane.showInputDialog("ENTER PRINCIPAL"));
        ww1 = Float.parseFloat(JOptionPane.showInputDialog("ENTER RATE"));
        ee1 = Float.parseFloat(JOptionPane.showInputDialog("ENTER TIME"));

        if (zz1 > 0 && ww1 > 0 && ee1 > 0) {
            a2.setText("");
            float oo1 = (zz1 * ww1 * ee1) / 100;
            a4.setText("SI=(Principal*Rate*Time)/100");
            a4.append("\n =>(" + zz1 + "*" + ww1 + "*" + ee1 + ")/100");
            a4.append("\n =" + oo1);
            a2.setText("THE SIMPLE\nINTEREST IS\n" + oo1);
            zz1 = 0;
            ww1 = 0;
            ee1 = 0;
        }
        aa0 = 1;
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        a2.setText("");
        a1.setText("0");
        aa1 = Float.parseFloat(JOptionPane.showInputDialog("ENTER PRINCIPAL"));
        bb1 = Float.parseFloat(JOptionPane.showInputDialog("Annual Nominal Interest Rate"));
        cc1 = Float.parseFloat(JOptionPane.showInputDialog("Number Of Times The Interest Is Compounded Per Year"));
        dd1 = Float.parseFloat(JOptionPane.showInputDialog("Number Of Years The Money Is Borrowed For"));
        if (aa1 > 0 && bb1 > 0 && cc1 > 0 && dd1 > 0) {
            a2.setText("");
            float oo1 = (bb1 / cc1) + 1;
            float nn1 = (cc1 * dd1);
            float vv1 = (float) Math.pow(oo1, nn1);
            float mm1 = vv1 * aa1;
            a4.setText("CI=Principal*power(time*time of interest)[{1+(Interst/Time of interest)}]");
            a4.append("\n=>" + aa1 + "*" + vv1 + "[{1+(" + bb1 + "/" + cc1 + ")}]");
            a4.append("\n =" + mm1);
            a2.setText("THE COMPOUND\nINTEREST IS\n" + mm1);
            aa1 = 0;
            bb1 = 0;
            cc1 = 0;
        }
        aa0 = 1;
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        gg1 = Integer.parseInt(JOptionPane.showInputDialog("ENTER FIRST VALUE!").toString());
        hh1 = Integer.parseInt(JOptionPane.showInputDialog("ENTER SECOND VALUE!").toString());
        int rr5 = hh1;
        int rr4 = gg1;
        int y = gg1 * hh1;
        int l;
        while (hh1 != 0) {
            l = hh1;
            hh1 = gg1 % l;
            gg1 = l;
        }
        int z = y / gg1;
        a4.setText("LCM(" + rr4 + "," + rr5 + ")=");
        a4.append("\n " + z);
        a1.setText("" + z);
        aa0 = 1;
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        jj1 = Integer.parseInt(JOptionPane.showInputDialog("ENTER FIRST VALUE!").toString());
        kk1 = Integer.parseInt(JOptionPane.showInputDialog("ENTER SECOND VALUE!").toString());
        int rr5 = kk1;
        int rr4 = jj1;
        int t;
        while (kk1 != 0) {
            t = kk1;
            kk1 = jj1 % t;
            jj1 = t;
        }
        a4.setText("HCF(" + rr4 + "," + rr5 + ")=");
        a4.append("\n " + jj1);
        a1.setText("" + jj1);
        aa0 = 1;
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jMenuItem13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem13ActionPerformed
        add();
    }//GEN-LAST:event_jMenuItem13ActionPerformed

    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem14ActionPerformed
        sub();
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem14ActionPerformed

    private void jMenuItem15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem15ActionPerformed
        pro(); // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem15ActionPerformed

    private void jMenuItem16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem16ActionPerformed
        div();
// TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem16ActionPerformed

    private void jMenuItem17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem17ActionPerformed
        if (a1.isVisible() == true) {
            if (d == 0 && h == 0 && j == 0 && a == 0) {
                eq1();
            } else {
                eq();
            }

        }

    }//GEN-LAST:event_jMenuItem17ActionPerformed

    private void kkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kkActionPerformed
        float z11 = JOptionPane.showConfirmDialog(null, "Do You Want To Find Perpendicular Height???");
        if (z11 == JOptionPane.YES_OPTION) {
            String z22 = JOptionPane.showInputDialog(null, "Please Enter Hypotenuse...");
            String z33 = JOptionPane.showInputDialog(null, "Please Enter Base...");
            float z44 = Float.parseFloat(z22);
            float z55 = Float.parseFloat(z33);
            float z66 = (float) Math.pow(z44, 2);
            float z77 = (float) Math.pow(z55, 2);
            float z88 = z66 - z77;
            float z99 = (float) Math.pow(z88, 0.5);
            a4.setText("sq(Per)=sq(Hypotenuse)-sq(Base)");
            a4.append("\n=>sq(Per)=sq(" + z44 + ")-sq(" + z55 + ")");
            a4.append("\n=>Per=sqrt(" + z66 + "-" + z77 + ")");
            a4.append("\n=>per=" + z99);
            a2.setText("PERPENDICULAR HEIGHT IS " + z99);
        } else if (z11 == JOptionPane.NO_OPTION) {
            int w11 = JOptionPane.showConfirmDialog(null, "Do You Want To Find Hypotanous???");
            if (w11 == JOptionPane.YES_OPTION) {
                String z22 = JOptionPane.showInputDialog(null, "Please Enter Perpendicular Height ...");
                String z33 = JOptionPane.showInputDialog(null, "Please Enter Base...");
                float z44 = Float.parseFloat(z22);
                float z55 = Float.parseFloat(z33);
                float z66 = (float) Math.pow(z44, 2);
                float z77 = (float) Math.pow(z55, 2);
                float z88 = z66 + z77;
                float z99 = (float) Math.pow(z88, 0.5);

                a4.setText("sq(Hypo)=sq(Perpendicular)+sq(Base)");
                a4.append("\n=>sq(Hypo)=sq(" + z44 + ")+sq(" + z55 + ")");
                a4.append("\n=>Hypo=sqrt(" + z66 + "+" + z77 + ")");
                a4.append("\n=>Hypo=" + z99);

                a2.setText("HYPOTANOUS IS \n" + z99);
            } else if (w11 == JOptionPane.NO_OPTION) {
                int w22 = JOptionPane.showConfirmDialog(null, "Do You Want To Find Base???");
                if (w22 == JOptionPane.YES_OPTION) {
                    String f22 = JOptionPane.showInputDialog(null, "Please Enter Perpendicular Height ...");
                    String f33 = JOptionPane.showInputDialog(null, "Please Enter Hypotenuse...");
                    float f44 = Float.parseFloat(f22);
                    float f55 = Float.parseFloat(f33);
                    float f66 = (float) Math.pow(f44, 2);
                    float f77 = (float) Math.pow(f55, 2);
                    float f88 = f77 - f66;
                    float f99 = (float) Math.pow(f88, 0.5);
                    a4.setText("sq(Base)=sq(Hypo)+sq(Per)");
                    a4.append("\n=>sq(Base)=sq(" + f55 + ")-sq(" + f44 + ")");
                    a4.append("\n=>Base=sqrt(" + f77 + "+" + f66 + ")");
                    a4.append("\n=>Base=" + f99);
                    a2.setText("BASE IS " + f99);
                }
            }
        }
        aa0 = 1;
}//GEN-LAST:event_kkActionPerformed

    private void q09ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_q09ActionPerformed

}//GEN-LAST:event_q09ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        float r = Float.parseFloat(JOptionPane.showInputDialog(null, "ENTER FIRST SIDE.."));
        float m = Float.parseFloat(JOptionPane.showInputDialog(null, "ENTER SECOND SIDE.."));
        float t = Float.parseFloat(JOptionPane.showInputDialog(null, "ENTER THIRD SIDE.."));
        float s = (r + m + t) / 2;
        float l = s - r;
        float z = s - m;
        float q = s - t;
        float w = s * l * z * q;
        float e = (float) Math.sqrt(w);
        a4.setText("Area=sqrt{s(s-a)(s-b)(s-c)}");
        a4.append("\n where s=(a+b+c)/2");
        a4.append("\n=>s=(" + r + "+" + m + "+" + t + ")/2 =" + s);
        a4.append("\n=>sqrt{" + s + "(" + s + "-" + r + ")(" + s + "-" + m + ")(" + s + "-" + t + ")}");
        a4.append("\n=>" + e + "cm");
        a2.setText("Area Of \n Triangle Is \n" + e + " cm");
        aa0 = 1;
    }//GEN-LAST:event_jButton13ActionPerformed

    private void y1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_y1ActionPerformed

        // TODO add your handling code here:
    }//GEN-LAST:event_y1ActionPerformed

    private void y2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_y2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_y2ActionPerformed

    private void jMenuItem18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem18ActionPerformed
back();    }//GEN-LAST:event_jMenuItem18ActionPerformed

    private void jMenuItem19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem19ActionPerformed
        System.exit(0);     // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem19ActionPerformed

    private void h44ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h44ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_h44ActionPerformed

    private void a1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_a1KeyPressed
}//GEN-LAST:event_a1KeyPressed

    private void a1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a1ActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_a1ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        String n11 = JOptionPane.showInputDialog(null, "Enter The Selling Price");
        float m11 = Float.parseFloat(n11);
        String n22 = JOptionPane.showInputDialog(null, "Enter The Cost Price");
        float m22 = Float.parseFloat(n22);

        if (m11 > m22) {
            a4.setText("There is NO loss.");
            a2.setText("");
        } else {
            float b11 = m22 - m11;

            a2.setText("LOSS IS " + b11);
            float n33 = (b11 / m22) * 100;
            a4.setText("Loss %=(Loss/Cost Price)*100");
            a4.append("\n =>(" + b11 + "/" + m22 + ")*100");
            a4.append("\n =" + n33 + "%");
            a2.append("\nLOSS % is " + n33);
        }
        aa0 = 1;
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        jb1();
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        jb2();// TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        jb3();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem9ActionPerformed
        jb4();
    }//GEN-LAST:event_jMenuItem9ActionPerformed

    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem10ActionPerformed
        jb5();
    }//GEN-LAST:event_jMenuItem10ActionPerformed

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem11ActionPerformed
        jb6();
    }//GEN-LAST:event_jMenuItem11ActionPerformed

    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem12ActionPerformed
        jb7();
    }//GEN-LAST:event_jMenuItem12ActionPerformed

    private void jMenuItem20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem20ActionPerformed
        jb8();
    }//GEN-LAST:event_jMenuItem20ActionPerformed

    private void jMenuItem21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem21ActionPerformed
        jb9();
    }//GEN-LAST:event_jMenuItem21ActionPerformed

    private void jMenuItem22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem22ActionPerformed
        jb0();
    }//GEN-LAST:event_jMenuItem22ActionPerformed

    private void jMenuItem23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem23ActionPerformed
        String dr = a1.getText();

        int yu = a4.getSelectionEnd();

        String hj = a4.getText();

        char yh = hj.charAt(yu - 1);
        a1.setText("" + yh);
        String ju = a1.getText();
        if (ju.equalsIgnoreCase("+") || ju.equalsIgnoreCase("-") || ju.equalsIgnoreCase("*") || ju.equalsIgnoreCase("/") || ju.equalsIgnoreCase(")")) {
        } else {
            String ke = hj.substring(0, yu - 1);
            a4.setText("" + ke);
        }
        a1.setText("" + dr);

        String cd = a1.getText();

        long ds = (long) Float.parseFloat(cd);
        if (cd.contains(".")) {
            a1.setText("" + ds);
            int aq = a1.getText().length();
            String qa = cd.substring(aq + 1);
            if (qa.equals("")) {
            } else {
                a1.setText("" + qa);
                int lk = Integer.parseInt(a1.getText());
                int fr = lk / 10;
                if (fr != 0) {
                    a1.setText(ds + "." + fr);
                } else {
                    a1.setText(ds + ".");
                }
            }
        } else {
            long bg = ds / 10;
            a1.setText("" + bg);

        }


    }//GEN-LAST:event_jMenuItem23ActionPerformed

    private void q07ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_q07ActionPerformed
        a1.setText(a1.getText() + ".");           // TODO add your handling code here:
}//GEN-LAST:event_q07ActionPerformed

    private void jMenuItem24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem24ActionPerformed
        if (y1.isVisible() == true || y2.isVisible() == true || y3.isVisible() == true || y4.isVisible() == true) {
            a1.setText("0");
            a4.setText("");
        } else {
            String jk = a1.getText();
            if (jk.contains(".") == true) {
            } else {

                a1.setText(a1.getText() + ".");
                a4.setText(a4.getText() + ".");
            }
        }
    }//GEN-LAST:event_jMenuItem24ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        String n11 = JOptionPane.showInputDialog(null, "Enter The Selling Price");
        float m11 = Float.parseFloat(n11);
        String n22 = JOptionPane.showInputDialog(null, "Enter The Cost Price");
        float m22 = Float.parseFloat(n22);
        if (m22 > m11) {
            a4.setText("There is NO profit.");
            a2.setText("");
        } else {
            float b11 = m11 - m22;

            a2.setText("PROFIT IS " + b11);
            float n33 = (b11 / m22) * 100;
            a4.setText("Profit %=(Profit/Cost Price)*100");
            a4.append("\n =>(" + b11 + "/" + m22 + ")*100");
            a4.append("\n =" + n33 + "%");
            a2.append("\nProfit % is " + n33);
        }
        aa0 = 1; // TODO add your handling code here:
    }//GEN-LAST:event_jButton10ActionPerformed

    private void s1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_s1ActionPerformed

        String v66 = a4.getText();
        if (v66.equals("")) {
            JOptionPane.showMessageDialog(null, "Nothing is to be 'PRINT'");
        } else {
            Color t55 = a4.getBackground();
            Color j77 = y1.getBackground();
            a4.setBackground(j77);
            a4.append("\n \t\t\t-solution by ad's calculator");
            try {

                a4.print();
                a4.setBackground(t55);
                a4.setText("" + v66);
            } catch (PrinterException ex) {
                ex.printStackTrace();
            }
        }
}//GEN-LAST:event_s1ActionPerformed

    private void jMenuItem25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem25ActionPerformed
        if (v1.isVisible() == true) {
            try {
                a5.print();
            } catch (PrinterException ex) {
                ex.printStackTrace();
            }
        } else {

            String v66 = a4.getText();
            if (v66.equals("")) {
                JOptionPane.showMessageDialog(null, "Nothing is to be 'PRINT'");
            } else {
                Color t55 = a4.getBackground();
                Color j77 = y1.getBackground();
                a4.setBackground(j77);
                a4.append("\n \t\t\t-solution by ad's calculator");
                try {

                    a4.print();
                    a4.setBackground(t55);
                    a4.setText("" + v66);
                } catch (PrinterException ex) {
                    ex.printStackTrace();
                }
            }

        }      // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem25ActionPerformed

    private void y3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_y3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_y3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        jb1(); // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        jb2();
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        jb3();
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem26ActionPerformed
        jb4();
    }//GEN-LAST:event_jMenuItem26ActionPerformed

    private void jMenuItem27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem27ActionPerformed
        jb5();
    }//GEN-LAST:event_jMenuItem27ActionPerformed

    private void jMenuItem28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem28ActionPerformed
        jb6();
    }//GEN-LAST:event_jMenuItem28ActionPerformed

    private void jMenuItem29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem29ActionPerformed
        jb7();
    }//GEN-LAST:event_jMenuItem29ActionPerformed

    private void jMenuItem30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem30ActionPerformed
        jb8();
    }//GEN-LAST:event_jMenuItem30ActionPerformed

    private void jMenuItem31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem31ActionPerformed
        jb9();
    }//GEN-LAST:event_jMenuItem31ActionPerformed

    private void jMenuItem32ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem32ActionPerformed
        if (y1.isVisible() == true || y2.isVisible() == true || y3.isVisible() == true || y4.isVisible() == true) {
            a1.setText("0");
            a4.setText("");
        } else {
            String jk = a1.getText();
            if (jk.contains(".") == true) {
            } else {

                a1.setText(a1.getText() + ".");
                a4.setText(a4.getText() + ".");
            }
        }         // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem32ActionPerformed

    private void q07MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_q07MouseEntered
        q07.setEnabled(false);        // TODO add your handling code here:
}//GEN-LAST:event_q07MouseEntered

    private void q07MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_q07MouseExited
        q07.setEnabled(true);        // TODO add your handling code here:
}//GEN-LAST:event_q07MouseExited

    private void i2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_i2MouseEntered
        i2.setEnabled(false);        // TODO add your handling code here:
    }//GEN-LAST:event_i2MouseEntered

    private void i2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_i2MouseExited
        i2.setEnabled(true);        // TODO add your handling code here:
    }//GEN-LAST:event_i2MouseExited

    private void q00ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_q00ActionPerformed
        add();

        // TODO add your handling code here:
}//GEN-LAST:event_q00ActionPerformed

    private void q01ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_q01ActionPerformed
        sub();
        // TODO add your handling code here:
}//GEN-LAST:event_q01ActionPerformed

    private void q03ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_q03ActionPerformed
        div();
        // TODO add your handling code here:
}//GEN-LAST:event_q03ActionPerformed

    private void q04ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_q04ActionPerformed

        if (a1.isVisible() == true) {
            if (d == 0 && h == 0 && j == 0 && a == 0) {
                a4.setText("");

                a2.setText("");

                String u = (String) l1.getSelectedValue();
                long p = (long) Float.parseFloat(a1.getText());
                //table
                if (u.equals("TABLE")) {
                    String tt3 = JOptionPane.showInputDialog(null, "Till");
                    if (tt3.equals("")) {
                        a2.setText("Table Of " + p);
                        for (long i = 1; i <= 10; i++) {
                            long m = (long) (p * i);
                            a2.append("\n " + p + "*" + i + "=" + m);
                        }
                    } else {
                        long ew = Long.parseLong("" + tt3);
                        a2.setText("Table Of " + p);
                        for (long i = 1; i <= ew; i++) {
                            long m = (long) (p * i);
                            a2.append("\n " + p + "*" + i + "=" + m);
                        }
                    }
                } //factorial
                else if (u.equals("FACTORIAL")) {
                    long fact = 1, k11;
                    for (k11 = 1; k11 <= p; ++k11) {
                        fact = fact * k11;
                        a4.setText(a4.getText() + "*" + k11);
                    }

                    String gh = a4.getText();
                    a4.setText("");
                    a4.setText(gh.substring(1) + "=");
                    a4.append("\n Fact(" + p + ")=" + fact);

                } //details
                else if (u.equalsIgnoreCase("details")) {
                    if (p == 0) {
                        a4.setText("1)It is Whole number.");
                    }
                    if (p > 0) {
                        a4.setText("1)It is Natural number & Whole Number.");
                    }
                    a4.append("\n 2)It is Real number.");
                    if (p > 0) {
                        a4.append("\n 3)It is Positive number.");
                    }
                    if (p < 0) {
                        a4.append("\n  3)It is Negative number.");
                    }
                    float r = p % 2;
                    if (r == 0) {
                        a4.append("\n 4)It Even number.");
                    }
                    if (r != 0) {
                        a4.append("\n 4)It is Odd number.");
                    }

                    int sum = 0, i;
                    for (i = 1; i < p; i++) {
                        if (p % i == 0) {
                            sum += i;
                        }
                    }
                    if (sum == p) {
                        a4.append("\nIt is Perfect Number");
                    }

                    long rev = 0, q, b;
                    for (q = p; q != 0; q = q / 10) {
                        b = q % 10;
                        rev = (rev * 10) + b;
                    }
                    if (rev == p) {
                        a4.append("\nIt is Palindrome Number");
                    }
                    long c, t, sum1 = 0;
                    for (t = p; t != 0; t = t / 10) {
                        long aas = t % 10;
                        c = aas * aas * aas;
                        sum1 = sum1 + c;
                    }

                    if (sum1 == p) {
                        a4.append("\nIt is Armstrong Number.");
                    }
                    int zxzx = 0;
                    for (int bnbn = 1; bnbn <= p; bnbn++) {
                        if (p % bnbn == 0) {
                            zxzx++;
                        }

                    }
                    if (zxzx == 2) {
                        a4.append("\nIt is  Prime Number.");
                    }

                } //odd
                else if (u.equalsIgnoreCase("ODD NUMBER")) {
                    for (int i = 1; i <= p; i += 2) {
                        a4.setText(" Because they are 'not' divisible by 2");

                        a2.setText(a2.getText() + "," + i);
                    }
                } else if (u.equalsIgnoreCase("EVEN NUMBER")) {
                    for (int i = 0; i <= p; i += 2) {

                        a4.setText("Because they are divisible by 2");
                        a2.setText(a2.getText() + "," + i);
                    }
                } else if (u.equalsIgnoreCase("FACTORS")) {
                    int q = Integer.parseInt(a1.getText());
                    for (int y = 1; y <= q; y++) {
                        if (q % y == 0) {
                            a4.setText("Because they all completely divides the given number");
                            a2.setText(a2.getText() + "," + y);

                        }
                    }
                }
            } else {
                String rr = a4.getText();
                String ll = a4.getText();
                int gg = a4.getSelectionEnd();
                char tt = ll.charAt(gg - 1);
                a4.setText("" + tt);
                String ff = a4.getText();
                if (ff.equals("+") || ff.equals("-") || ff.equals("*") || ff.equals("/")) {
                    a4.setText(rr + "(0.0)");
                }
                a4.setText("" + rr);
                a4.setText(a4.getText() + "=");
                x = Double.parseDouble(a1.getText());
                if (d == 0 && h == 0 && j == 0) {
                    if (f == 0) {

                        f = y33 + x;
                        a1.setText("" + f);
                        a4.setText(a4.getText() + "(" + f + ")");
                        a = x;
                    } else {
                        f = f + a;
                        a1.setText("" + f);
                        a4.setText(a4.getText() + "(" + f + ")");
                    }

                }
                if (a == 0 && h == 0 && j == 0) {
                    if (g == 0) {
                        g = d - x;

                        a1.setText("" + g);
                        a4.setText(a4.getText() + "(" + g + ")");
                        d = x;
                    } else {
                        g = g - d;
                        a1.setText("" + g);
                        a4.setText(a4.getText() + "(" + g + ")");
                    }

                }
                if (a == 0 && d == 0 && j == 0) {
                    if (dds == 0) {
                        dds = y44 * x;
                        a1.setText("" + dds);
                        a4.setText(a4.getText() + "(" + dds + ")");
                        h = x;

                    } else {
                        dds = dds * h;
                        double ori = Math.round(dds);
                        a1.setText("" + dds);

                        a4.setText(a4.getText() + "(" + dds + ")");
                    }
                }
                if (a == 0 && d == 0 && h == 0) {
                    if (k == 0) {
                        k = j / x;
                        a1.setText("" + k);
                        a4.setText(a4.getText() + "(" + k + ")");
                        j = x;
                    } else {
                        k = k / j;
                        a1.setText("" + k);
                        a4.setText(a4.getText() + "(" + k + ")");
                    }
                }
                y33 = 0;
                y44 = 1;

            }

        }
        if (a1.isVisible() == false) {

            d11.setVisible(true);
            a1.setVisible(true);
            y11.setVisible(false);
            y12.setVisible(false);
            y13.setVisible(false);
            y14.setVisible(false);
            q1.setVisible(true);
            q2.setVisible(false);
            z1.setVisible(false);
            z2.setVisible(false);
            z3.setVisible(false);
            z4.setVisible(false);
            y1.setVisible(false);
            y2.setVisible(false);
            y3.setVisible(false);
            y4.setVisible(false);
            String p4 = y1.getText();
            String p1 = y2.getText();
            String p2 = y3.getText();
            String p3 = y4.getText();
            if (p1.equals("") || p2.equals("") || p3.equals("") || p4.equals("")) {
                q1.setText("VALUES ARE NOT ENTERED!");
            }
            String q = (String) t1.getSelectedValue();
            String e = (String) t2.getSelectedItem();
//RECTANGLE
            if (q.equalsIgnoreCase("rectangle") && e.equalsIgnoreCase("area")) {
                float y = Float.parseFloat(y1.getText());
                float t = Float.parseFloat(y2.getText());
                float p = y * t;
                a4.setText("Area=Length*Breadth");
                a4.append("\n =" + y + "*" + t);
                a4.append("\n =" + p + "cm");
                q1.setText("AREA OF RECTANGLE IS " + p + "cm");
            }
            if (q.equalsIgnoreCase("rectangle") && e.equalsIgnoreCase("PERIMETER")) {
                float y = Float.parseFloat(y1.getText());
                float t = Float.parseFloat(y2.getText());
                float p = 2 * (y + t);
                a4.setText("Perimeter=2*(Length+Breadth)");
                a4.append("\n =2*(" + y + "+" + t + ")");
                a4.append("\n =" + p + "cm");
                q1.setText("PERIMETER OF RECTANGLE IS " + p + " cm");
            }
//SQUARE
            if (q.equalsIgnoreCase("square") && e.equalsIgnoreCase("PERIMETER")) {
                float y = Float.parseFloat(y1.getText());
                float p = 4 * y;
                a4.setText("Perimeter=4*Side");
                a4.append("\n =4*" + y);
                a4.append("\n =" + p + "cm");
                q1.setText("PERIMETER OF SQUARE IS " + p + " cm");
            }
            if (q.equalsIgnoreCase("square") && e.equalsIgnoreCase("area")) {
                float y = Float.parseFloat(y1.getText());
                float p = y * y;
                a4.setText("Area=Side*Side");
                a4.append("\n =" + y + "*" + y);
                a4.append("\n =" + p + "cm");
                q1.setText("AREA OF SQUARE IS " + p + " cm");
            }
//CIRCLE
            if (q.equalsIgnoreCase("circle") && e.equalsIgnoreCase("PERIMETER")) {
                float y = Float.parseFloat(y3.getText());
                float p = 2 * (22 / 7) * y;
                a4.setText("Perimeter=2*(22/7)*radius");
                a4.append("\n =2*(22/7)*" + y);
                a4.append("\n =" + p + "cm");
                q1.setText("PERIMETER OF CIRCLE IS " + p + " cm");
            }
            if (q.equalsIgnoreCase("circle") && e.equalsIgnoreCase("AREA")) {
                float y = Float.parseFloat(y3.getText());
                float p = (22 / 7) * y * y;
                a4.setText("Area=(22/7)*radius*radius");
                a4.append("\n =(22/7)*" + y + "*" + y);
                a4.append("\n =" + p + "cm");
                q1.setText("AREA OF CIRCLE IS " + p + " cm");
            }
//TRIANGLE
            if (q.equalsIgnoreCase("triangle") && e.equalsIgnoreCase("area")) {
                float y = Float.parseFloat(y1.getText());
                float t = Float.parseFloat(y2.getText());
                float p = (y * t) / 2;
                a4.setText("Area=(Base*Height)/2");
                a4.append("\n =>(" + y + "*" + t + ")/2");
                a4.append("\n =" + p + "cm");
                q1.setText("AREA OF TRIANGLE IS " + p + " cm");
            }
            if (q.equalsIgnoreCase("triangle") && e.equalsIgnoreCase("PERIMETER")) {
                float y = Float.parseFloat(y1.getText());
                float p = 3 * y;
                a4.setText("Perimeter=3*Side");
                a4.append("\n =>3*" + y);
                a4.append("\n =" + p + "cm");
                q1.setText("PERIMETER OF TRIANGLE IS " + p + " cm");
            }
//CUBE
            if (q.equalsIgnoreCase("CUBE") && e.equalsIgnoreCase("VOLUME")) {
                float y = Float.parseFloat(y1.getText());
                float p = (float) Math.pow(y, 3);
                a4.setText("Volume=Length*Length*Length");
                a4.append("\n =>" + y + "*" + y + "*" + y);
                a4.append("\n =" + p + "cm");
                q1.setText("VOLUME OF CUBE IS " + p + " cm");
            }
//CUBOID
            if (q.equalsIgnoreCase("CUBOID") && e.equalsIgnoreCase("VOLUME")) {
                float y = Float.parseFloat(y1.getText());
                float t = Float.parseFloat(y2.getText());
                float u = Float.parseFloat(y3.getText());
                float p = y * t * u;
                a4.setText("Volume=Length*Breadth*Height");
                a4.append("\n =>" + y + "*" + t + "*" + u);
                a4.append("\n =" + p + "cm");
                q1.setText("VOLUME OF CUBOID IS " + p + " cm");
            }
            if (q.equalsIgnoreCase("CUBOID") && e.equalsIgnoreCase("total SURFACE AREA")) {
                float y = Float.parseFloat(y1.getText());
                float t = Float.parseFloat(y2.getText());
                float u = Float.parseFloat(y3.getText());
                float p = y * t;
                float o = t * u;
                float r = u * y;
                float z = 2 * (p + o + r);
                a4.setText("TSA=2*(LB+BH+HL)");
                a4.append("\n =>2*(" + p + "+" + o + "+" + r + ")");
                a4.append("\n =" + z + "cm");
                q1.setText("SURFACE AREA OF CUBOID IS " + z + " cm");
            }
//TRAPEZIUM
            if (q.equalsIgnoreCase("trapezium") && e.equalsIgnoreCase("PERIMETER")) {
                float y = Float.parseFloat(y1.getText());
                float t = Float.parseFloat(y2.getText());
                float u = Float.parseFloat(y3.getText());
                float r = Float.parseFloat(y4.getText());
                float p = y + t + u + r;
                a4.setText("Perimeter=Sum all Sides");
                a4.append("\n =>" + y + "+" + t + "+" + u + "+" + r);
                a4.append("\n =" + p + "cm");
                q1.setText("PERIMETER OF TRAPEZIUM IS " + p + " cm");
            }

            if (q.equalsIgnoreCase("TRAPEZIUM") && e.equalsIgnoreCase("AREA")) {
                float y = Float.parseFloat(y1.getText());
                float t = Float.parseFloat(y2.getText());
                float u = Float.parseFloat(y3.getText());
                float z = (y + t) / 2;
                float l = z * u;
                a4.setText("Area={(Lenth+Breadth)/2}*Height");
                a4.append("\n =>{(" + y + "+" + t + ")/2)*" + u + "}");
                a4.append("\n =" + l + "cm");
                q1.setText("AREA OF TRAPEZIUM IS " + l + " cm");
            }
//RHOMBUS
            if (q.equalsIgnoreCase("rhombus") && e.equalsIgnoreCase("area")) {
                float y = Float.parseFloat(y1.getText());
                float t = Float.parseFloat(y2.getText());
                float p = (y * t) / 2;
                a4.setText("Area=(Diagonal 1*Diagonal 2)/2");
                a4.append("\n =>(" + y + "*" + t + ")/2");
                a4.append("\n =" + p + "cm");
                q1.setText("AREA OF RHOMBUS IS " + p + " cm");
            }
            if (q.equalsIgnoreCase("rhombus") && e.equalsIgnoreCase("PERIMETER")) {
                float y = Float.parseFloat(y1.getText());
                float p = 4 * y;
                a4.setText("Perimeter=4*Length");
                a4.append("\n =>4*" + y);
                a4.append("\n =" + p + "cm");
                q1.setText("PERIMETER OF RHOMBUSIS " + p + " cm");
            }
//CONE
            if (q.equalsIgnoreCase("cone") && e.equalsIgnoreCase("total surface area")) {
                float y = Float.parseFloat(y3.getText());
                float t = Float.parseFloat(y4.getText());
                float p = (float) ((3.14) * y * (y + t));
                a4.setText("TSA=3.14*Radius*(Radius+Slant Height)");
                a4.append("\n =>3.14*" + y + "*(" + y + "+" + t + ")");
                a4.append("\n =" + p + "cm");
                q1.setText("Total Surface Area OF CONE IS " + p + " cm");
            }
            if (q.equalsIgnoreCase("cone") && e.equalsIgnoreCase("CURVED surface area")) {
                float y = Float.parseFloat(y3.getText());
                float t = Float.parseFloat(y4.getText());
                float p = (float) (3.14 * y * t);
                a4.setText("CSA=3.14*Radius*Slant Height");
                a4.append("\n =>3.14*" + y + "*" + t);
                a4.append("\n =" + p + "cm");
                q1.setText("CURVED SURFACE AREA OF CONE IS " + p + " cm");
            }
            if (q.equalsIgnoreCase("cone") && e.equalsIgnoreCase("VOLUME")) {
                float y = Float.parseFloat(y3.getText());
                float t = Float.parseFloat(y4.getText());
                float p = 1 / 3 * 22 / 7 * y * y * t;
                a4.setText("VOLUME=(22/7)*(1/3)*Radius*Radius*Slant Height");
                a4.append("\n =>(22/7)*(1/3)*" + y + "*" + y + "*" + t);
                a4.append("\n =" + p + "cm");
                q1.setText("VOLUME OF CONE IS " + p + " cm");
            }
//CYLINDER
            if (q.equalsIgnoreCase("CYLINDER") && e.equalsIgnoreCase("CURVED surface area")) {
                float y = Float.parseFloat(y3.getText());
                float t = Float.parseFloat(y4.getText());
                float p = 2 * 22 / 7 * y * t;
                a4.setText("CSA=2*(22/7)*Radius*Height");
                a4.append("\n =>2*(22/7)*" + y + "*" + t);
                a4.append("\n =" + p + "cm");
                q1.setText("CURVED SURFACE AREA OF CYLINDER IS " + p + " cm");
            }
            if (q.equalsIgnoreCase("CYLINDER") && e.equalsIgnoreCase("TOTAL surface area")) {
                float y = Float.parseFloat(y3.getText());
                float t = Float.parseFloat(y4.getText());
                float p = 2 * (22 / 7) * y * (y + t);
                a4.setText("TSA=2*(22/7)*Radius*(Radius+Height)");
                a4.append("\n =>2*(22/7)*" + y + "*(" + y + "+" + t + ")");
                a4.append("\n =" + p + "cm");
                q1.setText("Total Surface Area OF CYLINDER IS " + p + " cm");
            }
            if (q.equalsIgnoreCase("CYLINDER") && e.equalsIgnoreCase("VOLUME")) {
                float y = Float.parseFloat(y3.getText());
                float t = Float.parseFloat(y4.getText());
                float p = (22 / 7) * y * y * t;
                a4.setText("Volume=(22/7)*Radius*Radius*Height");
                a4.append("\n =>22/7*" + y + "*" + y + "*" + t);
                a4.append("\n =" + p + "cm");
                q1.setText("THE VOLUME OF CYLINDER IS " + p + " cm");
            }
//SPHERE
            if (q.equalsIgnoreCase("sphere") && e.equalsIgnoreCase("total surface area")) {
                float y = Float.parseFloat(y3.getText());
                float p = 4 * 22 / 7 * y * y;
                q1.setText("Total Surface Area OF SPHERE IS " + p + " cm");
            }
            if (q.equalsIgnoreCase("sphere") && e.equalsIgnoreCase("VOLUME")) {
                float y = Float.parseFloat(y3.getText());
                float p = (4 / 3) * (22 / 7) * y * y * y;
                a4.setText("Volume=4/3*(22/7)*Radius*Radius*Radius");
                a4.append("\n =>4/3*(22/7)*" + y + "*" + y + "*" + y);
                a4.append("\n =" + p + "cm");
                q1.setText("THE VOLUME OF SPHERE IS " + p + " cm");
            }

        }
        aa0 = 1;

        // TODO add your handling code here:
}//GEN-LAST:event_q04ActionPerformed

    private void q02ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_q02ActionPerformed
        pro(); // TODO add your handling code here:
}//GEN-LAST:event_q02ActionPerformed

    private void q06MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_q06MouseEntered
        q06.setEnabled(false);
}//GEN-LAST:event_q06MouseEntered

    private void q06MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_q06MouseExited
        q06.setEnabled(true);  // TODO add your handling code here:
}//GEN-LAST:event_q06MouseExited

    private void q06MenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_q06MenuSelected
        q06.setEnabled(false);    // TODO add your handling code here:
}//GEN-LAST:event_q06MenuSelected

    private void q06MenuDeselected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_q06MenuDeselected
        q06.setEnabled(true);        // TODO add your handling code here:
    }//GEN-LAST:event_q06MenuDeselected

    private void q07MenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_q07MenuSelected
        q07.setEnabled(false);        // TODO add your handling code here:
    }//GEN-LAST:event_q07MenuSelected

    private void q07MenuDeselected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_q07MenuDeselected
        q07.setEnabled(true);        // TODO add your handling code here:
    }//GEN-LAST:event_q07MenuDeselected

    private void llbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_llbActionPerformed
        String ttr = JOptionPane.showInputDialog(null, "Enter the value of X...");
        String ttr1 = JOptionPane.showInputDialog(null, "Enter the value of Y...");
        long w22 = Long.parseLong(ttr);
        long w23 = Long.parseLong(ttr1);
        long kk7 = (long) Math.pow(w22, w23);

        a4.setText("The Value of " + w22 + " raise to power " + w23 + " is " + kk7);
        a1.setText("" + kk7);
        aa0 = 1;
}//GEN-LAST:event_llbActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        String ttr = JOptionPane.showInputDialog(null, "Enter the value of X...");
        String ttr1 = JOptionPane.showInputDialog(null, "Enter the value of Y...");
        long w22 = Long.parseLong(ttr);
        long w23 = Long.parseLong(ttr1);
        long hjk = 1 / w23;
        long kk7 = (long) Math.pow(w22, hjk);
        a4.setText("The Value of " + w22 + " raise to power 1/" + w23 + " is " + kk7);
        a1.setText("" + kk7);
        aa0 = 1;
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        double bbb = Double.parseDouble(a1.getText());
        double bbn = Math.abs(bbb);
        a1.setText("" + bbn);
        a4.setText("abs(" + bbb + ")=");
        a4.append("\n" + bbn);
        aa0 = 1;
    }//GEN-LAST:event_jButton18ActionPerformed

    private void sinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sinhActionPerformed
        double jjj = Double.parseDouble(a1.getText());
        double lll = Math.sinh(jjj);
        a1.setText("" + lll);
        a4.setText("sinh(" + jjj + ")=" + lll);
        aa0 = 1;
    }//GEN-LAST:event_sinhActionPerformed

    private void coshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coshActionPerformed
        double jjj = Double.parseDouble(a1.getText());
        double lll = Math.cosh(jjj);
        a1.setText("" + lll);
        a4.setText("cosh(" + jjj + ")=" + lll);
        aa0 = 1;       // TODO add your handling code here:
    }//GEN-LAST:event_coshActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        double jjj = Double.parseDouble(a1.getText());
        double lll = Math.tanh(jjj);
        a1.setText("" + lll);
        a4.setText("tanh(" + jjj + ")=" + lll);
        aa0 = 1;        // TODO add your handling code here:
    }//GEN-LAST:event_jButton17ActionPerformed

    private void i2MenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_i2MenuSelected
        i2.setEnabled(false);        // TODO add your handling code here:
    }//GEN-LAST:event_i2MenuSelected

    private void i2MenuDeselected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_i2MenuDeselected
        i2.setEnabled(true);        // TODO add your handling code here:
    }//GEN-LAST:event_i2MenuDeselected

    private void jMenuItem33ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem33ActionPerformed

        a2.setText("" + his1);
        lko = 1;
    }//GEN-LAST:event_jMenuItem33ActionPerformed

    private void jMenuItem34ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem34ActionPerformed

        a2.setText("" + his2);
        lko = 1;      // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem34ActionPerformed

    private void jMenuItem35ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem35ActionPerformed

        a2.setText("" + his3);
        lko = 1;     // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem35ActionPerformed

    private void jMenuItem36ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem36ActionPerformed

        a2.setText("" + his4);
        lko = 1;        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem36ActionPerformed

    private void jMenuItem37ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem37ActionPerformed

        a2.setText("" + his5);
        lko = 1;       // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem37ActionPerformed

    private void jMenuItem38ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem38ActionPerformed
        his1 = "";
        his2 = "";
        his3 = "";
        his4 = "";
        his5 = "";
    }//GEN-LAST:event_jMenuItem38ActionPerformed

    private void jMenuItem39ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem39ActionPerformed
        jb0();
    }//GEN-LAST:event_jMenuItem39ActionPerformed

    private void q09MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_q09MouseEntered
        q09.setEnabled(false);        // TODO add your handling code here:
    }//GEN-LAST:event_q09MouseEntered

    private void q09MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_q09MouseExited
        q09.setEnabled(true);        // TODO add your handling code here:
    }//GEN-LAST:event_q09MouseExited

    private void q09MenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_q09MenuSelected
        q09.setEnabled(false);        // TODO add your handling code here:
    }//GEN-LAST:event_q09MenuSelected

    private void q09MenuDeselected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_q09MenuDeselected
        q09.setEnabled(true);        // TODO add your handling code here:
    }//GEN-LAST:event_q09MenuDeselected

    private void t1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_t1ValueChanged
        wr();

        int qw = t1.getSelectedIndex();
        if (qw == 0) {
            t2.removeAllItems();
            t2.addItem("Area");
            t2.addItem("Perimeter");
        }
        if (qw == 1) {
            t2.removeAllItems();
            t2.addItem("Area");
            t2.addItem("Perimeter");
        }
        if (qw == 2) {
            t2.removeAllItems();
            t2.addItem("Area");
            t2.addItem("Perimeter");
        }
        if (qw == 3) {
            t2.removeAllItems();
            t2.addItem("Area");
            t2.addItem("Perimeter");
        }
        if (qw == 4) {
            t2.removeAllItems();
            t2.addItem("Volume");

        }
        if (qw == 5) {
            t2.removeAllItems();
            t2.addItem("Volume");
            t2.addItem("Total Surface Area");
        }
        if (qw == 6) {
            t2.removeAllItems();
            t2.addItem("Area");
            t2.addItem("Perimeter");
        }
        if (qw == 7) {
            t2.removeAllItems();
            t2.addItem("Area");
            t2.addItem("Perimeter");
        }
        if (qw == 8) {
            t2.removeAllItems();
            t2.addItem("Volume");
            t2.addItem("Total Surface Area");
            t2.addItem("Curved Surface Area");
        }
        if (qw == 9) {
            t2.removeAllItems();
            t2.addItem("Volume");
            t2.addItem("Total Surface Area");
            t2.addItem("Curved Surface Area");
        }
        if (qw == 10) {
            t2.removeAllItems();
            t2.addItem("Volume");
            t2.addItem("Total Surface Area");
        }
    }//GEN-LAST:event_t1ValueChanged

    private void t1HierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_t1HierarchyChanged
    }//GEN-LAST:event_t1HierarchyChanged

    private void t2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_t2ItemStateChanged
        wr();        // TODO add your handling code here:
    }//GEN-LAST:event_t2ItemStateChanged

    private void y1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_y1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_y1KeyPressed

    private void y1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_y1KeyReleased
        ta();        // TODO add your handling code here:
    }//GEN-LAST:event_y1KeyReleased

    private void y2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_y2KeyReleased
        ta1();        // TODO add your handling code here:
    }//GEN-LAST:event_y2KeyReleased

    private void y3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_y3KeyReleased
        ta2();        // TODO add your handling code here:
    }//GEN-LAST:event_y3KeyReleased

    private void y4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_y4KeyReleased
        ta3();        // TODO add your handling code here:
    }//GEN-LAST:event_y4KeyReleased

    private void a5MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a5MouseReleased
        if (clk == 1) {
            if (sin == 1) {
                int ro = a5.getSelectedRow();
                int co = a5.getSelectedColumn();
                int ron = a5.getSelectedRowCount();
                int con = a5.getSelectedColumnCount();

                for (int i = ro; i < ro + ron; i++) {
                    String fet = (String) a5.getValueAt(i, co);
                    int si = Integer.parseInt(fet);
                    double or = Math.sin(si);
                    double or1 = Math.round(or);
                    a2.setText("" + or1);
                    String ge = a2.getText();
                    int col = co + 1;
                    a5.setValueAt(ge, i, col);
                    a2.setText("");
                }
            }
            if (cos == 1) {
                int ro = a5.getSelectedRow();
                int co = a5.getSelectedColumn();
                int ron = a5.getSelectedRowCount();
                int con = a5.getSelectedColumnCount();

                for (int i = ro; i < ro + ron; i++) {
                    String fet = (String) a5.getValueAt(i, co);
                    int si = Integer.parseInt(fet);
                    double or = Math.cos(si);
                    double or1 = Math.round(or);
                    a2.setText("" + or1);
                    String ge = a2.getText();
                    int col = co + 1;
                    a5.setValueAt(ge, i, col);
                    a2.setText("");
                }
            }
            if (tan == 1) {
                int ro = a5.getSelectedRow();
                int co = a5.getSelectedColumn();
                int ron = a5.getSelectedRowCount();
                int con = a5.getSelectedColumnCount();

                for (int i = ro; i < ro + ron; i++) {
                    String fet = (String) a5.getValueAt(i, co);
                    int si = Integer.parseInt(fet);
                    double or = Math.tan(si);
                    double or1 = Math.round(or);
                    a2.setText("" + or1);
                    String ge = a2.getText();
                    int col = co + 1;
                    a5.setValueAt(ge, i, col);
                    a2.setText("");
                }
            }
            if (sinh1 == 1) {
                int ro = a5.getSelectedRow();
                int co = a5.getSelectedColumn();
                int ron = a5.getSelectedRowCount();
                int con = a5.getSelectedColumnCount();

                for (int i = ro; i < ro + ron; i++) {
                    String fet = (String) a5.getValueAt(i, co);
                    int si = Integer.parseInt(fet);
                    double or = Math.sinh(si);
                    double or1 = Math.round(or);
                    a2.setText("" + or1);
                    String ge = a2.getText();
                    int col = co + 1;
                    a5.setValueAt(ge, i, col);
                    a2.setText("");
                }
            }
            if (cosh1 == 1) {
                int ro = a5.getSelectedRow();
                int co = a5.getSelectedColumn();
                int ron = a5.getSelectedRowCount();
                int con = a5.getSelectedColumnCount();

                for (int i = ro; i < ro + ron; i++) {
                    String fet = (String) a5.getValueAt(i, co);
                    int si = Integer.parseInt(fet);
                    double or = Math.cosh(si);
                    double or1 = Math.round(or);
                    a2.setText("" + or1);
                    String ge = a2.getText();
                    int col = co + 1;
                    a5.setValueAt(ge, i, col);
                    a2.setText("");
                }
            }
            if (tanh1 == 1) {
                int ro = a5.getSelectedRow();
                int co = a5.getSelectedColumn();
                int ron = a5.getSelectedRowCount();
                int con = a5.getSelectedColumnCount();

                for (int i = ro; i < ro + ron; i++) {
                    String fet = (String) a5.getValueAt(i, co);
                    int si = Integer.parseInt(fet);
                    double or = Math.tanh(si);
                    double or1 = Math.round(or);
                    a2.setText("" + or1);
                    String ge = a2.getText();
                    int col = co + 1;
                    a5.setValueAt(ge, i, col);
                    a2.setText("");
                }
            }
            if (dss == 1) {
                int ro = a5.getSelectedRow();
                int co = a5.getSelectedColumn();
                int ron = a5.getSelectedRowCount();
                int con = a5.getSelectedColumnCount();

                for (int i = ro; i < ro + ron; i++) {
                    String fet = (String) a5.getValueAt(i, co);
                    int si = Integer.parseInt(fet);
                    long or = (long) Math.pow(si, 2);

                    a2.setText("" + or);
                    String ge = a2.getText();
                    int col = co + 1;
                    a5.setValueAt(ge, i, col);
                    a2.setText("");
                }
            }
            if (css == 1) {
                int ro = a5.getSelectedRow();
                int co = a5.getSelectedColumn();
                int ron = a5.getSelectedRowCount();
                int con = a5.getSelectedColumnCount();

                for (int i = ro; i < ro + ron; i++) {
                    String fet = (String) a5.getValueAt(i, co);
                    int si = Integer.parseInt(fet);
                    long or = (long) Math.pow(si, 3);

                    a2.setText("" + or);
                    String ge = a2.getText();
                    int col = co + 1;
                    a5.setValueAt(ge, i, col);
                    a2.setText("");
                }
            }
            if (ult == 1) {
                int ro = a5.getSelectedRow();
                int co = a5.getSelectedColumn();
                int ron = a5.getSelectedRowCount();
                int con = a5.getSelectedColumnCount();

                for (int i = ro; i < ro + ron; i++) {
                    String fet = (String) a5.getValueAt(i, co);
                    int si = Integer.parseInt(fet);
                    long or = 1 / si;
                    a2.setText("" + or);
                    String ge = a2.getText();
                    int col = co + 1;
                    a5.setValueAt(ge, i, col);
                    a2.setText("");
                }
            }
            if (lg == 1) {
                int ro = a5.getSelectedRow();
                int co = a5.getSelectedColumn();
                int ron = a5.getSelectedRowCount();
                int con = a5.getSelectedColumnCount();

                for (int i = ro; i < ro + ron; i++) {
                    String fet = (String) a5.getValueAt(i, co);
                    int si = Integer.parseInt(fet);
                    long or = (long) Math.log10(si);
                    a2.setText("" + or);
                    String ge = a2.getText();
                    int col = co + 1;
                    a5.setValueAt(ge, i, col);
                    a2.setText("");
                }
            }
            if (arr == 1) {
                int ro = a5.getSelectedRow();
                int co = a5.getSelectedColumn();
                int ron = a5.getSelectedRowCount();
                int con = a5.getSelectedColumnCount();

                for (int i = ro; i < ro + ron; i++) {
                    String fet = (String) a5.getValueAt(i, co);
                    double si = Double.parseDouble(fet);
                    double or = Math.sqrt(si);

                    a2.setText("" + or);
                    String ge = a2.getText();
                    int col = co + 1;
                    a5.setValueAt(ge, i, col);
                    a2.setText("");
                }
            }
            if (crr == 1) {
                int ro = a5.getSelectedRow();
                int co = a5.getSelectedColumn();
                int ron = a5.getSelectedRowCount();
                int con = a5.getSelectedColumnCount();

                for (int i = ro; i < ro + ron; i++) {
                    String fet = (String) a5.getValueAt(i, co);
                    int si = Integer.parseInt(fet);
                    double or = Math.cbrt(si);

                    a2.setText("" + or);
                    String ge = a2.getText();
                    int col = co + 1;
                    a5.setValueAt(ge, i, col);
                    a2.setText("");
                }
            }
            if (abbs == 1) {
                int ro = a5.getSelectedRow();
                int co = a5.getSelectedColumn();
                int ron = a5.getSelectedRowCount();
                int con = a5.getSelectedColumnCount();

                for (int i = ro; i < ro + ron; i++) {
                    String fet = (String) a5.getValueAt(i, co);
                    int si = Integer.parseInt(fet);
                    double or = Math.abs(si);

                    a2.setText("" + or);
                    String ge = a2.getText();
                    int col = co + 1;
                    a5.setValueAt(ge, i, col);
                    a2.setText("");
                }
            }

            if (fatu == 1) {
                int ro = a5.getSelectedRow();
                int co = a5.getSelectedColumn();
                int ron = a5.getSelectedRowCount();
                int con = a5.getSelectedColumnCount();

                for (int i = ro; i < ro + ron; i++) {
                    String fet = (String) a5.getValueAt(i, co);
                    int si = Integer.parseInt(fet);

                    long fact = 1, ee;
                    for (ee = 1; ee <= si; ++ee) {
                        fact = fact * ee;
                    }

                    a2.setText("" + fact);
                    String ge = a2.getText();
                    int col = co + 1;
                    a5.setValueAt(ge, i, col);
                    a2.setText("");
                }

            }

            if (tabu == 1) {
                int ro = a5.getSelectedRow();
                int fir = ro;
                int co = a5.getSelectedColumn();
                int ron = a5.getSelectedRowCount();
                int con = a5.getSelectedColumnCount();
                for (int i = co; i < co + con; i++) {

                    String no = (String) a5.getValueAt(ro, i);
                    long c = Integer.parseInt(no);
                    for (int j1 = 1; j1 <= ron; j1++) {
                        long q = c * j1;

                        a2.setText("" + q);
                        String fet = a2.getText();
                        a5.setValueAt(fet, ro, i);
                        ro = ro + 1;

                    }
                    ro = fir;
                    a2.setText("");
                }

            } else if (sin == 0 && cos == 0 && tan == 0 && sinh1 == 0 && cosh1 == 0 && fatu == 0 && tanh1 == 0 && dss == 0 && css == 0 && ult == 0 && lg == 0 && arr == 0 && crr == 0 && abbs == 0 && tabu == 0) {
                String rtt = (String) a5.getValueAt(a5.getSelectedRow(), a5.getSelectedColumn());
                int yy = a5.getSelectedRow();
                int yy2 = a5.getSelectedColumn();
                int yy1 = a5.getSelectedRowCount();
                int yy3 = a5.getSelectedColumnCount();
                for (int i = yy; i < yy + yy1; i++) {
                    for (int j1 = yy2; j1 < yy2 + yy3; j1++) {
                        a5.setValueAt(rtt, i, j1);
                    }

                }

            }
        }

        if (mula == 1) {
            int ccr = a5.getSelectedRow();
            int ccc = a5.getSelectedColumn();
            cr = a5.getSelectedRowCount();
            cc = a5.getSelectedColumnCount();
            String name = a5.getColumnName(cc + ccc - 1);
            int plu = cr + ccr;
            a7.setText(a7.getText() + ":" + name + "" + plu);
            String fir = (String) a5.getValueAt(nr, nc);
            a5.setValueAt(fir + ":" + name + "" + plu, nr, nc);
        }
        int ro = a5.getSelectedRow();
        int co = a5.getSelectedColumn();
        int yu = co;
        int rt = ro + 1;
        String con = a5.getColumnName(yu);
        adb.setText(con + "" + rt);
        sb.setText("Ready");


}//GEN-LAST:event_a5MouseReleased

    private void a5MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a5MouseDragged
        int ro = a5.getSelectedRowCount();
        int co = a5.getSelectedColumnCount();
        adb.setText(ro + "R x " + co + "C");
}//GEN-LAST:event_a5MouseDragged

    private void a5KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_a5KeyPressed
}//GEN-LAST:event_a5KeyPressed

    private void a5KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_a5KeyReleased

        int qq = a5.getSelectedRow();
        int qq1 = a5.getSelectedColumn();
        String qw = a5.getColumnName(qq1);
        int yy = qq + 1;
        adb.setText(qw + "" + yy);

    }//GEN-LAST:event_a5KeyReleased

    private void a5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_a5KeyTyped

}//GEN-LAST:event_a5KeyTyped

    private void a7KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_a7KeyReleased
        String mat = a7.getText();
        if (mat.equals("=")) {
            mula = 1;
            adb.setText("LOOKUP");
            nr = a5.getSelectedRow();
            nc = a5.getSelectedColumn();
        }

        a5.setValueAt(a7.getText(), a5.getSelectedRow(), a5.getSelectedColumn());
}//GEN-LAST:event_a7KeyReleased

    private void workActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_workActionPerformed
        v1.setVisible(true);
        try {
            v1.setMaximum(true);
          
        } catch (PropertyVetoException ex) {
          
        }

}//GEN-LAST:event_workActionPerformed

    private void h5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_h5ActionPerformed
    }//GEN-LAST:event_h5ActionPerformed

    private void j2ValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_j2ValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_j2ValueChanged

    private void j2HierarchyChanged(java.awt.event.HierarchyEvent evt) {//GEN-FIRST:event_j2HierarchyChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_j2HierarchyChanged

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
    }//GEN-LAST:event_jButton21ActionPerformed

    private void a5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a5MouseClicked
        int r = a5.getSelectedColumn();
        if (r == 0) {
            a7.setText("");
            adb.setText("");

        } else {

            a5.setEditingRow(a5.getSelectedRow());
            a5.setEditingColumn(a5.getSelectedColumn());
            int qq = a5.getSelectedRow();
            int qq1 = a5.getSelectedColumn();
            String qw = a5.getColumnName(qq1);
            int yy = qq + 1;
            adb.setText(qw + "" + yy);
            String mat = (String) a5.getValueAt(qq, qq1);
            a7.setText(mat);

        }

    }//GEN-LAST:event_a5MouseClicked

    private void a5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_a5MousePressed
        if (mula == 1) {
            int sd = a5.getSelectedColumn();
            sc = a5.getColumnName(sd);
            sr = a5.getSelectedRow();
            int gg = sr + 1;
            a7.setText(a7.getText() + "" + sc + "" + gg);
            String fir = (String) a5.getValueAt(nr, nc);
            a5.setValueAt(fir + "" + sc + "" + gg, nr, nc);
        }
    }//GEN-LAST:event_a5MousePressed

    private void jMenuItem40ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem40ActionPerformed
        String rtt = "";
        int yy = a5.getSelectedRow();
        int yy2 = a5.getSelectedColumn();
        int yy1 = a5.getSelectedRowCount();
        int yy3 = a5.getSelectedColumnCount();
        for (int i = yy; i <= yy + yy1; i++) {
            for (int j1 = yy2; j1 <= yy2 + yy3; j1++) {
                a5.setValueAt(rtt, i, j1);
            }
        }
    }//GEN-LAST:event_jMenuItem40ActionPerformed

    private void jMenuItem41ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem41ActionPerformed
        if (mula == 1) {

            String wh = a7.getText();

            if (wh.contains("sum")) {

                sum23();

            } else if (wh.contains("pro")) {
                pro22();
            } else if (wh.contains("avg")) {
                avg22();
            } else if (wh.contains("max")) {
                max22();
            } else if (wh.contains("min")) {
                min22();
            } else {
                JOptionPane.showMessageDialog(null, "Syntax Error", "WARNING!", WIDTH);
            }

            mula = 0;
        }

        int qq = a5.getSelectedRow();
        int qq2 = a5.getSelectedRowCount();
        int yu = qq + qq2;
        int qq1 = a5.getSelectedColumn();
        String qw = a5.getColumnName(qq1);
        int yy = qq + 1;
        adb.setText(qw + "" + yy);

    }//GEN-LAST:event_jMenuItem41ActionPerformed

    private void jc2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jc2ActionPerformed
        if (jc2.isSelected() == true) {
            sin = 0;
            cos = 1;
            tan = 0;
            sinh1 = 0;
            cosh1 = 0;
            tanh1 = 0;
            dss = 0;
            css = 0;
            ult = 0;
            lg = 0;
            arr = 0;
            crr = 0;
            abbs = 0;
            tabu = 0;
        } else {
            cos = 0;
        }
        jc1.setSelected(false);
        jc3.setSelected(false);
        jc4.setSelected(false);
        jc5.setSelected(false);
        jc6.setSelected(false);
        jc7.setSelected(false);
        jc8.setSelected(false);
        jc9.setSelected(false);
        jc10.setSelected(false);
        jc11.setSelected(false);
        jc12.setSelected(false);
        jc13.setSelected(false);
        jc14.setSelected(false);
        jc15.setSelected(false); // TODO add your handling code here:
}//GEN-LAST:event_jc2ActionPerformed

    private void jc5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jc5ActionPerformed
        if (jc5.isSelected() == true) {
            sin = 0;
            cos = 0;
            tan = 0;
            sinh1 = 0;
            cosh1 = 1;
            tanh1 = 0;
            dss = 0;
            css = 0;
            ult = 0;
            lg = 0;
            arr = 0;
            crr = 0;
            abbs = 0;
            tabu = 0;
        } else {
            cosh1 = 0;
        }
        jc1.setSelected(false);
        jc2.setSelected(false);
        jc3.setSelected(false);
        jc4.setSelected(false);
        jc6.setSelected(false);
        jc7.setSelected(false);
        jc8.setSelected(false);
        jc9.setSelected(false);
        jc10.setSelected(false);
        jc11.setSelected(false);
        jc12.setSelected(false);
        jc13.setSelected(false);
        jc14.setSelected(false);
        jc15.setSelected(false); // TODO add your handling code here:
}//GEN-LAST:event_jc5ActionPerformed

    private void jc9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jc9ActionPerformed
        if (jc9.isSelected() == true) {
            sin = 0;
            cos = 0;
            tan = 0;
            sinh1 = 0;
            cosh1 = 0;
            tanh1 = 0;
            dss = 0;
            css = 0;
            ult = 1;
            lg = 0;
            arr = 0;
            crr = 0;
            abbs = 0;
            tabu = 0;
        } else {
            ult = 0;
        }
        jc2.setSelected(false);
        jc3.setSelected(false);
        jc4.setSelected(false);
        jc5.setSelected(false);
        jc6.setSelected(false);
        jc7.setSelected(false);
        jc1.setSelected(false);
        jc8.setSelected(false);
        jc1.setSelected(false);
        jc10.setSelected(false);
        jc11.setSelected(false);
        jc12.setSelected(false);
        jc13.setSelected(false);
        jc14.setSelected(false);
        jc15.setSelected(false); // TODO add your handling code here:
}//GEN-LAST:event_jc9ActionPerformed

    private void jc1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jc1ActionPerformed
        if (jc1.isSelected() == true) {
            sin = 1;
            cos = 0;
            tan = 0;
            sinh1 = 0;
            cosh1 = 0;
            tanh1 = 0;
            dss = 0;
            css = 0;
            ult = 0;
            lg = 0;
            arr = 0;
            crr = 0;
            abbs = 0;
            tabu = 0;
            fatu = 0;
        } else {
            sin = 0;
        }
        jc2.setSelected(false);
        jc3.setSelected(false);
        jc4.setSelected(false);
        jc5.setSelected(false);
        jc6.setSelected(false);
        jc7.setSelected(false);
        jc8.setSelected(false);
        jc9.setSelected(false);
        jc10.setSelected(false);
        jc11.setSelected(false);
        jc12.setSelected(false);
        jc13.setSelected(false);
        jc14.setSelected(false);
        jc15.setSelected(false);


}//GEN-LAST:event_jc1ActionPerformed

    private void jc3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jc3ActionPerformed
        if (jc3.isSelected() == true) {
            sin = 0;
            cos = 0;
            tan = 1;
            sinh1 = 0;
            cosh1 = 0;
            tanh1 = 0;
            dss = 0;
            css = 0;
            ult = 0;
            lg = 0;
            arr = 0;
            fatu = 0;
            crr = 0;
            abbs = 0;
            tabu = 0;
        } else {
            tan = 0;
        }
        jc1.setSelected(false);
        jc2.setSelected(false);
        jc4.setSelected(false);
        jc5.setSelected(false);
        jc6.setSelected(false);
        jc7.setSelected(false);
        jc8.setSelected(false);
        jc9.setSelected(false);
        jc10.setSelected(false);
        jc11.setSelected(false);
        jc12.setSelected(false);
        jc13.setSelected(false);
        jc14.setSelected(false);
        jc15.setSelected(false); // TODO add your handling code here:
}//GEN-LAST:event_jc3ActionPerformed

    private void jc4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jc4ActionPerformed
        if (jc4.isSelected() == true) {
            sin = 0;
            cos = 0;
            tan = 0;
            sinh1 = 1;
            cosh1 = 0;
            tanh1 = 0;
            dss = 0;
            css = 0;
            ult = 0;
            lg = 0;
            arr = 0;
            crr = 0;
            fatu = 0;
            abbs = 0;
            tabu = 0;
        } else {
            sinh1 = 0;
        }
        jc1.setSelected(false);
        jc2.setSelected(false);
        jc3.setSelected(false);
        jc5.setSelected(false);
        jc6.setSelected(false);
        jc7.setSelected(false);
        jc8.setSelected(false);
        jc9.setSelected(false);
        jc10.setSelected(false);
        jc11.setSelected(false);
        jc12.setSelected(false);
        jc13.setSelected(false);
        jc14.setSelected(false);
        jc15.setSelected(false); // TODO add your handling code here:
    }//GEN-LAST:event_jc4ActionPerformed

    private void jc6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jc6ActionPerformed
        if (jc6.isSelected() == true) {
            sin = 0;
            cos = 0;
            tan = 0;
            sinh1 = 0;
            cosh1 = 0;
            tanh1 = 1;
            dss = 0;
            css = 0;
            ult = 0;
            lg = 0;
            arr = 0;
            crr = 0;
            fatu = 0;
            abbs = 0;
            tabu = 0;
        } else {
            tanh1 = 0;
        }
        jc2.setSelected(false);
        jc3.setSelected(false);
        jc4.setSelected(false);
        jc5.setSelected(false);
        jc1.setSelected(false);
        jc7.setSelected(false);
        jc8.setSelected(false);
        jc9.setSelected(false);
        jc10.setSelected(false);
        jc11.setSelected(false);
        jc12.setSelected(false);
        jc13.setSelected(false);
        jc14.setSelected(false);
        jc15.setSelected(false); // TODO add your handling code here:
    }//GEN-LAST:event_jc6ActionPerformed

    private void jc7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jc7ActionPerformed
        if (jc7.isSelected() == true) {
            sin = 0;
            cos = 0;
            tan = 0;
            sinh1 = 0;
            cosh1 = 0;
            tanh1 = 0;
            dss = 1;
            css = 0;
            ult = 0;
            lg = 0;
            arr = 0;
            crr = 0;
            fatu = 0;
            abbs = 0;
            tabu = 0;
        } else {
            dss = 0;
        }
        jc2.setSelected(false);
        jc3.setSelected(false);
        jc4.setSelected(false);
        jc5.setSelected(false);
        jc6.setSelected(false);
        jc1.setSelected(false);
        jc8.setSelected(false);
        jc9.setSelected(false);
        jc10.setSelected(false);
        jc11.setSelected(false);
        jc12.setSelected(false);
        jc13.setSelected(false);
        jc14.setSelected(false);
        jc15.setSelected(false); // TODO add your handling code here:
    }//GEN-LAST:event_jc7ActionPerformed

    private void jc8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jc8ActionPerformed
        if (jc8.isSelected() == true) {
            sin = 0;
            cos = 0;
            tan = 0;
            sinh1 = 0;
            cosh1 = 0;
            tanh1 = 0;
            dss = 0;
            css = 1;
            ult = 0;
            lg = 0;
            arr = 0;
            crr = 0;
            fatu = 0;
            abbs = 0;
            tabu = 0;
        } else {
            css = 0;
        }
        jc2.setSelected(false);
        jc3.setSelected(false);
        jc4.setSelected(false);
        jc5.setSelected(false);
        jc6.setSelected(false);
        jc7.setSelected(false);
        jc1.setSelected(false);
        jc9.setSelected(false);
        jc10.setSelected(false);
        jc11.setSelected(false);
        jc12.setSelected(false);
        jc13.setSelected(false);
        jc14.setSelected(false);
        jc15.setSelected(false); // TODO add your handling code here:
    }//GEN-LAST:event_jc8ActionPerformed

    private void jc10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jc10ActionPerformed
        if (jc10.isSelected() == true) {
            sin = 0;
            cos = 0;
            tan = 0;
            sinh1 = 0;
            cosh1 = 0;
            tanh1 = 0;
            dss = 0;
            css = 0;
            ult = 0;
            lg = 1;
            arr = 0;
            crr = 0;
            fatu = 0;
            abbs = 0;
            tabu = 0;
        } else {
            lg = 0;
        }
        jc2.setSelected(false);
        jc3.setSelected(false);
        jc4.setSelected(false);
        jc5.setSelected(false);
        jc6.setSelected(false);
        jc7.setSelected(false);
        jc8.setSelected(false);
        jc9.setSelected(false);
        jc1.setSelected(false);
        jc11.setSelected(false);
        jc12.setSelected(false);
        jc13.setSelected(false);
        jc14.setSelected(false);
        jc15.setSelected(false);
    }//GEN-LAST:event_jc10ActionPerformed

    private void jc11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jc11ActionPerformed
        if (jc11.isSelected() == true) {
            sin = 0;
            cos = 0;
            tan = 0;
            sinh1 = 0;
            cosh1 = 0;
            tanh1 = 0;
            dss = 0;
            css = 0;
            ult = 0;
            lg = 0;
            arr = 1;
            crr = 0;
            fatu = 0;
            abbs = 0;
            tabu = 0;
        } else {
            arr = 0;
        }
        jc2.setSelected(false);
        jc3.setSelected(false);
        jc4.setSelected(false);
        jc5.setSelected(false);
        jc6.setSelected(false);
        jc7.setSelected(false);
        jc8.setSelected(false);
        jc9.setSelected(false);
        jc10.setSelected(false);
        jc1.setSelected(false);
        jc12.setSelected(false);
        jc13.setSelected(false);
        jc14.setSelected(false);
        jc15.setSelected(false);
    }//GEN-LAST:event_jc11ActionPerformed

    private void jc14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jc14ActionPerformed
        if (jc14.isSelected() == true) {
            sin = 0;
            cos = 0;
            tan = 0;
            sinh1 = 0;
            cosh1 = 0;
            tanh1 = 0;
            dss = 0;
            css = 0;
            ult = 0;
            lg = 0;
            arr = 0;
            crr = 0;
            abbs = 0;
            tabu = 0;
            fatu = 1;
        } else {
            fatu = 0;
        }
        jc1.setSelected(false);
        jc2.setSelected(false);
        jc3.setSelected(false);
        jc4.setSelected(false);
        jc5.setSelected(false);
        jc6.setSelected(false);
        jc7.setSelected(false);
        jc8.setSelected(false);
        jc9.setSelected(false);
        jc10.setSelected(false);
        jc11.setSelected(false);
        jc12.setSelected(false);
        jc13.setSelected(false);
        jc15.setSelected(false);
    }//GEN-LAST:event_jc14ActionPerformed

    private void jc15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jc15ActionPerformed
        if (jc15.isSelected() == true) {
            sin = 0;
            cos = 0;
            tan = 0;
            sinh1 = 0;
            cosh1 = 0;
            tanh1 = 0;
            dss = 0;
            css = 0;
            ult = 0;
            lg = 0;
            arr = 0;
            crr = 0;
            abbs = 0;
            tabu = 1;
            fatu = 0;
        } else {
            tabu = 0;
        }
        jc1.setSelected(false);
        jc2.setSelected(false);
        jc3.setSelected(false);
        jc4.setSelected(false);
        jc5.setSelected(false);
        jc6.setSelected(false);
        jc7.setSelected(false);
        jc8.setSelected(false);
        jc9.setSelected(false);
        jc10.setSelected(false);
        jc11.setSelected(false);
        jc12.setSelected(false);
        jc13.setSelected(false);
        jc14.setSelected(false);
    }//GEN-LAST:event_jc15ActionPerformed

    private void jc13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jc13ActionPerformed
        if (jc13.isSelected() == true) {
            sin = 0;
            cos = 0;
            tan = 0;
            sinh1 = 0;
            cosh1 = 0;
            tanh1 = 0;
            dss = 0;
            css = 0;
            ult = 0;
            lg = 0;
            arr = 0;
            crr = 0;
            abbs = 1;
            fatu = 0;
            tabu = 0;
        } else {
            abbs = 0;
        }
        jc1.setSelected(false);
        jc2.setSelected(false);
        jc3.setSelected(false);
        jc4.setSelected(false);
        jc5.setSelected(false);
        jc6.setSelected(false);
        jc7.setSelected(false);
        jc8.setSelected(false);
        jc9.setSelected(false);
        jc10.setSelected(false);
        jc11.setSelected(false);
        jc12.setSelected(false);
        jc15.setSelected(false);
        jc14.setSelected(false);// TODO add your handling code here:
    }//GEN-LAST:event_jc13ActionPerformed

    private void jc12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jc12ActionPerformed
        if (jc12.isSelected() == true) {
            sin = 0;
            cos = 0;
            tan = 0;
            sinh1 = 0;
            cosh1 = 0;
            tanh1 = 0;
            dss = 0;
            css = 0;
            ult = 0;
            lg = 0;
            arr = 0;
            crr = 1;
            abbs = 0;
            fatu = 0;
            tabu = 0;
        } else {
            crr = 0;
        }
        jc1.setSelected(false);
        jc2.setSelected(false);
        jc3.setSelected(false);
        jc4.setSelected(false);
        jc5.setSelected(false);
        jc6.setSelected(false);
        jc7.setSelected(false);
        jc8.setSelected(false);
        jc9.setSelected(false);
        jc10.setSelected(false);
        jc11.setSelected(false);
        jc13.setSelected(false);
        jc14.setSelected(false);
        jc15.setSelected(false);
    }//GEN-LAST:event_jc12ActionPerformed

    private void forbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_forbActionPerformed
        if (forb.isSelected() == true) {
            a7.setVisible(true);
            bnm.setVisible(true);
        } else {
            a7.setVisible(false);
            bnm.setVisible(false);
        }
    }//GEN-LAST:event_forbActionPerformed

    private void addrbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addrbActionPerformed
        if (addrb.isSelected() == true) {
            adb.setVisible(true);
        } else {
            adb.setVisible(false);
        }
    }//GEN-LAST:event_addrbActionPerformed

    private void stabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stabActionPerformed
        if (stab.isSelected() == true) {
            sb.setVisible(true);
        } else {
            sb.setVisible(false);
        }// TODO add your handling code here:
    }//GEN-LAST:event_stabActionPerformed

    private void jMenuItem42ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem42ActionPerformed
        v1.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem42ActionPerformed

    private void jMenuItem43ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem43ActionPerformed
        v1.setVisible(true);
        try {
            v1.setMaximum(true); // TODO add your handling code here:
        } catch (PropertyVetoException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem43ActionPerformed

    private void jMenuItem44ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem44ActionPerformed
        status = 1;
        roni = a5.getSelectedRow();
        roni1 = a5.getSelectedRowCount();
        coni = a5.getSelectedColumn();
        coni1 = a5.getSelectedColumnCount();       // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem44ActionPerformed

    private void jMenuItem45ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem45ActionPerformed
        status = 2;
        roni = a5.getSelectedRow();
        roni1 = a5.getSelectedRowCount();
        coni = a5.getSelectedColumn();
        coni1 = a5.getSelectedColumnCount();    // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem45ActionPerformed

    private void jMenuItem46ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem46ActionPerformed

        if (status == 1) {
            int ro = a5.getSelectedRow();
            int ron = a5.getSelectedRowCount();
            int co = a5.getSelectedColumn();
            int yy = co;
            int con = a5.getSelectedColumnCount();
            for (int i = roni; i < roni + roni1; i++) {
                for (int j1 = coni; j1 < coni + coni1; j1++) {
                    String mat = (String) a5.getValueAt(i, j1);
                    a5.setValueAt(mat, ro, co);
                    co = co + 1;
                }
                ro = ro + 1;
                co = yy;
            }

        } else if (status == 2) {
            int ro = a5.getSelectedRow();
            int ron = a5.getSelectedRowCount();
            int co = a5.getSelectedColumn();
            int yy = co;
            int con = a5.getSelectedColumnCount();
            for (int i = roni; i < roni + roni1; i++) {
                for (int j1 = coni; j1 < coni + coni1; j1++) {
                    String mat = (String) a5.getValueAt(i, j1);
                    a5.setValueAt("", i, j1);
                    a5.setValueAt(mat, ro, co);
                    co = co + 1;
                }
                ro = ro + 1;
                co = yy;
            }
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem46ActionPerformed

    private void gglActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gglActionPerformed
        if (ggl.isSelected() == true) {
            a5.setShowGrid(true);
        } else {
            a5.setShowGrid(false);
        }
    }//GEN-LAST:event_gglActionPerformed

    private void vgglActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vgglActionPerformed
        if (vggl.isSelected() == true) {
            a5.setShowVerticalLines(true);
        } else {
            a5.setShowVerticalLines(false);
        }// TODO add your handling code here:
    }//GEN-LAST:event_vgglActionPerformed

    private void hgglActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hgglActionPerformed
        if (hggl.isSelected() == true) {

            a5.setShowHorizontalLines(true);
        } else {
            a5.setShowHorizontalLines(false);
        }
    }//GEN-LAST:event_hgglActionPerformed

    private void jMenuItem47ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem47ActionPerformed
        int yu = a5.getRowCount();
        int uu = a5.getColumnCount();
        for (int i = 0; i <= yu; i++) {
            for (int j1 = 1; j1 <= uu - 1; j1++) {
                a5.setValueAt("", i, j1);
            }
        }
    }//GEN-LAST:event_jMenuItem47ActionPerformed

    private void prbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prbtnActionPerformed
        try {
            a5.print();
        } catch (PrinterException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_prbtnActionPerformed

    private void afoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_afoActionPerformed

        if (afo.isSelected() == true) {
            clk = 1;
            sb.setText("Fill Handle is ACTIVATED!");
        } else {
            clk = 0;
            sb.setText("Fill Handle is DEACTIVATED!");
        }
    }//GEN-LAST:event_afoActionPerformed

    private void a6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_a6ActionPerformed

    }//GEN-LAST:event_a6ActionPerformed

    private void a6ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_a6ItemStateChanged
        int ro = a5.getSelectedRowCount();
        int co = a5.getSelectedColumnCount();
        int q21 = a6.getSelectedIndex();
        if (q21 == 1) {
            if (ro > 1 && co > 1) {

                sum21();

            } else {
                sum24();
            }
            a6.setSelectedIndex(0);
        } else if (q21 == 2) {

            pro21();
            a6.setSelectedIndex(0);
        } else if (q21 == 3) {

            avg21();
            a6.setSelectedIndex(0);
        } else if (q21 == 4) {

            max21();
            a6.setSelectedIndex(0);
        } else if (q21 == 5) {

            min21();
            a6.setSelectedIndex(0);
        }
        //a6.setSelectedIndex(0);        // TODO add your handling code here:
    }//GEN-LAST:event_a6ItemStateChanged

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        if (bold == 0) {
            int si = a5.getFont().getSize();
            String fon = (String) fo.getSelectedItem();
            String b = size.getSelectedItem().toString();
            int c = Integer.parseInt(b);
            Font ne = new Font(fon, Font.BOLD, si);
            a5.setFont(ne);
            bold = 1;
        } else if (bold == 1) {
            int si = a5.getFont().getSize();
            String fon = (String) fo.getSelectedItem();
            String b = size.getSelectedItem().toString();
            int c = Integer.parseInt(b);
            Font ne = new Font(fon, Font.PLAIN, si);
            a5.setFont(ne);
            bold = 0;
        }
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        if (itl == 0) {
            int si = a5.getFont().getSize();
            String fon = (String) fo.getSelectedItem();
            String b = size.getSelectedItem().toString();
            int c = Integer.parseInt(b);
            Font ne = new Font(fon, Font.ITALIC, si);
            a5.setFont(ne);
            itl = 1;
        } else if (itl == 1) {
            int si = a5.getFont().getSize();
            String fon = (String) fo.getSelectedItem();
            String b = size.getSelectedItem().toString();
            int c = Integer.parseInt(b);
            Font ne = new Font(fon, Font.PLAIN, si);
            a5.setFont(ne);
            itl = 0;
        }
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed

    }//GEN-LAST:event_jButton15ActionPerformed

    private void foItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_foItemStateChanged
        String mat = (String) a5.getValueAt(a5.getSelectedRow(), a5.getSelectedColumn());
        //   int si=a5.getFont().getSize();
        String fon = (String) fo.getSelectedItem();
        String b = size.getSelectedItem().toString();
        int c = Integer.parseInt(b);
        Font ne = new Font(fon, Font.PLAIN, c);

        a5.setFont(ne);
    }//GEN-LAST:event_foItemStateChanged

    private void sizeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_sizeItemStateChanged
        //        String a=a1.getFont().getFontName();
        String b = size.getSelectedItem().toString();
        int c = Integer.parseInt(b);
        String fon = (String) fo.getSelectedItem();
        Font ne = new Font(fon, Font.PLAIN, c);
        a5.setFont(ne);
    }//GEN-LAST:event_sizeItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new calc().setVisible(true);

            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField a1;
    private javax.swing.JTextArea a2;
    private javax.swing.JTextArea a4;
    private javax.swing.JTable a5;
    private javax.swing.JComboBox a6;
    private javax.swing.JTextField a7;
    private javax.swing.JTextArea a8;
    private javax.swing.JTextField adb;
    private javax.swing.JCheckBox addrb;
    private javax.swing.JCheckBox afo;
    private javax.swing.JButton b10;
    private javax.swing.JButton b4;
    private javax.swing.JButton b5;
    private javax.swing.JButton b6;
    private javax.swing.JButton b8;
    private javax.swing.JButton b9;
    private javax.swing.JLabel bnm;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton cosh;
    private javax.swing.JDesktopPane d1;
    private javax.swing.JButton d11;
    private javax.swing.JDesktopPane d2;
    private javax.swing.JDesktopPane d3;
    private javax.swing.JDesktopPane d4;
    private javax.swing.JComboBox fo;
    private javax.swing.JCheckBox forb;
    private javax.swing.JCheckBox g1;
    private javax.swing.JCheckBox g2;
    private javax.swing.JCheckBox ggl;
    private javax.swing.JMenu h44;
    private javax.swing.JButton h5;
    private javax.swing.JCheckBox hggl;
    private javax.swing.JMenu i2;
    private javax.swing.JTree j2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JDesktopPane jDesktopPane3;
    private javax.swing.JDesktopPane jDesktopPane4;
    private javax.swing.JDesktopPane jDesktopPane7;
    private javax.swing.JDesktopPane jDesktopPane8;
    private javax.swing.JDesktopPane jDesktopPane9;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem13;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem15;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem19;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem20;
    private javax.swing.JMenuItem jMenuItem21;
    private javax.swing.JMenuItem jMenuItem22;
    private javax.swing.JMenuItem jMenuItem23;
    private javax.swing.JMenuItem jMenuItem24;
    private javax.swing.JMenuItem jMenuItem25;
    private javax.swing.JMenuItem jMenuItem26;
    private javax.swing.JMenuItem jMenuItem27;
    private javax.swing.JMenuItem jMenuItem28;
    private javax.swing.JMenuItem jMenuItem29;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem30;
    private javax.swing.JMenuItem jMenuItem31;
    private javax.swing.JMenuItem jMenuItem32;
    private javax.swing.JMenuItem jMenuItem33;
    private javax.swing.JMenuItem jMenuItem34;
    private javax.swing.JMenuItem jMenuItem35;
    private javax.swing.JMenuItem jMenuItem36;
    private javax.swing.JMenuItem jMenuItem37;
    private javax.swing.JMenuItem jMenuItem38;
    private javax.swing.JMenuItem jMenuItem39;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem40;
    private javax.swing.JMenuItem jMenuItem41;
    private javax.swing.JMenuItem jMenuItem42;
    private javax.swing.JMenuItem jMenuItem43;
    private javax.swing.JMenuItem jMenuItem44;
    private javax.swing.JMenuItem jMenuItem45;
    private javax.swing.JMenuItem jMenuItem46;
    private javax.swing.JMenuItem jMenuItem47;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JPopupMenu jPopupMenu3;
    private javax.swing.JPopupMenu jPopupMenu4;
    private javax.swing.JPopupMenu jPopupMenu5;
    private javax.swing.JPopupMenu jPopupMenu6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JCheckBox jc1;
    private javax.swing.JCheckBox jc10;
    private javax.swing.JCheckBox jc11;
    private javax.swing.JCheckBox jc12;
    private javax.swing.JCheckBox jc13;
    private javax.swing.JCheckBox jc14;
    private javax.swing.JCheckBox jc15;
    private javax.swing.JCheckBox jc2;
    private javax.swing.JCheckBox jc3;
    private javax.swing.JCheckBox jc4;
    private javax.swing.JCheckBox jc5;
    private javax.swing.JCheckBox jc6;
    private javax.swing.JCheckBox jc7;
    private javax.swing.JCheckBox jc8;
    private javax.swing.JCheckBox jc9;
    private javax.swing.JDesktopPane k1;
    private javax.swing.JLabel k8;
    private javax.swing.JButton kk;
    private javax.swing.JList l1;
    private javax.swing.JTextField le1;
    private javax.swing.JButton llb;
    private javax.swing.JButton prbtn;
    private javax.swing.JMenuItem q00;
    private javax.swing.JMenuItem q01;
    private javax.swing.JMenuItem q02;
    private javax.swing.JMenuItem q03;
    private javax.swing.JMenuItem q04;
    private javax.swing.JMenu q06;
    private javax.swing.JMenu q07;
    private javax.swing.JMenu q09;
    private javax.swing.JTextField q1;
    private javax.swing.JButton q2;
    private javax.swing.JButton s1;
    private javax.swing.JTextField sb;
    private javax.swing.JButton sinh;
    private javax.swing.JComboBox size;
    private javax.swing.JCheckBox stab;
    private javax.swing.JList t1;
    private javax.swing.JMenuBar t11;
    private javax.swing.JComboBox t2;
    private javax.swing.JInternalFrame v1;
    private javax.swing.JInternalFrame v2;
    private javax.swing.JCheckBox vggl;
    private javax.swing.JButton work;
    private javax.swing.JButton x1;
    private javax.swing.JButton x10;
    private javax.swing.JButton x11;
    private javax.swing.JButton x12;
    private javax.swing.JButton x13;
    private javax.swing.JButton x14;
    private javax.swing.JButton x15;
    private javax.swing.JButton x16;
    private javax.swing.JButton x17;
    private javax.swing.JButton x18;
    private javax.swing.JButton x19;
    private javax.swing.JButton x2;
    private javax.swing.JButton x21;
    private javax.swing.JButton x22;
    private javax.swing.JButton x23;
    private javax.swing.JButton x24;
    private javax.swing.JButton x3;
    private javax.swing.JButton x4;
    private javax.swing.JButton x5;
    private javax.swing.JButton x6;
    private javax.swing.JButton x7;
    private javax.swing.JButton x8;
    private javax.swing.JButton x9;
    private javax.swing.JTextField y1;
    private javax.swing.JLabel y11;
    private javax.swing.JLabel y12;
    private javax.swing.JLabel y13;
    private javax.swing.JLabel y14;
    private javax.swing.JTextField y2;
    private javax.swing.JTextField y3;
    private javax.swing.JTextField y4;
    private javax.swing.JLabel z1;
    private javax.swing.JLabel z2;
    private javax.swing.JLabel z3;
    private javax.swing.JLabel z4;
    // End of variables declaration//GEN-END:variables
private void add1() {
        if (a4.getText().equals("")) {
        } else {

            int end = a4.getSelectionEnd();
            String fr = a4.getText().substring(0, end - 1);

            if (sign.equals("")) {

                sign = "+";
                a4.setText(a4.getText() + "+");
                valu = Double.parseDouble(a1.getText());
                a1.setText("0");
            } else {
                eqq1();
                a1.setText("0");
                a4.setText(a4.getText() + "+");
                sign = "";
            }

        }
    }

    private void sub1() {
        if (a4.getText().equals("")) {
        } else {
            eqq1();
            a4.setText(a4.getText() + "-");

            valu = Double.parseDouble(a1.getText());
            a1.setText("0");
            sign = "-";
        }
    }

    private void mul1() {
        if (a4.getText().equals("")) {
        } else {
            eqq1();
            a4.setText(a4.getText() + "*");

            valu = Double.parseDouble(a1.getText());
            a1.setText("0");
            sign = "*";
        }
    }

    private void div1() {
        if (a4.getText().equals("")) {
        } else {
            eqq1();
            a4.setText(a4.getText() + "/");

            valu = Double.parseDouble(a1.getText());
            a1.setText("0");
            sign = "/";
        }
    }

    private void eqq1() {
        if (sign.equals("+")) {
            double ut = Double.parseDouble(a1.getText());
            double aq = ut + valu;
            a1.setText("" + aq);
            a4.setText(a4.getText() + "=(" + aq + ")");
        } else if (sign.equals("-")) {
            double ut = Double.parseDouble(a1.getText());
            double aq = valu - ut;
            a1.setText("" + aq);
            a4.setText(a4.getText() + "=(" + aq + ")");
        } else if (sign.equals("*")) {
            double ut = Double.parseDouble(a1.getText());
            double aq = ut * valu;
            a1.setText("" + aq);
            a4.setText(a4.getText() + "=(" + aq + ")");
        } else if (sign.equals("/")) {
            double ut = Double.parseDouble(a1.getText());
            double aq = valu / ut;
            a1.setText("" + aq);
            a4.setText(a4.getText() + "=(" + aq + ")");
        }
    }

    private void wr() {
        y1.setVisible(false);
        y2.setVisible(false);
        y3.setVisible(false);
        y4.setVisible(false);
        q2.setVisible(false);
        d11.setVisible(true);
        y11.setVisible(false);
        y12.setVisible(false);
        y13.setVisible(false);
        y14.setVisible(false);
        z1.setVisible(false);
        z2.setVisible(false);
        z3.setVisible(false);
        z4.setVisible(false);
        a1.setVisible(true);
    }

    private void add() {

        String rr = a4.getText();
        String aa;
        String dd, hh, jj;

        if (a == 0 && d == 0 && h == 0 && j == 0) {
            a4.setText("" + rr);
        } else {

            String ll = a4.getText();
            int gg = a4.getSelectionEnd();
            char tt = ll.charAt(gg - 1);
            a4.setText("" + tt);
            String ff = a4.getText();
            if (ff.equals("+") || ff.equals("-") || ff.equals("*") || ff.equals("/")) {

                JOptionPane.showMessageDialog(null, "Please enter the Value..");
                a4.setText("" + rr);
                aa0 = 0;
            } else if (ff.equals(")")) {

                String sd = a4.getText();
                int ssa = a4.getSelectionEnd();
                char tr = sd.charAt(ssa - 1);
                a4.setText("" + tr);
                String de = a4.getText();

                if (sd.equals("") || de.equals("*") || de.equals("+") || de.equals("-") || de.equals("/")) {
                } else {

                    a4.setText(rr + "+");

                    a = Double.parseDouble(a1.getText());
                    y33 = a + y33;

                    d = 0;
                    h = 0;
                    j = 0;
                    a1.setText("0");

                }
                f = 0;
                aa0 = 0;

            } else {
                a4.setText("" + rr);
                a4.setText(a4.getText() + "=");
                x = Double.parseDouble(a1.getText());
                if (d == 0 && h == 0 && j == 0) {

                    if (f == 0) {

                        f = y33 + x;

                        a1.setText("" + f);
                        a4.setText(a4.getText() + "(" + f + ")");
                        a = x;

                    } else {
                        f = f + a;
                        a1.setText("" + f);
                        a4.setText(a4.getText() + "(" + f + ")");
                    }

                }
                if (a == 0 && h == 0 && j == 0) {
                    if (g == 0) {
                        g = d - x;

                        a1.setText("" + g);
                        a4.setText(a4.getText() + "(" + g + ")");
                        d = x;
                    } else {
                        g = g - d;
                        a1.setText("" + g);
                        a4.setText(a4.getText() + "(" + g + ")");
                    }

                }
                if (a == 0 && d == 0 && j == 0) {
                    if (dds == 0) {
                        dds = y44 * x;
                        a1.setText("" + dds);
                        a4.setText(a4.getText() + "(" + dds + ")");
                        h = x;

                    } else {
                        dds = dds * h;
                        a1.setText("" + dds);
                        a4.setText(a4.getText() + "(" + dds + ")");
                    }
                }
                if (a == 0 && d == 0 && h == 0) {
                    if (k == 0) {
                        k = j / x;
                        a1.setText("" + k);
                        a4.setText(a4.getText() + "(" + k + ")");
                        j = x;
                    } else {
                        k = k / j;
                        a1.setText("" + k);
                        a4.setText(a4.getText() + "(" + k + ")");
                    }
                }
                y33 = 0;
                y44 = 1;
                aa0 = 1;
            }
        }

        String sd = a4.getText();
        int ssa = a4.getSelectionEnd();
        char tr = sd.charAt(ssa - 1);
        a4.setText("" + tr);
        String de = a4.getText();
        a4.setText("" + sd);
        if (sd.equals("") || de.equals("*") || de.equals("+") || de.equals("-") || de.equals("/")) {
        } else {

            a4.setText(a4.getText() + "+");

            a = Double.parseDouble(a1.getText());

            y33 = a + y33;

            d = 0;
            h = 0;
            j = 0;
            a1.setText("0");

        }

        f = 0;
        aa0 = 0;

    }

    private void sub() {
        String rr = a4.getText();
        if (a == 0 && d == 0 && h == 0 && j == 0) {
            a4.setText("" + rr);
        } else {

            String ll = a4.getText();
            int gg = a4.getSelectionEnd();
            char tt = ll.charAt(gg - 1);
            a4.setText("" + tt);
            String ff = a4.getText();
            if (ff.equals("+") || ff.equals("-") || ff.equals("*") || ff.equals("/")) {

                JOptionPane.showMessageDialog(null, "Please enter the Value..");
                a4.setText("" + rr);
                aa0 = 0;
            } else if (ff.equals(")")) {
                String sd = a4.getText();
                int ssa = a4.getSelectionEnd();
                char tr = sd.charAt(ssa - 1);
                a4.setText("" + tr);
                String de = a4.getText();

                if (sd.equals("") || (de.equals("*") || de.equals("+") || de.equals("-") || de.equals("/"))) {
                } else {
                    a4.setText(rr + "-");

                    d = Double.parseDouble(a1.getText());

                    a = 0;
                    h = 0;
                    j = 0;
                    a1.setText("0");
                    aa0 = 0;
                }
                g = 0;

            } else {
                a4.setText("" + rr);
                a4.setText(a4.getText() + "=");
                x = Double.parseDouble(a1.getText());
                if (d == 0 && h == 0 && j == 0) {
                    if (f == 0) {

                        f = y33 + x;
                        a1.setText("" + f);
                        a4.setText(a4.getText() + "(" + f + ")");
                        a = x;
                    } else {
                        f = f + a;
                        a1.setText("" + f);
                        a4.setText(a4.getText() + "(" + f + ")");
                    }

                }
                if (a == 0 && h == 0 && j == 0) {
                    if (g == 0) {
                        g = d - x;

                        a1.setText("" + g);
                        a4.setText(a4.getText() + "(" + g + ")");
                        d = x;
                    } else {
                        g = g - d;
                        a1.setText("" + g);
                        a4.setText(a4.getText() + "(" + g + ")");
                    }

                }
                if (a == 0 && d == 0 && j == 0) {
                    if (dds == 0) {
                        dds = y44 * x;
                        a1.setText("" + dds);
                        a4.setText(a4.getText() + "(" + dds + ")");
                        h = x;

                    } else {
                        dds = dds * h;
                        a1.setText("" + dds);
                        a4.setText(a4.getText() + "(" + dds + ")");
                    }
                }
                if (a == 0 && d == 0 && h == 0) {
                    if (k == 0) {
                        k = j / x;
                        a1.setText("" + k);
                        a4.setText(a4.getText() + "(" + k + ")");
                        j = x;
                    } else {
                        k = k / j;
                        a1.setText("" + k);
                        a4.setText(a4.getText() + "(" + k + ")");
                    }
                }
                y33 = 0;
                y44 = 1;
                aa0 = 1;
            }
        }
        //...............................................................
        String sd = a4.getText();
        int ssa = a4.getSelectionEnd();
        char tr = sd.charAt(ssa - 1);
        a4.setText("" + tr);
        String de = a4.getText();
        a4.setText("" + sd);
        if (sd.equals("") || de.equals("*") || de.equals("+") || de.equals("-") || de.equals("/")) {
        } else {
            a4.setText(a4.getText() + "-");

            d = Double.parseDouble(a1.getText());

            a = 0;
            h = 0;
            j = 0;
            a1.setText("0");
            aa0 = 0;
        }
        g = 0;

    }

    private void pro() {
        String rr = a4.getText();
        if (a == 0 && d == 0 && h == 0 && j == 0) {
            a4.setText("" + rr);
        } else {

            String ll = a4.getText();
            int gg = a4.getSelectionEnd();
            char tt = ll.charAt(gg - 1);
            a4.setText("" + tt);
            String ff = a4.getText();
            if (ff.equals("+") || ff.equals("-") || ff.equals("*") || ff.equals("/")) {

                JOptionPane.showMessageDialog(null, "Please enter the Value..");
                a4.setText("" + rr);
                aa0 = 0;
            } else if (ff.equals(")")) {
                String sd = a4.getText();
                int ssa = a4.getSelectionEnd();
                char tr = sd.charAt(ssa - 1);
                a4.setText("" + tr);
                String de = a4.getText();
                if (sd.equals("") || de.equals("*") || de.equals("+") || de.equals("-") || de.equals("/")) {
                } else {
                    a4.setText(rr + "*");

                    h = Double.parseDouble(a1.getText());
                    y44 = h * y44;
                    a = 0;
                    d = 0;
                    j = 0;
                    a1.setText("0");
                    aa0 = 0;

                }
                dds = 0;
            } else {
                a4.setText("" + rr);
                a4.setText(a4.getText() + "=");
                x = Double.parseDouble(a1.getText());
                if (d == 0 && h == 0 && j == 0) {
                    if (f == 0) {

                        f = y33 + x;
                        a1.setText("" + f);
                        a4.setText(a4.getText() + "(" + f + ")");
                        a = x;
                    } else {
                        f = f + a;
                        a1.setText("" + f);
                        a4.setText(a4.getText() + "(" + f + ")");
                    }

                }
                if (a == 0 && h == 0 && j == 0) {
                    if (g == 0) {
                        g = d - x;

                        a1.setText("" + g);
                        a4.setText(a4.getText() + "(" + g + ")");
                        d = x;
                    } else {
                        g = g - d;
                        a1.setText("" + g);
                        a4.setText(a4.getText() + "(" + g + ")");
                    }

                }
                if (a == 0 && d == 0 && j == 0) {
                    if (dds == 0) {
                        dds = y44 * x;
                        a1.setText("" + dds);
                        a4.setText(a4.getText() + "(" + dds + ")");
                        h = x;

                    } else {
                        dds = dds * h;
                        a1.setText("" + dds);
                        a4.setText(a4.getText() + "(" + dds + ")");
                    }
                }
                if (a == 0 && d == 0 && h == 0) {
                    if (k == 0) {
                        k = j / x;
                        a1.setText("" + k);
                        a4.setText(a4.getText() + "(" + k + ")");
                        j = x;
                    } else {
                        k = k / j;
                        a1.setText("" + k);
                        a4.setText(a4.getText() + "(" + k + ")");
                    }
                }
                y33 = 0;
                y44 = 1;
                aa0 = 1;
            }
        }

        //................................................................
        String sd = a4.getText();
        int ssa = a4.getSelectionEnd();
        char tr = sd.charAt(ssa - 1);
        a4.setText("" + tr);
        String de = a4.getText();
        a4.setText("" + sd);
        if (sd.equals("") || de.equals("*") || de.equals("+") || de.equals("-") || de.equals("/")) {
        } else {
            a4.setText(a4.getText() + "*");

            h = Float.parseFloat(a1.getText());
            y44 = h * y44;
            a = 0;
            d = 0;
            j = 0;
            a1.setText("0");
            aa0 = 0;

        }
        dds = 0;
    }

    private void div() {
        String rr = a4.getText();
        if (a == 0 && d == 0 && h == 0 && j == 0) {
            a4.setText("" + rr);
        } else {

            String ll = a4.getText();
            int gg = a4.getSelectionEnd();
            char tt = ll.charAt(gg - 1);
            a4.setText("" + tt);
            String ff = a4.getText();
            if (ff.equals("+") || ff.equals("-") || ff.equals("*") || ff.equals("/")) {

                JOptionPane.showMessageDialog(null, "Please enter the Value..");
                a4.setText("" + rr);
                aa0 = 0;
            }
            if (ff.equals(")")) {
                String sd = a4.getText();
                int ssa = a4.getSelectionEnd();
                char tr = sd.charAt(ssa - 1);
                a4.setText("" + tr);
                String de = a4.getText();

                if (sd.equals("") || de.equals("*") || de.equals("+") || de.equals("-") || de.equals("/")) {
                } else {
                    a4.setText(rr + "/");

                    j = Float.parseFloat(a1.getText());

                    a = 0;
                    d = 0;
                    h = 0;
                    a1.setText("0");
                    aa0 = 0;
                }
                k = 0;
            } else {
                a4.setText("" + rr);
                a4.setText(a4.getText() + "=");
                x = Double.parseDouble(a1.getText());
                if (d == 0 && h == 0 && j == 0) {
                    if (f == 0) {

                        f = y33 + x;
                        a1.setText("" + f);
                        a4.setText(a4.getText() + "(" + f + ")");
                        a = x;
                    } else {
                        f = f + a;
                        a1.setText("" + f);
                        a4.setText(a4.getText() + "(" + f + ")");
                    }

                }
                if (a == 0 && h == 0 && j == 0) {
                    if (g == 0) {
                        g = d - x;

                        a1.setText("" + g);
                        a4.setText(a4.getText() + "(" + g + ")");
                        d = x;
                    } else {
                        g = g - d;
                        a1.setText("" + g);
                        a4.setText(a4.getText() + "(" + g + ")");
                    }

                }
                if (a == 0 && d == 0 && j == 0) {
                    if (dds == 0) {
                        dds = y44 * x;
                        a1.setText("" + dds);
                        a4.setText(a4.getText() + "(" + dds + ")");
                        h = x;

                    } else {
                        dds = dds * h;
                        a1.setText("" + dds);
                        a4.setText(a4.getText() + "(" + dds + ")");
                    }
                }
                if (a == 0 && d == 0 && h == 0) {
                    if (k == 0) {
                        k = j / x;
                        a1.setText("" + k);
                        a4.setText(a4.getText() + "(" + k + ")");
                        j = x;
                    } else {
                        k = k / j;
                        a1.setText("" + k);
                        a4.setText(a4.getText() + "(" + k + ")");
                    }
                }
                y33 = 0;
                y44 = 1;
                aa0 = 1;
            }
        }
        //..............................................................
        String sd = a4.getText();
        int ssa = a4.getSelectionEnd();
        char tr = sd.charAt(ssa - 1);
        a4.setText("" + tr);
        String de = a4.getText();
        a4.setText("" + sd);
        if (sd.equals("") || de.equals("*") || de.equals("+") || de.equals("-") || de.equals("/")) {
        } else {
            a4.setText(a4.getText() + "/");

            j = Float.parseFloat(a1.getText());

            a = 0;
            d = 0;
            h = 0;
            a1.setText("0");
            aa0 = 0;
        }
        k = 0;
    }

    private void eq() {
        String rr = a4.getText();
        if (a == 0 && d == 0 && h == 0 && j == 0) {
            a4.setText("" + rr);
        } else {

            String ll = a4.getText();
            int gg = a4.getSelectionEnd();
            char tt = ll.charAt(gg - 1);
            a4.setText("" + tt);
            String ff = a4.getText();
            if (ff.equals("+") || ff.equals("-") || ff.equals("*") || ff.equals("/")) {

                JOptionPane.showMessageDialog(null, "Please enter the Value..");
                a4.setText("" + rr);
                aa0 = 0;
            } else {
                a4.setText("" + rr);
                a4.setText(a4.getText() + "=");
                x = Double.parseDouble(a1.getText());
                if (d == 0 && h == 0 && j == 0) {
                    if (f == 0) {

                        f = y33 + x;
                        a1.setText("" + f);
                        a4.setText(a4.getText() + "(" + f + ")");
                        a = x;
                    } else {
                        f = f + a;
                        a1.setText("" + f);
                        a4.setText(a4.getText() + "(" + f + ")");
                    }

                }
                if (a == 0 && h == 0 && j == 0) {

                    if (g == 0) {
                        g = d - x;

                        a1.setText("" + g);
                        a4.setText(a4.getText() + "(" + g + ")");
                        d = x;
                    } else {
                        g = g - d;
                        a1.setText("" + g);
                        a4.setText(a4.getText() + "(" + g + ")");
                    }

                }

                if (a == 0 && d == 0 && j == 0) {
                    if (dds == 0) {
                        dds = y44 * x;

                        a1.setText("" + dds);
                        a4.setText(a4.getText() + "(" + dds + ")");
                        h = x;

                    } else {
                        dds = dds * h;
                        a1.setText("" + dds);
                        a4.setText(a4.getText() + "(" + dds + ")");
                    }
                }
                if (a == 0 && d == 0 && h == 0) {
                    if (k == 0) {
                        k = j / x;
                        a1.setText("" + k);
                        a4.setText(a4.getText() + "(" + k + ")");
                        j = x;
                    } else {
                        k = k / j;
                        a1.setText("" + k);
                        a4.setText(a4.getText() + "(" + k + ")");
                    }
                }
                y33 = 0;
                y44 = 1;
                aa0 = 1;
            }
        }
    }

    private void eq1() {
        if (l1.isSelectionEmpty()) {
            JOptionPane.showMessageDialog(null, "Function Is Not Selected");
        } else {
            a4.setText("");

            a2.setText("");

            String u = (String) l1.getSelectedValue();
            long p = (long) Float.parseFloat(a1.getText());

            //table
            if (u.equals("TABLE")) {
                String tt3 = JOptionPane.showInputDialog(null, "Till the Multiple of...?\nBy Default it is 10");
                if (tt3.equals("")) {
                    float fir = Float.parseFloat(a1.getText());
                    int ds = (int) fir;
                    int ds1 = ds + 1;
                    if (fir > ds && fir < ds1) {
                        a2.setText("Table Of " + fir);
                        for (long i = 1; i <= 10; i++) {
                            float m = (float) (fir * i);
                            a2.append("\n " + fir + "*" + i + "=" + m);

                        }
                    } else {
                        a2.setText("Table Of " + p);
                        for (long i = 1; i <= 10; i++) {
                            long m = (long) (p * i);
                            a2.append("\n " + p + "*" + i + "=" + m);
                        }
                    }

                } else {

                    long ew = Long.parseLong("" + tt3);
                    float fir = Float.parseFloat(a1.getText());
                    int ds = (int) fir;
                    int ds1 = ds + 1;
                    if (fir > ds && fir < ds1) {
                        a2.setText("Table Of " + fir);
                        for (long i = 1; i <= ew; i++) {
                            float m = (float) (fir * i);
                            a2.append("\n " + fir + "*" + i + "=" + m);

                        }
                    } else {
                        a2.setText("Table Of " + p);
                        for (long i = 1; i <= ew; i++) {
                            long m = (long) (p * i);
                            a2.append("\n " + p + "*" + i + "=" + m);
                        }
                    }

                }

            } //factorial
            else if (u.equals("FACTORIAL")) {
                long fact = 1, ee;
                for (ee = 1; ee <= p; ++ee) {
                    fact = fact * ee;
                    a4.setText(a4.getText() + "*" + ee);

                }

                String gh = a4.getText();
                a4.setText("");
                a4.setText(gh.substring(1) + "=" + fact);
                a4.append("\n" + p + "!=" + fact);
                a1.setText("" + fact);

            } //details
            else if (u.equalsIgnoreCase("details")) {
                if (p == 0) {
                    a4.setText("It is Whole number.");
                }
                if (p > 0) {
                    a4.setText("It is Natural number & Whole Number.");
                }
                if (p < 0) {
                    a4.setText("It is neither the Whole number nor Natural number.");
                }
                a4.append("\nIt is Real number.");
                if (p > 0) {
                    a4.append("\nIt is Positive number.");
                }
                if (p < 0) {
                    a4.append("\nIt is Negative number.");
                }
                float r = p % 2;
                if (r == 0) {
                    a4.append("\nIt is Even number.");
                }
                if (r != 0) {
                    a4.append("\nIt is Odd number.");
                }
                int sum = 0, i;
                for (i = 1; i < p; i++) {
                    if (p % i == 0) {
                        sum += i;
                    }
                }
                //perfect
                if (sum == p) {
                    a4.append("\nIt is Perfect Number");
                }

                long rev = 0, q, b;
                for (q = p; q != 0; q = q / 10) {
                    b = q % 10;
                    rev = (rev * 10) + b;
                }
                //palindrome
                if (rev == p) {
                    a4.append("\nIt is Palindrome Number");
                }
                long c, t, sum1 = 0;
                for (t = p; t != 0; t = t / 10) {
                    long aas = t % 10;
                    c = aas * aas * aas;
                    sum1 = sum1 + c;
                }
                //armstrong
                if (sum1 == p) {
                    a4.append("\nIt is Armstrong Number.");
                }
                //prime
                int zxzx = 0;
                for (int bnbn = 1; bnbn <= p; bnbn++) {
                    if (p % bnbn == 0) {
                        zxzx++;
                    }

                }
                //prime
                if (zxzx == 2) {
                    a4.append("\nIt is  Prime Number.");
                }

                //happy
                long n, qa;
                qa = p;
                while (qa > 9) {
                    qa = sosod(qa);
                }
                if (qa == 1) {
                    a4.append("\nIt is a Happy Number");
                }

                String as = a1.getText();
                if (as.contains("0") || as.contains("6") || as.contains("8") || as.contains("9")) {
                    a4.append("\nIt is a Momos Number.");
                }

            } //odd
            else if (u.equalsIgnoreCase("ODD NUMBER")) {
                String yyy = JOptionPane.showInputDialog(null, "From...?");
                String hhh = JOptionPane.showInputDialog(null, "TO...?");
                long i = Long.parseLong(yyy);
                long v = Long.parseLong(hhh);
                if (i > v) {
                    JOptionPane.showMessageDialog(null, "Syntax Error");
                } else {
                    if (i % 2 != 0) {
                    } else {
                        i++;
                    }
                    for (long jd = i; jd <= v; jd += 2) {
                        a4.setText(a4.getText() + "," + jd);

                        a2.setText(a2.getText() + "," + jd);
                    }
                    String dsa = a4.getText().substring(1);
                    String tta = a2.getText().substring(1);
                    a2.setText("" + tta);
                    a4.setText("Odd Numbers(" + i + "-" + v + ") are-");
                    a4.append("\n" + dsa);
                }

            } else if (u.equalsIgnoreCase("EVEN NUMBER")) {
                String yyy = JOptionPane.showInputDialog(null, "From...?");
                String hhh = JOptionPane.showInputDialog(null, "TO...?");
                long i = Long.parseLong(yyy);
                long v = Long.parseLong(hhh);
                if (i > v) {
                    JOptionPane.showMessageDialog(null, "Syntax Error");
                } else {

                    if (i % 2 == 0) {
                    } else {
                        i++;
                    }
                    for (long yyr = i; yyr <= v; yyr += 2) {
                        a4.setText(a4.getText() + "," + yyr);
                        a2.setText(a2.getText() + "," + yyr);
                    }
                    String dsa = a4.getText().substring(1);
                    String tta = a2.getText().substring(1);
                    a2.setText("" + tta);
                    a4.setText("Even Numbers(" + i + "-" + v + ") are-");
                    a4.append("\n" + dsa);
                }
            } else if (u.equalsIgnoreCase("FACTORS")) {
                int q = Integer.parseInt(a1.getText());
                for (int y = 1; y <= q; y++) {
                    if (q % y == 0) {

                        a2.setText(a2.getText() + "," + y);

                    }
                }
                String hk = a2.getText();
                a2.setText(hk.substring(1));
                String fir = a2.getText();
                a4.setText("Because " + fir + " completely divides the " + q);
            }
        }
        aa0 = 1;
    }

    long sosod(long m) {
        long s = 0, qa;
        while (m != 0) {
            qa = m % 10;
            s = s + (qa * qa);
            m = m / 10;
        }
        return s;
    }

    private void back() {
        a4.setEnabled(true);
        l1.setSelectedIndex(-1);
        t1.setSelectedIndex(-1);
        t1.setSelectedIndices(id);
        l1.setSelectedIndices(rew);
        a1.setVisible(true);
        String fet = "";
        String ttr = a4.getText();
        if (ttr.equals("")) {
            String jjg = a2.getText();

            fet = jjg;
        } else {
            fet = ttr;
        }
        if (lko == 0) {
            if (his1.equals("") || his2.equals("") || his3.equals("") || his4.equals("") || his5.equals("")) {
                if (his1.equals("")) {
                    his1 = fet;
                } else if (his2.equals("")) {
                    his2 = fet;
                } else if (his3.equals("")) {
                    his3 = fet;
                } else if (his4.equals("")) {
                    his4 = fet;
                } else if (his5.equals("")) {
                    his5 = fet;
                }
            } else {
                his1 = "";
                his2 = "";
                his3 = "";
                his4 = "";
                his5 = "";
            }
        }

        a4.setText("");
        a1.setText("0");
        a2.setText("");
        q1.setText("");
        y1.setText("");
        y2.setText("");
        y3.setText("");
        y4.setText("");
        y33 = 0;
        y44 = 1;
        q1.setVisible(false);
        a = 0;
        h = 0;
        j = 0;
        d = 0;
        x = 0;
        f = 0;
        g = 0;
        dds = 0;
        k = 0;
        t2.removeAllItems();
        t2.addItem("~$~<<SELECT>>~$~");
        lko = 0;
    }

    private void jb1() {

        if (v1.isVisible() == false) {
            if (aa0 == 1) {
                a1.setText("1");
                a4.setText("1");
                a2.setText("");
                q1.setVisible(false);
                aa0 = 0;
                y33 = 0;
                y44 = 1;
                a = 0;
                h = 0;
                j = 0;
                d = 0;
                x = 0;
                f = 0;
                g = 0;
                dds = 0;
                k = 0;
            } else {

                if (y1.isVisible() == true || y2.isVisible() == true || y3.isVisible() == true || y4.isVisible() == true) {
                    a1.setText("0");
                    a4.setText("");
                } else {
                    a4.setText(a4.getText() + "1");
                    String r3 = a1.getText();
                    if (r3.equals("0")) {

                        a1.setText("");
                        a1.setText(a1.getText() + "1");
                    } else {

                        a1.setText(a1.getText() + "1");
                    }
                }
            }
        }

    }

    private void jb2() {

        if (v1.isVisible() == false) {
            if (aa0 == 1) {
                a1.setText("2");
                a4.setText("2");
                a2.setText("");
                q1.setVisible(false);
                aa0 = 0;
                y33 = 0;
                y44 = 1;

                a = 0;
                h = 0;
                j = 0;
                d = 0;
                x = 0;
                f = 0;
                g = 0;
                dds = 0;
                k = 0;
            } else {
                if (y1.isVisible() == true || y2.isVisible() == true || y3.isVisible() == true || y4.isVisible() == true) {
                    a1.setText("0");
                    a4.setText("");
                } else {
                    a4.setText(a4.getText() + "2");
                    String r3 = a1.getText();
                    if (r3.equals("0")) {

                        a1.setText("");
                        a1.setText(a1.getText() + "2");
                    } else {
                        a1.setText(a1.getText() + "2");
                    }
                }
            }
        }
    }

    private void jb3() {

        if (v1.isVisible() == false) {
            if (aa0 == 1) {
                a1.setText("3");
                a4.setText("3");
                a2.setText("");
                q1.setVisible(false);
                aa0 = 0;
                y33 = 0;
                y44 = 1;

                a = 0;
                h = 0;
                j = 0;
                d = 0;
                x = 0;
                f = 0;
                g = 0;
                dds = 0;
                k = 0;
            } else {
                if (y1.isVisible() == true || y2.isVisible() == true || y3.isVisible() == true || y4.isVisible() == true) {
                    a1.setText("0");
                    a4.setText("");
                } else {
                    a4.setText(a4.getText() + "3");
                    String r3 = a1.getText();
                    if (r3.equals("0")) {

                        a1.setText("");
                        a1.setText(a1.getText() + "3");
                    } else {
                        a1.setText(a1.getText() + "3");
                    }
                }
            }
        }
    }

    private void jb4() {

        if (v1.isVisible() == false) {
            if (aa0 == 1) {
                a1.setText("4");
                a4.setText("4");
                a2.setText("");
                q1.setVisible(false);
                aa0 = 0;
                y33 = 0;
                y44 = 1;

                a = 0;
                h = 0;
                j = 0;
                d = 0;
                x = 0;
                f = 0;
                g = 0;
                dds = 0;
                k = 0;
            } else {
                if (y1.isVisible() == true || y2.isVisible() == true || y3.isVisible() == true || y4.isVisible() == true) {
                    a1.setText("0");
                    a4.setText("");
                } else {
                    a4.setText(a4.getText() + "4");
                    String r3 = a1.getText();
                    if (r3.equals("0")) {

                        a1.setText("");
                        a1.setText(a1.getText() + "4");
                    } else {
                        a1.setText(a1.getText() + "4");
                    }
                }
            }
        }
    }

    private void jb5() {

        if (v1.isVisible() == false) {
            if (aa0 == 1) {
                a1.setText("5");
                a4.setText("5");
                a2.setText("");
                q1.setVisible(false);
                aa0 = 0;
                y33 = 0;
                y44 = 1;

                a = 0;
                h = 0;
                j = 0;
                d = 0;
                x = 0;
                f = 0;
                g = 0;
                dds = 0;
                k = 0;
            } else {
                if (y1.isVisible() == true || y2.isVisible() == true || y3.isVisible() == true || y4.isVisible() == true) {
                    a1.setText("0");
                    a4.setText("");
                } else {
                    a4.setText(a4.getText() + "5");
                    String r3 = a1.getText();
                    if (r3.equals("0")) {

                        a1.setText("");
                        a1.setText(a1.getText() + "5");
                    } else {
                        a1.setText(a1.getText() + "5");
                    }
                }
            }
        }
    }

    private void jb6() {

        if (v1.isVisible() == false) {
            if (aa0 == 1) {
                a1.setText("6");
                a4.setText("6");
                a2.setText("");
                q1.setVisible(false);
                aa0 = 0;
                y33 = 0;
                y44 = 1;

                a = 0;
                h = 0;
                j = 0;
                d = 0;
                x = 0;
                f = 0;
                g = 0;
                dds = 0;
                k = 0;
            } else {
                if (y1.isVisible() == true || y2.isVisible() == true || y3.isVisible() == true || y4.isVisible() == true) {
                    a1.setText("0");
                    a4.setText("");
                } else {
                    a4.setText(a4.getText() + "6");
                    String r3 = a1.getText();
                    if (r3.equals("0")) {

                        a1.setText("");
                        a1.setText(a1.getText() + "6");
                    } else {
                        a1.setText(a1.getText() + "6");
                    }
                }
            }
        }
    }

    private void jb7() {

        if (v1.isVisible() == false) {
            if (aa0 == 1) {
                a1.setText("7");
                a4.setText("7");
                a2.setText("");
                q1.setVisible(false);
                aa0 = 0;
                y33 = 0;
                y44 = 1;

                a = 0;
                h = 0;
                j = 0;
                d = 0;
                x = 0;
                f = 0;
                g = 0;
                dds = 0;
                k = 0;
            } else {
                if (y1.isVisible() == true || y2.isVisible() == true || y3.isVisible() == true || y4.isVisible() == true) {
                    a1.setText("0");
                    a4.setText("");
                } else {
                    a4.setText(a4.getText() + "7");
                    String r3 = a1.getText();
                    if (r3.equals("0")) {

                        a1.setText("");
                        a1.setText(a1.getText() + "7");
                    } else {
                        a1.setText(a1.getText() + "7");
                    }
                }
            }
        }
    }

    private void jb8() {

        if (v1.isVisible() == false) {
            if (aa0 == 1) {
                a1.setText("8");
                a4.setText("8");
                a2.setText("");
                q1.setVisible(false);
                aa0 = 0;
                y33 = 0;
                y44 = 1;

                a = 0;
                h = 0;
                j = 0;
                d = 0;
                x = 0;
                f = 0;
                g = 0;
                dds = 0;
                k = 0;
            } else {
                if (y1.isVisible() == true || y2.isVisible() == true || y3.isVisible() == true || y4.isVisible() == true) {
                    a1.setText("0");
                    a4.setText("");
                } else {
                    a4.setText(a4.getText() + "8");
                    String r3 = a1.getText();
                    if (r3.equals("0")) {

                        a1.setText("");
                        a1.setText(a1.getText() + "8");
                    } else {
                        a1.setText(a1.getText() + "8");
                    }
                }
            }
        }
    }

    private void jb9() {

        if (v1.isVisible() == false) {
            if (aa0 == 1) {
                a1.setText("9");
                a4.setText("9");
                a2.setText("");
                q1.setVisible(false);
                aa0 = 0;
                y33 = 0;
                y44 = 1;

                a = 0;
                h = 0;
                j = 0;
                d = 0;
                x = 0;
                f = 0;
                g = 0;
                dds = 0;
                k = 0;
            } else {
                if (y1.isVisible() == true || y2.isVisible() == true || y3.isVisible() == true || y4.isVisible() == true) {
                    a1.setText("0");
                    a4.setText("");
                } else {
                    a4.setText(a4.getText() + "9");
                    String r3 = a1.getText();
                    if (r3.equals("0")) {

                        a1.setText("");
                        a1.setText(a1.getText() + "9");
                    } else {
                        a1.setText(a1.getText() + "9");
                    }
                }
            }
        }
    }

    private void jb0() {

        if (v1.isVisible() == false) {
            if (aa0 == 1) {
                a1.setText("0");
                a4.setText("0");
                a2.setText("");
                q1.setVisible(false);
                aa0 = 0;
                y33 = 0;
                y44 = 1;

                a = 0;
                h = 0;
                j = 0;
                d = 0;
                x = 0;
                f = 0;
                g = 0;
                dds = 0;
                k = 0;
            } else {
                if (y1.isVisible() == true || y2.isVisible() == true || y3.isVisible() == true || y4.isVisible() == true) {
                    a1.setText("0");
                    a4.setText("");
                } else {

                    double r3 = Double.parseDouble(a1.getText());
                    if (r3 == 0) {

                        a1.setText("");
                        a1.setText("0");
                        a4.setText(a4.getText() + "0");
                    } else {
                        a1.setText(a1.getText() + "0");
                        a4.setText(a4.getText() + "0");
                    }
                }
            }
        }

    }

    private void ta() {
        String ori = y1.getText();

        if (ori.contains("a") || ori.contains("b") || ori.contains("c") || ori.contains("d") || ori.contains("e") || ori.contains("f") || ori.contains("g") || ori.contains("h") || ori.contains("i") || ori.contains("j") || ori.contains("k") || ori.contains("l") || ori.contains("m") || ori.contains("n") || ori.contains("o") || ori.contains("p") || ori.contains("q") || ori.contains("r") || ori.contains("s") || ori.contains("t") || ori.contains("u") || ori.contains("v") || ori.contains("w") || ori.contains("x") || ori.contains("y") || ori.contains("z") || ori.contains("A") || ori.contains("B") || ori.contains("C") || ori.contains("D") || ori.contains("E") || ori.contains("F") || ori.contains("G") || ori.contains("H") || ori.contains("I") || ori.contains("J") || ori.contains("K") || ori.contains("L") || ori.contains("M") || ori.contains("N") || ori.contains("O") || ori.contains("P") || ori.contains("Q") || ori.contains("R") || ori.contains("S") || ori.contains("T") || ori.contains("U") || ori.contains("V") || ori.contains("W") || ori.contains("X") || ori.contains("Y") || ori.contains("Z")) {
            JOptionPane.showMessageDialog(null, "Invalid Entry", "Entry Error", JOptionPane.WARNING_MESSAGE);
            int val1 = y1.getSelectionEnd();
            String ch1 = ori.substring(0, val1 - 1);
            y1.setText("" + ch1);

        } else {
            String ori1 = ori;
            int val = y1.getSelectionEnd();
            char ch = ori1.charAt(val - 1);
            y1.setText("" + ch);
            String uth = y1.getText();
            y1.setText("" + ori);

            if (uth.equals(".")) {
                String chec = ori.substring(0, val - 1);
                if (chec.contains(".")) {

                    y1.setText("" + ori.substring(0, val - 1));
                }
            }

        }
    }

    private void ta1() {
        String ori = y2.getText();

        if (ori.contains("a") || ori.contains("b") || ori.contains("c") || ori.contains("d") || ori.contains("e") || ori.contains("f") || ori.contains("g") || ori.contains("h") || ori.contains("i") || ori.contains("j") || ori.contains("k") || ori.contains("l") || ori.contains("m") || ori.contains("n") || ori.contains("o") || ori.contains("p") || ori.contains("q") || ori.contains("r") || ori.contains("s") || ori.contains("t") || ori.contains("u") || ori.contains("v") || ori.contains("w") || ori.contains("x") || ori.contains("y") || ori.contains("z") || ori.contains("A") || ori.contains("B") || ori.contains("C") || ori.contains("D") || ori.contains("E") || ori.contains("F") || ori.contains("G") || ori.contains("H") || ori.contains("I") || ori.contains("J") || ori.contains("K") || ori.contains("L") || ori.contains("M") || ori.contains("N") || ori.contains("O") || ori.contains("P") || ori.contains("Q") || ori.contains("R") || ori.contains("S") || ori.contains("T") || ori.contains("U") || ori.contains("V") || ori.contains("W") || ori.contains("X") || ori.contains("Y") || ori.contains("Z")) {
            JOptionPane.showMessageDialog(null, "Invalid Entry", "Entry Error", JOptionPane.WARNING_MESSAGE);
            int val1 = y2.getSelectionEnd();
            String ch1 = ori.substring(0, val1 - 1);
            y2.setText("" + ch1);

        } else {
            String ori1 = ori;
            int val = y2.getSelectionEnd();
            char ch = ori1.charAt(val - 1);
            y2.setText("" + ch);
            String uth = y2.getText();
            y2.setText("" + ori);

            if (uth.equals(".")) {
                String chec = ori.substring(0, val - 1);
                if (chec.contains(".")) {

                    y2.setText("" + ori.substring(0, val - 1));
                }
            }

        }

    }

    private void ta2() {
        String ori = y3.getText();

        if (ori.contains("a") || ori.contains("b") || ori.contains("c") || ori.contains("d") || ori.contains("e") || ori.contains("f") || ori.contains("g") || ori.contains("h") || ori.contains("i") || ori.contains("j") || ori.contains("k") || ori.contains("l") || ori.contains("m") || ori.contains("n") || ori.contains("o") || ori.contains("p") || ori.contains("q") || ori.contains("r") || ori.contains("s") || ori.contains("t") || ori.contains("u") || ori.contains("v") || ori.contains("w") || ori.contains("x") || ori.contains("y") || ori.contains("z") || ori.contains("A") || ori.contains("B") || ori.contains("C") || ori.contains("D") || ori.contains("E") || ori.contains("F") || ori.contains("G") || ori.contains("H") || ori.contains("I") || ori.contains("J") || ori.contains("K") || ori.contains("L") || ori.contains("M") || ori.contains("N") || ori.contains("O") || ori.contains("P") || ori.contains("Q") || ori.contains("R") || ori.contains("S") || ori.contains("T") || ori.contains("U") || ori.contains("V") || ori.contains("W") || ori.contains("X") || ori.contains("Y") || ori.contains("Z")) {
            JOptionPane.showMessageDialog(null, "Invalid Entry", "Entry Error", JOptionPane.WARNING_MESSAGE);
            int val1 = y3.getSelectionEnd();
            String ch1 = ori.substring(0, val1 - 1);
            y3.setText("" + ch1);

        } else {
            String ori1 = ori;
            int val = y3.getSelectionEnd();
            char ch = ori1.charAt(val - 1);
            y3.setText("" + ch);
            String uth = y3.getText();
            y3.setText("" + ori);

            if (uth.equals(".")) {
                String chec = ori.substring(0, val - 1);
                if (chec.contains(".")) {

                    y3.setText("" + ori.substring(0, val - 1));
                }
            }

        }
    }

    private void ta3() {
        String ori = y4.getText();

        if (ori.contains("a") || ori.contains("b") || ori.contains("c") || ori.contains("d") || ori.contains("e") || ori.contains("f") || ori.contains("g") || ori.contains("h") || ori.contains("i") || ori.contains("j") || ori.contains("k") || ori.contains("l") || ori.contains("m") || ori.contains("n") || ori.contains("o") || ori.contains("p") || ori.contains("q") || ori.contains("r") || ori.contains("s") || ori.contains("t") || ori.contains("u") || ori.contains("v") || ori.contains("w") || ori.contains("x") || ori.contains("y") || ori.contains("z") || ori.contains("A") || ori.contains("B") || ori.contains("C") || ori.contains("D") || ori.contains("E") || ori.contains("F") || ori.contains("G") || ori.contains("H") || ori.contains("I") || ori.contains("J") || ori.contains("K") || ori.contains("L") || ori.contains("M") || ori.contains("N") || ori.contains("O") || ori.contains("P") || ori.contains("Q") || ori.contains("R") || ori.contains("S") || ori.contains("T") || ori.contains("U") || ori.contains("V") || ori.contains("W") || ori.contains("X") || ori.contains("Y") || ori.contains("Z")) {
            JOptionPane.showMessageDialog(null, "Invalid Entry", "Entry Error", JOptionPane.WARNING_MESSAGE);
            int val1 = y4.getSelectionEnd();
            String ch1 = ori.substring(0, val1 - 1);
            y4.setText("" + ch1);

        } else {
            String ori1 = ori;
            int val = y4.getSelectionEnd();
            char ch = ori1.charAt(val - 1);
            y4.setText("" + ch);
            String uth = y4.getText();
            y4.setText("" + ori);

            if (uth.equals(".")) {
                String chec = ori.substring(0, val - 1);
                if (chec.contains(".")) {

                    y4.setText("" + ori.substring(0, val - 1));
                }
            }

        }
    }

//work
    void sum24() {
        int a21 = a5.getSelectedRowCount();
        int l21 = a5.getSelectedColumnCount();
        int d21 = a5.getSelectedRow();
        int b21 = a5.getSelectedColumn();
        if (a21 >= l21) {
            double f21 = 0;
            String c = null;

            double i;
            for (i = 1; i <= a21; i++) {
                c = (String) a5.getValueAt(d21, b21);
                a2.setText("" + c);
                String mat = a2.getText();
                if (mat.equals("null")) {
                    d21 = d21 + 1;
                    f21 = f21 + 0;
                } else {
                    d21 = d21 + 1;
                    double e = 0;

                    e = Double.parseDouble(c);
                    f21 = f21 + e;
                }
            }

            a7.setText("" + f21);

            String ans = a7.getText();
            a5.setValueAt(ans, d21, b21);

        } else {
            double f21 = 0;
            String c = null;

            double i;
            for (i = 1; i <= l21; i++) {
                c = (String) a5.getValueAt(d21, b21);
                a2.setText("" + c);
                String mat = a2.getText();
                if (mat.equals("null")) {
                    b21 = b21 + 1;
                    f21 = f21 + 0;
                } else {
                    b21 = b21 + 1;

                    double e = Double.parseDouble(c);

                    f21 = f21 + e;
                }

            }

            a7.setText("" + f21);

            String ans = a7.getText();
            a5.setValueAt(ans, d21, b21);

        }

    }

    void sum21() {
        int a21 = a5.getSelectedRowCount();
        int l21 = a5.getSelectedColumnCount();
        int d21 = a5.getSelectedRow();
        int b21 = a5.getSelectedColumn();
        double ssum = 0;
        int i, j3, nu = 0;
        for (i = b21; i < b21 + l21; i++) {
            for (j3 = d21; j3 < d21 + a21; j3++) {
                String hjhj = (String) a5.getValueAt(j3, i);
                a2.setText("" + hjhj);
                String vb = a2.getText();
                if (vb.equals("null")) {
                    ssum = ssum + 0;
                    nu++;
                } else {
                    double mat = Double.parseDouble((String) a5.getValueAt(j3, i));
                    ssum = ssum + mat;
                }

            }
            if (nu == a21) {

                a5.setValueAt("", j3, i);
                ssum = 0;
            } else {
                a2.setText("" + ssum);
                a5.setValueAt(a2.getText(), j3, i);
                ssum = 0;
            }
            nu = 0;
        }

        a2.setText("");
    }

    void sum22() {
        int a21 = a5.getSelectedRowCount();
        int l21 = a5.getSelectedColumnCount();
        int d21 = a5.getSelectedRow();
        int b21 = a5.getSelectedColumn();
        if (a21 >= l21) {
            double f21 = 0;
            String c;

            double i;
            double e = 0;
            for (i = 1; i <= a21; i++) {
                c = (String) a5.getValueAt(d21, b21);
                a2.setText("" + c);
                String hj = a2.getText();
                if (hj.equals("null")) {
                    d21 = d21 + 1;
                    f21 = f21 + 0;

                } else {
                    d21 = d21 + 1;
                    e = Double.parseDouble(c);
                    f21 = f21 + e;
                }

            }

            a7.setText("" + f21);

            String ans = a7.getText();
            a5.setValueAt(ans, nr, nc);

        } else {
            double f21 = 0;
            String c = null;

            double i;
            for (i = 1; i <= l21; i++) {
                c = (String) a5.getValueAt(d21, b21);

                b21 = b21 + 1;

                double e = Double.parseDouble(c);

                f21 = f21 + e;

            }

            a7.setText("" + f21);

            String ans = a7.getText();
            a5.setValueAt(ans, nr, nc);

        }
        a2.setText("");
    }

    void sum23() {
        int a21 = a5.getSelectedRowCount();
        int l21 = a5.getSelectedColumnCount();
        int d21 = a5.getSelectedRow();
        int b21 = a5.getSelectedColumn();
        double ssum = 0;
        int i, j3 = 0, nu = 0;
        for (i = b21; i < b21 + l21; i++) {
            for (j3 = d21; j3 < d21 + a21; j3++) {
                String hjhj = (String) a5.getValueAt(j3, i);
                a2.setText("" + hjhj);
                String vb = a2.getText();
                if (vb.equals("null")) {
                    ssum = ssum + 0;
                    nu++;
                } else {
                    double mat = Double.parseDouble((String) a5.getValueAt(j3, i));
                    ssum = ssum + mat;
                }

            }

        }
        if (nu == a21) {

            a5.setValueAt("", j3, i);
            ssum = 0;
        } else {
            a2.setText("" + ssum);
            a5.setValueAt(a2.getText(), nr, nc);
        }
        nu = 0;
        a2.setText("");
    }
    //product

    /* void pro21() {
        int a21 = a5.getSelectedRowCount();
        int l21 = a5.getSelectedColumnCount();
        int d21 = a5.getSelectedRow();
        int b21 = a5.getSelectedColumn();
        if (a21 >= l21) {
            double f21 = 1;
            String c21 = null;

            double i;
            for (i = 1; i <= a21; i++) {
                c21 = (String) a5.getValueAt(d21, b21);

                d21 = d21 + 1;
                double e21 = 1;



                e21 = Double.parseDouble(c21);
                f21 = f21 * e21;

            }

            a7.setText("" + f21);


            String ans = a7.getText();
            a5.setValueAt(ans, d21, b21);

        } else {
            double f21 = 1;
            String c = null;

            double i;
            for (i = 1; i <= l21; i++) {
                c = (String) a5.getValueAt(d21, b21);

                b21 = b21 + 1;

                double e = Double.parseDouble(c);
                e = 1;
                f21 = f21 * e;

            }

            a7.setText("" + f21);


            String ans = a7.getText();
            a5.setValueAt(ans, d21, b21);

        }

    }*/
    void pro21() {
        int a21 = a5.getSelectedRowCount();
        int l21 = a5.getSelectedColumnCount();
        int d21 = a5.getSelectedRow();
        int b21 = a5.getSelectedColumn();
        double ssum = 1;
        int i, j3, nu = 0;
        for (i = b21; i < b21 + l21; i++) {
            for (j3 = d21; j3 < d21 + a21; j3++) {
                String hjhj = (String) a5.getValueAt(j3, i);
                a2.setText("" + hjhj);
                String vb = a2.getText();
                if (vb.equals("null")) {
                    ssum = ssum * 1;
                    nu++;
                } else {
                    double mat = Double.parseDouble((String) a5.getValueAt(j3, i));
                    ssum = ssum * mat;
                }

            }
            if (nu == a21) {

                a5.setValueAt("", j3, i);
                ssum = 1;
            } else {
                a2.setText("" + ssum);
                a5.setValueAt(a2.getText(), j3, i);
                ssum = 1;
            }
            nu = 0;
        }

        a2.setText("");
    }

    void pro22() {
        int a21 = a5.getSelectedRowCount();
        int l21 = a5.getSelectedColumnCount();
        int d21 = a5.getSelectedRow();
        int b21 = a5.getSelectedColumn();
        if (a21 >= l21) {
            double f21 = 1;
            String c21 = null;

            double i;
            for (i = 1; i <= a21; i++) {
                c21 = (String) a5.getValueAt(d21, b21);
                a2.setText("" + c21);
                String mat = a2.getText();
                if (mat.equals("null")) {
                    d21 = d21 + 1;
                    f21 = f21 * 1;
                } else {
                    d21 = d21 + 1;
                    double e21 = 1;
                    e21 = Double.parseDouble(c21);
                    f21 = f21 * e21;
                }
            }

            a7.setText("" + f21);

            String ans = a7.getText();
            a5.setValueAt(ans, nr, nc);

        } else {
            double f21 = 1;
            String c = null;

            double i;
            for (i = 1; i <= l21; i++) {
                c = (String) a5.getValueAt(d21, b21);
                a2.setText("" + c);
                String mat = a2.getText();
                if (mat.equals("null")) {
                    b21 = b21 + 1;
                    f21 = f21 * 1;
                } else {
                    b21 = b21 + 1;

                    double e = Double.parseDouble(c);
                    e = 1;
                    f21 = f21 * e;
                }
            }

            a7.setText("" + f21);

            String ans = a7.getText();
            a5.setValueAt(ans, nr, nc);

        }
        a2.setText("");
    }
//avg

    void avg21() {
        int a21 = a5.getSelectedRowCount();
        int l21 = a5.getSelectedColumnCount();
        int d21 = a5.getSelectedRow();
        int b21 = a5.getSelectedColumn();
        int a22 = a21;
        double ssum = 0, avg = 0;
        int i, j3, nu = 0;
        for (i = b21; i < b21 + l21; i++) {
            for (j3 = d21; j3 < d21 + a21; j3++) {
                String hjhj = (String) a5.getValueAt(j3, i);
                a2.setText("" + hjhj);
                String vb = a2.getText();
                if (vb.equals("null")) {
                    ssum = ssum + 0;
                    nu++;
                } else {
                    double mat = Double.parseDouble((String) a5.getValueAt(j3, i));
                    ssum = ssum + mat;

                }

            }
            avg = ssum / a21;
            if (nu == a21) {

                a5.setValueAt("", j3, i);
                avg = 0;
                ssum = 0;
            } else {
                a2.setText("" + avg);
                a5.setValueAt(a2.getText(), j3, i);
                avg = 0;
                ssum = 0;
            }
            nu = 0;
        }
        a2.setText("");
    }

    void avg22() {
        int a21 = a5.getSelectedRowCount();
        int l21 = a5.getSelectedColumnCount();
        int d21 = a5.getSelectedRow();
        int b21 = a5.getSelectedColumn();
        int a22 = a21;
        if (a21 >= l21) {
            double f21 = 0;
            String c = null;

            double i;
            for (i = 1; i <= a21; i++) {
                c = (String) a5.getValueAt(d21, b21);
                a2.setText("" + c);
                String mat = a2.getText();
                if (mat.equals("null")) {
                    d21 = d21 + 1;
                    f21 = f21 + 0;
                } else {
                    d21 = d21 + 1;
                    double e = 0;

                    e = Double.parseDouble(c);
                    f21 = f21 + e;

                }

            }
            double t = f21 / a21;
            a7.setText("" + t);

            String ans = a7.getText();
            a5.setValueAt(ans, nr, nc);

        } else {
            double f21 = 0;
            String c = null;

            double i;
            for (i = 1; i <= l21; i++) {
                c = (String) a5.getValueAt(d21, b21);
                a2.setText("" + c);
                String mat = a2.getText();
                if (mat.equals("null")) {
                    b21 = b21 + 1;

                    f21 = f21 + 0;
                } else {
                    b21 = b21 + 1;

                    double e = Double.parseDouble(c);

                    f21 = f21 + e;
                }
            }
            double t = f21 / l21;
            a7.setText("" + t);

            String ans = a7.getText();
            a5.setValueAt(ans, nr, nc);

        }
        a2.setText("");
    }

    void max22() {
        int a21 = a5.getSelectedRowCount();
        int l21 = a5.getSelectedColumnCount();
        int d21 = a5.getSelectedRow();
        int b21 = a5.getSelectedColumn();
        if (a21 >= l21) {
            double f21 = 0;
            String c = null;
            double t = 0, temp = 0;
            double i;
            for (i = 1; i <= a21; i++) {
                c = (String) a5.getValueAt(d21, b21);
                f21 = Double.parseDouble(c);
                d21 = d21 + 1;
                if (f21 > temp) {
                    temp = f21;
                }

            }

            a7.setText("" + temp);

            String ans = a7.getText();
            a5.setValueAt(ans, nr, nc);

        } else {
            double f21 = 0;
            String c = null;

            double i, temp = 0;
            for (i = 1; i <= l21; i++) {
                c = (String) a5.getValueAt(d21, b21);

                b21 = b21 + 1;

                f21 = Double.parseDouble(c);
                if (f21 > temp) {
                    temp = f21;
                }

            }

            a7.setText("" + temp);

            String ans = a7.getText();
            a5.setValueAt(ans, nr, nc);

        }
        a2.setText("");
    }

    void min22() {
        int a21 = a5.getSelectedRowCount();
        int l21 = a5.getSelectedColumnCount();
        int d21 = a5.getSelectedRow();
        int b21 = a5.getSelectedColumn();
        int a22 = a21;
        int a23 = a21;
        int a24 = a21;
        int l22 = l21;
        int l23 = l22;
        int l24 = l21;
        int d22 = d21;
        int d23 = d21;
        int d24 = d21;
        int b22 = b21;
        int b23 = b21;
        int b24 = b21;
        if (a21 >= l21) {
            double f21 = 0;
            String c = null;
            double t = 0, temp = 0;
            double i;
            for (i = 1; i <= a21; i++) {
                c = (String) a5.getValueAt(d21, b21);
                f21 = Double.parseDouble(c);
                d21 = d21 + 1;
                if (f21 > temp) {
                    temp = f21;
                }

            }
            for (i = 1; i <= a22; i++) {
                c = (String) a5.getValueAt(d22, b22);
                f21 = Double.parseDouble(c);
                d22 = d22 + 1;
                if (f21 < temp) {
                    temp = f21;
                }

            }

            a7.setText("" + temp);

            String ans = a7.getText();
            a5.setValueAt(ans, nr, nc);

        } else {
            double f21 = 0;
            String c = null;

            double i, temp = 0;
            for (i = 1; i <= l23; i++) {
                c = (String) a5.getValueAt(d23, b23);

                b23 = b23 + 1;

                f21 = Double.parseDouble(c);
                if (f21 > temp) {
                    temp = f21;
                }

            }
            for (i = 1; i <= l24; i++) {
                c = (String) a5.getValueAt(d24, b24);

                b24 = b24 + 1;

                f21 = Double.parseDouble(c);
                if (f21 < temp) {
                    temp = f21;
                }

            }

            a7.setText("" + temp);

            String ans = a7.getText();
            a5.setValueAt(ans, nr, nc);

        }
        a2.setText("");
    }

    void max21() {
        int a21 = a5.getSelectedRowCount();
        int l21 = a5.getSelectedColumnCount();
        int d21 = a5.getSelectedRow();
        int b21 = a5.getSelectedColumn();
        double ssum = 1;
        int i, j3, nu = 0;
        double temp = 0;
        for (i = b21; i < b21 + l21; i++) {
            for (j3 = d21; j3 < d21 + a21; j3++) {
                String hjhj = (String) a5.getValueAt(j3, i);
                a2.setText("" + hjhj);
                String vb = a2.getText();
                if (vb.equals("null")) {

                    nu++;
                } else {
                    double mat = Double.parseDouble((String) a5.getValueAt(j3, i));

                    if (mat > temp) {
                        temp = mat;
                    }

                }

            }

            if (nu == a21) {

                a5.setValueAt("", j3, i);
                ssum = 1;
            } else {
                a2.setText("" + temp);
                a5.setValueAt(a2.getText(), j3, i);
                temp = 0;
            }
            nu = 0;
        }

        a2.setText("");
    }

    void min21() {
        int a21 = a5.getSelectedRowCount();
        int l21 = a5.getSelectedColumnCount();
        int d21 = a5.getSelectedRow();
        int b21 = a5.getSelectedColumn();
        int a22 = a21;
        int l22 = l21;
        int d22 = d21;
        int b22 = b21;
        double ssum = 1;
        int i, j3, nu = 0;
        double temp = 0;
        for (i = b21; i < b21 + l21; i++) {
            for (j3 = d21; j3 < d21 + a21; j3++) {
                String hjhj = (String) a5.getValueAt(j3, i);
                a2.setText("" + hjhj);
                String vb = a2.getText();
                if (vb.equals("null")) {

                    nu++;
                } else {
                    double mat = Double.parseDouble((String) a5.getValueAt(j3, i));

                    if (mat > temp) {
                        temp = mat;
                    }

                }
            }

            for (j3 = d22; j3 < d22 + a22; j3++) {
                String hjhj = (String) a5.getValueAt(j3, i);
                a2.setText("" + hjhj);
                String vb = a2.getText();
                if (vb.equals("null")) {

                    nu++;
                } else {
                    double mat = Double.parseDouble((String) a5.getValueAt(j3, i));

                    if (mat < temp) {
                        temp = mat;
                    }

                }

            }
            if (nu == a21) {

                a5.setValueAt("", j3, i);
            } else {
                a2.setText("" + temp);
                temp = 0;
                a5.setValueAt(a2.getText(), j3, i);

            }
            nu = 0;

        }

        a2.setText("");
    }

}

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ai;

import java.time.LocalDateTime;
import javax.swing.JOptionPane;

/**
 *
 * @author THANOS
 */
public class remindedit extends javax.swing.JFrame {

    /**
     * Creates new form remindedit
     */
    String aa[];
    JMake jj;
    public remindedit(String a[],JMake jj) {
        this.jj=jj;
        initComponents();
        aa=a;
        if (aa[5].length() == 1) {
            hr.setSelectedItem("0" + aa[5]);
        } else {
            hr.setSelectedItem(aa[5]);
        }
        if (aa[6].length() == 1) {
            min.setSelectedItem("0" + aa[6]);
        } else {
            min.setSelectedItem(aa[6]);
        }
        txt.setText(aa[7]);
        this.setLocationRelativeTo(null);
        
        int y = LocalDateTime.now().getYear();

        for (int i = 1; i <= 31; i++) {
            dd.addItem(i + "");
        }
        for (int i = 1; i <= 12; i++) {
            mm.addItem(i + "");
        }
        for (int i = 1980; i <= y; i++) {
            yy.addItem(i + "");
        }
        System.out.println(aa[2]);
        
        mm.setSelectedItem(aa[3]);
        yy.setSelectedItem(aa[4]);
        dd.setSelectedItem(aa[2]);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        hr = new javax.swing.JComboBox<>();
        min = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt = new javax.swing.JTextArea();
        dd = new javax.swing.JComboBox<>();
        mm = new javax.swing.JComboBox<>();
        yy = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        jLabel2.setText("Time :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, -1, 30));

        jLabel1.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        jLabel1.setText("Date :");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        hr.setFont(new java.awt.Font("Segoe UI Historic", 0, 12)); // NOI18N
        hr.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));
        hr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hrActionPerformed(evt);
            }
        });
        getContentPane().add(hr, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, 80, 30));

        min.setFont(new java.awt.Font("Segoe UI Historic", 0, 12)); // NOI18N
        min.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        min.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minActionPerformed(evt);
            }
        });
        getContentPane().add(min, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 20, 80, 30));

        jButton2.setText("OK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 240, 60, -1));

        jButton1.setText("Cancel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 240, -1, -1));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        txt.setColumns(20);
        txt.setFont(new java.awt.Font("Segoe UI Historic", 0, 13)); // NOI18N
        txt.setRows(5);
        jScrollPane1.setViewportView(txt);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 130, 180, -1));

        dd.setFont(new java.awt.Font("Segoe UI Historic", 0, 12)); // NOI18N
        dd.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ddItemStateChanged(evt);
            }
        });
        dd.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                ddFocusLost(evt);
            }
        });
        getContentPane().add(dd, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, 50, -1));

        mm.setFont(new java.awt.Font("Segoe UI Historic", 0, 12)); // NOI18N
        mm.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mmItemStateChanged(evt);
            }
        });
        mm.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                mmFocusLost(evt);
            }
        });
        mm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mmActionPerformed(evt);
            }
        });
        getContentPane().add(mm, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 80, 50, -1));

        yy.setFont(new java.awt.Font("Segoe UI Historic", 0, 12)); // NOI18N
        yy.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                yyItemStateChanged(evt);
            }
        });
        yy.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                yyFocusLost(evt);
            }
        });
        getContentPane().add(yy, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 80, 60, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        jLabel4.setText("Text :");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, -1, -1));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setOpaque(true);
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 260, 280));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void hrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hrActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hrActionPerformed

    private void minActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_minActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try{
            DB bb=new DB(aa[0]);
            bb.open();
            String tm=hr.getSelectedItem().toString()+":"+min.getSelectedItem().toString();
            String dt=dd.getSelectedItem().toString()+"/"+mm.getSelectedItem().toString()+"/"+yy.getSelectedItem().toString();
            System.out.println("update reminder set remind_date='"+dt+"',remind_time='"+tm+"' , remind_text='"+txt.getText()+"' where remind_id ='"+aa[1]+"'");
            bb.insertData("update reminder set remind_date='"+dt+"', remind_time='"+tm+"' , remind_text='"+txt.getText()+"' where remind_id ='"+aa[1]+"'");
            jj.changeRem(new String[]{aa[0],aa[1],dt,tm,txt.getText()});
            bb.close();
            this.setVisible(false);
        }
        catch(Exception ex){JOptionPane.showMessageDialog(null, "Failed to update reminder.","Error",JOptionPane.OK_OPTION);}
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ddItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ddItemStateChanged
        
    }//GEN-LAST:event_ddItemStateChanged

    private void ddFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ddFocusLost
//        int d = Integer.parseInt(dd.getSelectedItem().toString());
//        int m = Integer.parseInt(mm.getSelectedItem().toString());
//        int y = Integer.parseInt(yy.getSelectedItem().toString());
//        if (d == LocalDateTime.now().getDayOfMonth() && m == LocalDateTime.now().getMonthValue() && y == LocalDateTime.now().getYear()) {
//            JOptionPane.showMessageDialog(null, "The date-of-birth you've entered doesn't seem to be correct!");
//        }
    }//GEN-LAST:event_ddFocusLost

    private void mmItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mmItemStateChanged

        int a = Integer.parseInt(mm.getSelectedItem().toString());
        if (a == 4 || a == 6 || a == 9 || a == 11) {
            dd.removeAllItems();
            for (int i = 1; i <= 30; i++) {
                dd.addItem(i + "");
            }
        } else if (a == 2) {
            int y = Integer.parseInt(yy.getSelectedItem().toString());

            if (((y % 4 == 0) && (y % 100 != 0)) || (y % 400 == 0)) {
                dd.removeAllItems();
                for (int i = 1; i <= 29; i++) {
                    dd.addItem(i + "");
                }
            } else {
                dd.removeAllItems();
                for (int i = 1; i <= 28; i++) {
                    dd.addItem(i + "");
                }
            }
        } else {
            dd.removeAllItems();
            for (int i = 1; i <= 31; i++) {
                dd.addItem(i + "");
            }
        }
        
    }//GEN-LAST:event_mmItemStateChanged

    private void mmFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mmFocusLost
//        int d = Integer.parseInt(dd.getSelectedItem().toString());
//        int m = Integer.parseInt(mm.getSelectedItem().toString());
//        int y = Integer.parseInt(yy.getSelectedItem().toString());
//        if (d == LocalDateTime.now().getDayOfMonth() && m == LocalDateTime.now().getMonthValue() && y == LocalDateTime.now().getYear()) {
//            JOptionPane.showMessageDialog(null, "The date-of-birth you've entered doesn't seem to be correct!");
//        }
    }//GEN-LAST:event_mmFocusLost

    private void mmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mmActionPerformed

    private void yyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_yyItemStateChanged
        int a = Integer.parseInt(yy.getSelectedItem().toString());

        if (Integer.parseInt(mm.getSelectedItem().toString()) == 2) {
            if (((a % 4 == 0) && (a % 100 != 0)) || (a % 400 == 0)) {
                dd.removeAllItems();
                for (int i = 1; i <= 29; i++) {
                    dd.addItem(i + "");
                }
            } else {
                dd.removeAllItems();
                for (int i = 1; i <= 28; i++) {
                    dd.addItem(i + "");
                }
            }
        }
       
    }//GEN-LAST:event_yyItemStateChanged

    private void yyFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_yyFocusLost
//        int d = Integer.parseInt(dd.getSelectedItem().toString());
//        int m = Integer.parseInt(mm.getSelectedItem().toString());
//        int y = Integer.parseInt(yy.getSelectedItem().toString());
//        if (d == LocalDateTime.now().getDayOfMonth() && m == LocalDateTime.now().getMonthValue() && y == LocalDateTime.now().getYear()) {
//            JOptionPane.showMessageDialog(null, "The date-of-birth you've entered doesn't seem to be correct!");
//        }
    }//GEN-LAST:event_yyFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(remindedit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(remindedit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(remindedit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(remindedit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> dd;
    private javax.swing.JComboBox<String> hr;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> min;
    private javax.swing.JComboBox<String> mm;
    private javax.swing.JTextArea txt;
    private javax.swing.JComboBox<String> yy;
    // End of variables declaration//GEN-END:variables
}

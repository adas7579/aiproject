package crypto;


import java.awt.Toolkit;
import java.awt.datatransfer.*;
import java.io.*;
import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.util.logging.Level;
import java.util.logging.Logger;
import javafx.scene.input.Clipboard;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author aNaWorLd
 */
public class Crypto extends javax.swing.JFrame {

    /**
     * Creates new form Crypto
     */
    Ceaser cc=new Ceaser();
    Vignere vc=new Vignere();
    Rail rc=new Rail();
    Vernum vec=new Vernum();
    Aes as=new Aes();
    SingleCT ct=new SingleCT();
    Help hp=new Help();
    RSA rs=new RSA();
    Des ds=new Des();
    Pop pp;
    public Crypto() {
        initComponents();
        ggk.setVisible(false);
        setLocationRelativeTo(null);
        db.setLocation(eb.getLocation());
        
        //362 118
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        popupMenu1 = new java.awt.PopupMenu();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        e1 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        a1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        a2 = new javax.swing.JTextArea();
        eb = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        ab = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        ggk = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        ek = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        db = new javax.swing.JButton();
        d1 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        b1 = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        b2 = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        dk = new javax.swing.JTextField();
        jButton17 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        ab1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        popupMenu1.setLabel("popupMenu1");

        setTitle("Encoder/Decoder");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowDeactivated(java.awt.event.WindowEvent evt) {
                formWindowDeactivated(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Monotype Corsiva", 3, 48)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Cryptography ");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel2.setText("Choose Cipher Algorithm :");

        e1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Caeser Cipher", "Vigenere Cipher", "Rail Fence", "Vernam Cipher", "AES", "DES", "RSA", "Single Col Transposition" }));
        e1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                e1ItemStateChanged(evt);
            }
        });

        a1.setColumns(20);
        a1.setLineWrap(true);
        a1.setRows(5);
        a1.setWrapStyleWord(true);
        a1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Plain Text", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N
        jScrollPane1.setViewportView(a1);

        a2.setEditable(false);
        a2.setColumns(20);
        a2.setLineWrap(true);
        a2.setRows(5);
        a2.setWrapStyleWord(true);
        a2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cipher Text", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N
        jScrollPane2.setViewportView(a2);

        eb.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        eb.setText("Encode");
        eb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ebActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton4.setText("Clear All");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        ab.setText("About");
        ab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abActionPerformed(evt);
            }
        });

        jButton5.setText("Copy");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton7.setText("Paste Overwrite");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton9.setText("Copy To Decode");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton10.setText("Copy");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("Open File");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setText("Save To File");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        ggk.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        ggk.setText("Generate Key");
        ggk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ggkActionPerformed(evt);
            }
        });

        jButton14.setText("Paste");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton13.setText("Copy");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        ek.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        ek.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Key", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N
        ek.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ekMouseClicked(evt);
            }
        });
        ek.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ekKeyReleased(evt);
            }
        });

        jButton1.setText("Paste");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(e1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ab)
                                .addGap(31, 31, 31)
                                .addComponent(ek, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addComponent(ggk, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1132, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jButton10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton12))
                            .addComponent(jScrollPane1))
                        .addContainerGap(17, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(eb, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(e1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(ab))
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ggk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ek, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton5)
                            .addComponent(jButton7)
                            .addComponent(jButton11)
                            .addComponent(jButton1))
                        .addGap(34, 34, 34))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(eb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton10)
                    .addComponent(jButton9)
                    .addComponent(jButton12))
                .addGap(23, 23, 23))
        );

        jTabbedPane1.addTab("Encode", jPanel1);

        db.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        db.setText("Decode");
        db.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dbActionPerformed(evt);
            }
        });

        d1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Caeser Cipher", "Vigenere Cipher", "Rail Fence", "Vernam Cipher", "AES", "DES", "RSA", "Single Col Transposition" }));
        d1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                d1ItemStateChanged(evt);
            }
        });
        d1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                d1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel5.setText("Choose Cipher Algorithm :");

        b1.setColumns(20);
        b1.setRows(5);
        b1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cipher Text", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N
        jScrollPane5.setViewportView(b1);

        b2.setEditable(false);
        b2.setColumns(20);
        b2.setRows(5);
        b2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Plain Text", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N
        jScrollPane6.setViewportView(b2);

        jButton3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jButton3.setText("Clear All");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton15.setText("Paste");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jButton16.setText("Copy");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        dk.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        dk.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Key", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N
        dk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dkMouseClicked(evt);
            }
        });
        dk.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dkKeyReleased(evt);
            }
        });

        jButton17.setText("Open File");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jButton8.setText("Paste Overwrite");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton6.setText("Copy");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton18.setText("Save To File");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton19.setText("Copy To Encode");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        jButton20.setText("Copy");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        ab1.setText("About");
        ab1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ab1ActionPerformed(evt);
            }
        });

        jButton2.setText("Paste");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jButton20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton18)
                                .addGap(0, 860, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jButton6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2)
                                .addGap(14, 14, 14)
                                .addComponent(jButton17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(db, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(89, 89, 89))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(d1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(ab1)
                                        .addGap(34, 34, 34)
                                        .addComponent(dk, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jButton15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButton16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 1131, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(d1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ab1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton15))
                    .addComponent(dk, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(db, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton6)
                            .addComponent(jButton8)
                            .addComponent(jButton17)
                            .addComponent(jButton2))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton20)
                    .addComponent(jButton19)
                    .addComponent(jButton18))
                .addGap(23, 23, 23))
        );

        jTabbedPane1.addTab("Decode", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1164, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ebActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ebActionPerformed
enc();
    }//GEN-LAST:event_ebActionPerformed

    private void dbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dbActionPerformed
deco();
    }//GEN-LAST:event_dbActionPerformed

    private void e1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_e1ItemStateChanged
int a=e1.getSelectedIndex();
cp();
        switch (a) {
            case 0:
                ek.setText("");
             ggk.setVisible(false);
              ek.setVisible(true);
                break;
            case 1:
                ek.setText("");
             ggk.setVisible(false);
              ek.setVisible(true);
                break;
            case 2:
                ek.setText("");
             ggk.setVisible(false);
              ek.setVisible(false);
                break;
            case 3:
                ek.setText("");
             ggk.setVisible(false);
              ek.setVisible(true);
                break;
            case 4:
                ek.setText("");
                ggk.setVisible(false);
              ek.setVisible(true);
                break;  
            case 5:
                ek.setText("");
                ggk.setVisible(false);
              ek.setVisible(true);
                break;
            case 6:
              ek.setText("Enter key in the form of : a,b");
              ggk.setVisible(true);
              ek.setVisible(true);
                break;
            case 7:
                ek.setText("");
              ggk.setVisible(false);
              ek.setVisible(false);
                break;
             
            
            default:
                break;
        }
    }//GEN-LAST:event_e1ItemStateChanged

    private void d1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_d1ItemStateChanged
   int a=d1.getSelectedIndex();
cp1();
        switch (a) {
            case 0:
              dk.setText("");
              dk.setVisible(true);
                break;
            case 1:
              dk.setText("");
              dk.setVisible(true);
                break;
            case 2:
              dk.setText("");
              dk.setVisible(false);
                break;
            case 3:
              dk.setText("");
              dk.setVisible(true);
                break;
              case 4:
               dk.setText("");                
              dk.setVisible(true);
                break;  
            case 5:
                dk.setText("");
                
              dk.setVisible(true);
                break;
            case 6:
              dk.setText("Enter key in the form of : a,b");              
              dk.setVisible(true);
                break;
            case 7:
              dk.setText("");              
              dk.setVisible(false);
                break;
            default:
                break;
        }
    }//GEN-LAST:event_d1ItemStateChanged

    private void d1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_d1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_d1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
dk.setText("");
b1.setText("");
b2.setText("");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
 ek.setText("");
a1.setText("");
a2.setText("");       // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void abActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abActionPerformed


        
        this.setEnabled(false);
        
        String b="";
        int a=e1.getSelectedIndex();

        switch (a) {
            case 0:
              
              b=hp.caesar;
                break;
            case 1:
              
              b=hp.vigenere;
                break;
            case 2:
              
              b=hp.rail_fence;
                break;
            case 3:              
              b=hp.vernam;
                break;
            case 4:              
              b=hp.aes;
                break;
            case 5:
               b=hp.des;
                break;
            case 6:
               b=hp.rsa;
                break;
            case 7:
               b=hp.sct;
               break;
               
        }
        
        pp=new Pop((String)e1.getSelectedItem(),b,ab.getLocation(),this);
        
        pp.setVisible(true);
        
    }//GEN-LAST:event_abActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
      StringSelection selec= new StringSelection(ek.getText());
   java.awt.datatransfer.Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
   clipboard.setContents(selec, selec);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
java.awt.datatransfer.Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard(); 
	Transferable content = clipboard.getContents(this);
        try {
            String data =(String)content.getTransferData(DataFlavor.stringFlavor );
            ek.setText(data);
        } catch (UnsupportedFlavorException ex) {
            Logger.getLogger(Crypto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Crypto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
    StringSelection selec= new StringSelection(a1.getText());
   java.awt.datatransfer.Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
   clipboard.setContents(selec, selec);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
java.awt.datatransfer.Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard(); 
	Transferable content = clipboard.getContents(this);
        try {
            String data =(String)content.getTransferData(DataFlavor.stringFlavor );
            a1.setText(data);
        } catch (UnsupportedFlavorException ex) {
            Logger.getLogger(Crypto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Crypto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
    StringSelection selec= new StringSelection(a2.getText());
   java.awt.datatransfer.Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
   clipboard.setContents(selec, selec);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
b1.setText(a2.getText());    
d1.setSelectedIndex(e1.getSelectedIndex());
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
java.awt.datatransfer.Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard(); 
	Transferable content = clipboard.getContents(this);
        try {
            String data =(String)content.getTransferData(DataFlavor.stringFlavor );
            dk.setText(data);
        } catch (UnsupportedFlavorException ex) {
            Logger.getLogger(Crypto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Crypto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
 StringSelection selec= new StringSelection(dk.getText());
   java.awt.datatransfer.Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
   clipboard.setContents(selec, selec);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
java.awt.datatransfer.Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard(); 
	Transferable content = clipboard.getContents(this);
        try {
            String data =(String)content.getTransferData(DataFlavor.stringFlavor );
            b1.setText(data);
        } catch (UnsupportedFlavorException ex) {
            Logger.getLogger(Crypto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Crypto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
 StringSelection selec= new StringSelection(b1.getText());
   java.awt.datatransfer.Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
   clipboard.setContents(selec, selec);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
a1.setText(b2.getText()+"");
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
 StringSelection selec= new StringSelection(b2.getText());
   java.awt.datatransfer.Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
   clipboard.setContents(selec, selec);
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
JFileChooser f=new JFileChooser();
FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
f.setFileFilter(filter);
int i=f.showOpenDialog(this);    
    if(i==JFileChooser.APPROVE_OPTION){    
        File q=f.getSelectedFile();    
        String filepath=q.getPath();    
        try{  
        BufferedReader br=new BufferedReader(new FileReader(filepath));    
        String s1="",s2="";                         
        while((s1=br.readLine())!=null){    
        s2+=s1+"\n";    
        }    
        a1.setText(s2);    
        br.close();    
        }catch (Exception ex) {   JOptionPane.showMessageDialog(null,"File cannot be open!","Error",JOptionPane.ERROR_MESSAGE);}                 
    } 
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
JFileChooser f=new JFileChooser();
int i=f.showSaveDialog(this);
if(i==JFileChooser.APPROVE_OPTION){    
        File q=f.getSelectedFile();    
        String filepath=q.getPath();    
        try{  
            FileWriter fw=new FileWriter(filepath);
            fw.write(a2.getText());
            fw.close();
        } catch (IOException ex) {
      JOptionPane.showMessageDialog(null,"File is not Saved!","Error",JOptionPane.ERROR_MESSAGE);
    }
}
    }//GEN-LAST:event_jButton12ActionPerformed

    private void ab1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ab1ActionPerformed
    String b="";
        int a=d1.getSelectedIndex();

        switch (a) {
            case 0:              
              b=hp.caesar;
                break;
            case 1:              
              b=hp.vigenere;
                break;
            case 2:              
              b=hp.rail_fence;
                break;
            case 3:              
              b=hp.vernam;
                break;
            case 4:              
              b=hp.aes;
                break;                    
            case 5:
               b=hp.des;
                break;
            case 6:
               b=hp.rsa;
                break;
            case 7:
               b=hp.sct;
               break;
               
        }
        
         pp=new Pop((String)d1.getSelectedItem(),b,ab.getLocation(),this);
        
        pp.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_ab1ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
JFileChooser f=new JFileChooser();
int i=f.showSaveDialog(this);
if(i==JFileChooser.APPROVE_OPTION){    
        File q=f.getSelectedFile();    
        String filepath=q.getPath();    
        try{  
            FileWriter fw=new FileWriter(filepath);
            fw.write(b2.getText());
            fw.close();
        } catch (IOException ex) {
      JOptionPane.showMessageDialog(null,"File is not Saved!","Error",JOptionPane.ERROR_MESSAGE);
    }
}        // TODO add your handling code here:
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
JFileChooser f=new JFileChooser();
FileNameExtensionFilter filter = new FileNameExtensionFilter("TEXT FILES", "txt", "text");
f.setFileFilter(filter);
int i=f.showOpenDialog(this);    
    if(i==JFileChooser.APPROVE_OPTION){    
        File q=f.getSelectedFile();    
        String filepath=q.getPath();    
        try{  
        BufferedReader br=new BufferedReader(new FileReader(filepath));    
        String s1="",s2="";                         
        while((s1=br.readLine())!=null){    
        s2+=s1+"\n";    
        }    
        b1.setText(s2);    
        br.close();    
        }catch (Exception ex) {   JOptionPane.showMessageDialog(null,"File cannot be open!","Error",JOptionPane.ERROR_MESSAGE);}                 
    } 
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton17ActionPerformed

    private void ggkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ggkActionPerformed
Key k=new Key();
k.setVisible(true);
    }//GEN-LAST:event_ggkActionPerformed

    private void dkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dkMouseClicked
if(dk.getText().equals("Enter key in the form of : a,b"))
        dk.setText("");        // TODO add your handling code here:
    }//GEN-LAST:event_dkMouseClicked

    private void ekMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ekMouseClicked
if(ek.getText().equals("Enter key in the form of : a,b"))
        ek.setText("");        // TODO add your handling code here:
    }//GEN-LAST:event_ekMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
java.awt.datatransfer.Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard(); 
	Transferable content = clipboard.getContents(this);
        try {
            String data =(String)content.getTransferData(DataFlavor.stringFlavor );
            int a=a1.getCaretPosition();
            a1.insert(data, a);
        } catch (UnsupportedFlavorException ex) {
            Logger.getLogger(Crypto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Crypto.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    java.awt.datatransfer.Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard(); 
	Transferable content = clipboard.getContents(this);
        try {
            String data =(String)content.getTransferData(DataFlavor.stringFlavor );
            int a=b1.getCaretPosition();
            b1.insert(data, a);
        } catch (UnsupportedFlavorException ex) {
            Logger.getLogger(Crypto.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Crypto.class.getName()).log(Level.SEVERE, null, ex);
        }    // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void formWindowDeactivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowDeactivated

    }//GEN-LAST:event_formWindowDeactivated

    private void ekKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ekKeyReleased
if(evt.getKeyCode()==10)
    enc();
    }//GEN-LAST:event_ekKeyReleased

    private void dkKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dkKeyReleased
if(evt.getKeyCode()==10)
        deco();
    }//GEN-LAST:event_dkKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
       
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Crypto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea a1;
    private javax.swing.JTextArea a2;
    private javax.swing.JButton ab;
    private javax.swing.JButton ab1;
    private javax.swing.JTextArea b1;
    private javax.swing.JTextArea b2;
    private javax.swing.JComboBox<String> d1;
    private javax.swing.JButton db;
    private javax.swing.JTextField dk;
    private javax.swing.JComboBox<String> e1;
    private javax.swing.JButton eb;
    private javax.swing.JTextField ek;
    private javax.swing.JButton ggk;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private java.awt.PopupMenu popupMenu1;
    // End of variables declaration//GEN-END:variables
boolean check()
{
    if(ek.getText().equals("")||a1.getText().equals(""))
    {
    JOptionPane.showMessageDialog(null,"Key OR Plain Text not Entered!","Error",JOptionPane.ERROR_MESSAGE);
    return false;
    }
    return true;
}
boolean check1()
{
    if(dk.getText().equals("")||b1.getText().equals(""))
    {
    JOptionPane.showMessageDialog(null,"Key OR Cipher Text not Entered!","Error",JOptionPane.ERROR_MESSAGE);
    return false;
    }
    return true;
}

void cp()
{
if(ek.isVisible())
{
jButton13.setVisible(true);
jButton14.setVisible(true);
}
else{
jButton13.setVisible(false);
jButton14.setVisible(false);
}
}       

void cp1()
{
if(dk.isVisible())
{
jButton15.setVisible(true);
jButton16.setVisible(true);
}
else{
jButton15.setVisible(false);
jButton16.setVisible(false);
}
}

public void enc()
{
int a=e1.getSelectedIndex();

        switch (a) {
            case 0:
                if(check()==true)
                {
                    int q = 0;
                try{
                 q=Integer.parseInt(ek.getText());
                }catch(Exception e){ JOptionPane.showMessageDialog(null,"Key should be Integer value.","Alert!",JOptionPane.ERROR_MESSAGE);ek.setText("");break;}
                if(q<0||q>26)
                   JOptionPane.showMessageDialog(null,"Key should be between 0 and 26.","Alert!",JOptionPane.ERROR_MESSAGE);
                else
                 a2.setText(cc.Encode(a1.getText(),q));                
                }
                break;
            case 1:
                if(check()==true)
                 a2.setText(vc.Encode(a1.getText(),ek.getText().toUpperCase()));
                break;
            case 2:                          
                a2.setText(rc.Encode(a1.getText()));
                break;
            case 3:
                if(check()==true)
                 a2.setText(vec.Encode(a1.getText(),ek.getText()));
                break;
            case 4:
                if(check()==true){
                 String pt=a1.getText();    
                 int k;
                 try{ k=Integer.parseInt(ek.getText());}catch(Exception e){ JOptionPane.showMessageDialog(null,"Key should be Integer value.","Alert!",JOptionPane.ERROR_MESSAGE);ek.setText("");break;}
                try {                    
                    a2.setText(as.Encode(pt,k));
                    } catch (Exception ex) {}
                }
                break;   
            case 5:
                if(check()==true){
                 String pt=a1.getText();
                 int k;
                 try{k=Integer.parseInt(ek.getText());}catch(Exception e){ JOptionPane.showMessageDialog(null,"Key should be Integer value.","Alert!",JOptionPane.ERROR_MESSAGE);ek.setText("");break;}
                try {                    
                    a2.setText(ds.Encode(pt,k));
                    } catch (Exception ex) {}
                }
                break;
             case 6:     
                 if(check()==true){
                     int aa=0,bb=0;
                 String w[]=ek.getText().split(","); 
                 try{
                  aa=Integer.parseInt(w[0]);
                  bb=Integer.parseInt(w[1]);
                 }catch(Exception t){JOptionPane.showMessageDialog(null,"Enter key in the form of : a,b","Alert!",JOptionPane.ERROR_MESSAGE);ek.setText("");break;}
                 
                try { a2.setText(rs.Encode(a1.getText()+"",aa,bb));} catch(Exception ex) {}
                 }
                 
                  break;
            case 7:
                a2.setText(ct.Encode(a1.getText()));
                break;
            //case 8:
                
                
        }

}

public void deco()
{
b2.setText("");
        int a=d1.getSelectedIndex();
 switch (a) {
            case 0:
                if(check1()==true)
                {
                int q = 0;
                try{
                 q=Integer.parseInt(dk.getText());
                }catch(Exception e){ JOptionPane.showMessageDialog(null,"Key should be Integer value.","Alert!",JOptionPane.ERROR_MESSAGE);dk.setText("");break;}
                if(q<0||q>26)
                   JOptionPane.showMessageDialog(null,"Key should be between 0 and 26.","Alert!",JOptionPane.ERROR_MESSAGE);
                else
                 b2.setText(cc.Decode(b1.getText(),q));     
                }
                break;
            case 1:
                if(check1()==true)
                 b2.setText(vc.Decode(b1.getText(),dk.getText()));
                break;
            case 2:
                
              b2.setText(rc.Decode(b1.getText()));
                break;
            case 3:
                if(check1()==true)
                 b2.setText(vec.Decode(b1.getText(),dk.getText()));
                break;
            case 4:
                if(check1()==true){
               String pt=b1.getText();
                 int k;
                 try{k=Integer.parseInt(dk.getText());}catch(Exception e){ JOptionPane.showMessageDialog(null,"Key should be Integer value.","Alert!",JOptionPane.ERROR_MESSAGE);ek.setText("");break;}
                try {                    
                    b2.setText(as.Decode(pt,k));
                    } catch (Exception ex) {}       
                    }
                break;  
            case 5:
                if(check1()==true){
               String pt=b1.getText();
                 int k;
                 try{k=Integer.parseInt(dk.getText());}catch(Exception e){ JOptionPane.showMessageDialog(null,"Key should be Integer value.","Alert!",JOptionPane.ERROR_MESSAGE);ek.setText("");break;}
                try {                    
                    b2.setText(ds.Decode(pt,k));
                    } catch (Exception ex) {}       
                    }
                break; 
            case 6:
                if(check1()==true){
                  int aa=0,bb=0;
                 String w[]=dk.getText().split(","); 
                 try{
                  aa=Integer.parseInt(w[0]);
                  bb=Integer.parseInt(w[1]);
                 }catch(Exception t){JOptionPane.showMessageDialog(null,"Enter key in the form of : a,b","Alert!",JOptionPane.ERROR_MESSAGE);dk.setText("");break;}
                 
                try { b2.setText(rs.Decode(b1.getText()+"",aa,bb));} catch (IOException ex) {}                
                }
                  break;
            
            case 7:
                
                ct.Decode(b1.getText());
                try {String b=ct.fun();b2.setText(b);} catch (Exception ex) {}
                
                break;
        }

}

}

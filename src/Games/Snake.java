package Games;


import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Anagrams.java
 *
 * Created on Jan 2, 2016, 1:41:42 PM
 */



/**
 *
 * @author ANADI
 */
public class Snake extends javax.swing.JFrame {
int sc, to, pitar, pitac, pitar1, pitac1;
    int la = 0, laa = 0;
    int fi, se;
    int po, po1, ro1, co1, ro2, co2;
    String na, na2, op = "100", op1 = "100", pita, pita1;
    int rol, col, rol2, col2;
    DefaultTableModel model;
    /** Creates new form Anagrams */
    public Snake() {
        initComponents();
        this.setLocationRelativeTo(null);
           this.pack();
           bo.setShowGrid(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        n1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        n2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        td = new javax.swing.JButton();
        di = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        st = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        p1 = new javax.swing.JLabel();
        s1 = new javax.swing.JLabel();
        p2 = new javax.swing.JLabel();
        s2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        bo = new javax.swing.JTable();

        setTitle("sAAP seeDHI");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jDesktopPane1.setBackground(new java.awt.Color(204, 204, 204));
        jDesktopPane1.add(n1);
        n1.setBounds(100, 20, 110, 20);

        jLabel2.setText("Player 1:");
        jDesktopPane1.add(jLabel2);
        jLabel2.setBounds(20, 10, 60, 34);

        n2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                n2ActionPerformed(evt);
            }
        });
        jDesktopPane1.add(n2);
        n2.setBounds(100, 60, 110, 20);

        jLabel3.setText("Player 2:");
        jDesktopPane1.add(jLabel3);
        jLabel3.setBounds(20, 50, 50, 34);

        jButton1.setFont(new java.awt.Font("Times New Roman", 0, 17)); // NOI18N
        jButton1.setText("Start ");
        jButton1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jDesktopPane1.add(jButton1);
        jButton1.setBounds(10, 90, 70, 40);

        td.setFont(new java.awt.Font("Times New Roman", 1, 20)); // NOI18N
        td.setText("DICE");
        td.setEnabled(false);
        td.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tdActionPerformed(evt);
            }
        });
        jDesktopPane1.add(td);
        td.setBounds(10, 470, 90, 60);
        jDesktopPane1.add(di);
        di.setBounds(110, 460, 100, 80);

        st.setColumns(20);
        st.setEditable(false);
        st.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        st.setLineWrap(true);
        st.setRows(5);
        st.setText("           WELCOME USER...\nIt is a 'SNAKE & LADDER' game\nEnter the name of Player 1 & \nPlayer 2 AND Press Start Button \nTo Play.\n");
        st.setAutoscrolls(false);
        st.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Mortana", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14))); // NOI18N
        st.setMargin(new java.awt.Insets(2, 2, 2, 0));
        jScrollPane2.setViewportView(st);

        jDesktopPane1.add(jScrollPane2);
        jScrollPane2.setBounds(0, 550, 230, 150);

        jButton2.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        jButton2.setText("Replay");
        jButton2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jDesktopPane1.add(jButton2);
        jButton2.setBounds(80, 90, 70, 40);

        jButton3.setFont(new java.awt.Font("Times New Roman", 0, 17)); // NOI18N
        jButton3.setText("New");
        jButton3.setMargin(null);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jDesktopPane1.add(jButton3);
        jButton3.setBounds(150, 90, 70, 40);
        jDesktopPane1.add(jSeparator1);
        jSeparator1.setBounds(0, 450, 230, 20);
        jDesktopPane1.add(jSeparator2);
        jSeparator2.setBounds(0, 140, 230, 20);

        jList1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "SNAKE", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14), new java.awt.Color(255, 0, 0))); // NOI18N
        jList1.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        jList1.setForeground(new java.awt.Color(255, 0, 0));
        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "99-->10", "95-->65", "91-->51", "73-->3", "62-->22", "58-->24", "52-->11", "46-->15", "43-->17", "32-->5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jList1);

        jDesktopPane1.add(jScrollPane3);
        jScrollPane3.setBounds(120, 150, 100, 290);

        jList2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "LADDER", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14), new java.awt.Color(51, 153, 0))); // NOI18N
        jList2.setFont(new java.awt.Font("Times New Roman", 0, 15)); // NOI18N
        jList2.setForeground(new java.awt.Color(51, 153, 0));
        jList2.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "  7-->26", "  9-->55", "21-->97", "36-->64", "41-->93", "44-->65", "50-->92", "61-->98", "66-->86", "67-->88" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList2.setAutoscrolls(false);
        jList2.setFocusable(false);
        jList2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList2MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jList2);

        jDesktopPane1.add(jScrollPane4);
        jScrollPane4.setBounds(10, 150, 100, 290);

        getContentPane().add(jDesktopPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 230, 700));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("SNAKE & LADDER");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(536, 11, 192, -1));

        jLabel4.setText("Score :");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(335, 660, -1, -1));
        getContentPane().add(p1, new org.netbeans.lib.awtextra.AbsoluteConstraints(387, 660, 87, 29));
        getContentPane().add(s1, new org.netbeans.lib.awtextra.AbsoluteConstraints(492, 660, 45, 29));
        getContentPane().add(p2, new org.netbeans.lib.awtextra.AbsoluteConstraints(694, 660, 87, 29));
        getContentPane().add(s2, new org.netbeans.lib.awtextra.AbsoluteConstraints(799, 660, 45, 29));

        bo.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        bo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"100", "99", "98", "97", "96", "95", "94", "93", "92", "91"},
                {"81", "82", "83", "84", "85", "86", "87", "88", "89", "90"},
                {"80", "79", "78", "77", "76", "75", "74", "73", "72", "71"},
                {"61", "62", "63", "64", "65", "66", "67", "68", "69", "70"},
                {"60", "59", "58", "57", "56", "55", "54", "53", "52", "51"},
                {"41", "42", "43", "44", "45", "46", "47", "48", "49", "50"},
                {"40", "39", "38", "37", "36", "35", "34", "33", "32", "31"},
                {"21", "22", "23", "24", "25", "26", "27", "28", "29", "30"},
                {"20", "19", "18", "17", "16", "15", "14", "13", "12", "11"},
                {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10"}
            },
            new String [] {
                "", "", "", "", "", "", "", "", "", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        bo.setAutoscrolls(false);
        bo.setEnabled(false);
        bo.setRowHeight(60);
        bo.setRowSelectionAllowed(false);
        bo.getTableHeader().setReorderingAllowed(false);
        bo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                boMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                boMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(bo);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(236, 39, 779, 603));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void n2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_n2ActionPerformed

}//GEN-LAST:event_n2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        bo.setValueAt("100", 0, 0);
        di.setIcon(new ImageIcon(""));
        na2 = n2.getText().toUpperCase();
        na = n1.getText().toUpperCase();
        if (!n1.getText().isEmpty() && !n2.getText().isEmpty()) {
            bo.setEnabled(true);
            st.setText("Welcome " + n1.getText().toUpperCase() + " & " + n2.getText().toUpperCase() + ".");
            double ra = Math.random();
            if (ra < 0.50) {

                to = 1;
                st.append("\n" + n1.getText().toUpperCase() + " You won the toss.\nYou may throw a DICE.");
            } else if (ra > 0.50) {

                to = 2;
                st.append("\n" + n2.getText().toUpperCase() + " You won the toss.\nYou may throw a DICE.");
            }
            td.setEnabled(true);
            p1.setText(n1.getText().toUpperCase());
            p2.setText(n2.getText().toUpperCase());
            s1.setText("0");
            s2.setText("0");
        }

        bo.setValueAt(op, rol, col);
        bo.setValueAt(op1, rol2, col2);
}//GEN-LAST:event_jButton1ActionPerformed

    private void tdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tdActionPerformed

        double ra = Math.random();
        if (ra < 0.15) {
            sc = 1;
            di.setIcon(new ImageIcon("assets/game/1.png"));
        } else if (ra >= 0.15 && ra < 0.30) {
            sc = 2;
            di.setIcon(new ImageIcon("assets/game/2.png"));
        } else if (ra >= 0.30 && ra < 0.45) {
            sc = 3;
            di.setIcon(new ImageIcon("assets/game/3.png"));
        } else if (ra >= 0.45 && ra < 0.60) {
            sc = 4;
            di.setIcon(new ImageIcon("assets/game/4.png"));
        } else if (ra >= 0.60 && ra < 0.75) {
            sc = 5;
            di.setIcon(new ImageIcon("assets/game/5.png"));
        } else if (ra >= 0.75 && ra < 0.90) {
            sc = 6;
            di.setIcon(new ImageIcon("assets/game/6.png"));
        } else {
            sc = 1;
            di.setIcon(new ImageIcon("assets/game/1.png"));
        }

        fi = Integer.parseInt(s1.getText());
        se = Integer.parseInt(s2.getText());
        if (to == 1) {






            if (fi == 0) {
                if (sc == 1) {
                    td.setEnabled(false);
                    st.setText("Fantastic " + na + " you got " + sc + ".");
                    st.append("\nGo to " + sc);
                    s1.setText("1");

                } else if (sc == 6) {
                    st.setText("Fantastic " + na + " you got " + sc + ".");
                    st.append("\nAgain throw a DICE.");
                    bo.setEnabled(false);
                    s1.setText("6");
                    //  to=1;
                } else {
                    st.setText("oops!" + na + "\nYou missed it.\n" + n2.getText().toUpperCase() + " Now its your turn.");
                    to = 2;
                }
            } else {
                if (sc == 6) {
                    st.setText("Fantastic " + na + " you got " + sc + ".");
                    st.append("\nAgain throw a DICE.");
                    int ori = fi;
                    fi = fi + 6;


                    if (fi > 100) {
                        s1.setText("" + ori);
                        st.setText("oops! Not Allowed!\nNow " + na2 + " Its your turn.");
                        to = 2;
                    } else if (fi == 100) {
                        s1.setText("100");
                        bo.setEnabled(false);
                        bo.setValueAt(na, 0, 0);
                        st.setText("GAME OVER!\n" + na + " WINS.");
                        JOptionPane.showMessageDialog(null, "Congrats! " + na + " You WIN.");


                    } else {
                        s1.setText("" + fi);
                    }
                } else {
                    int ori = fi;
                    fi = fi + sc;
                    if (fi > 100) {
                        s1.setText("" + ori);
                        st.setText("oops! Not Allowed!\nNow " + na2 + " Its your turn.");
                        to = 2;
                    } else if (fi == 100) {
                        s1.setText("100");
                        bo.setEnabled(false);
                        bo.setValueAt(na, 0, 0);
                        st.setText("GAME OVER!\n" + na + " WINS.");
                        JOptionPane.showMessageDialog(null, "Congrats! " + na + " You WIN.");


                    } else {
                        bo.setEnabled(true);
                        td.setEnabled(false);
                        st.setText(na + " Go to " + fi);
                        s1.setText("" + fi);
                    }
                }
            }







        } else if (to == 2) {
            if (se == 0) {
                if (sc == 1) {
                    td.setEnabled(false);
                    st.setText("Fantastic " + na2 + " you got " + sc + ".");
                    st.append("\nGo to " + sc);
                    s2.setText("1");

                } else if (sc == 6) {
                    st.setText("Fantastic " + na2 + " you got " + sc + ".");
                    bo.setEnabled(false);
                    st.append("\nAgain throw a DICE.");

                    s2.setText("6");
                    //  to=1;
                } else {
                    st.setText("oops! " + na2 + "\nYou missed it.\n" + n1.getText().toUpperCase() + " Now its your turn.");
                    to = 1;
                }
            } else {

                if (sc == 6) {
                    st.setText("Fantastic " + na2 + " you got " + sc + ".");
                    st.append("\nAgain throw a DICE.");
                    int ori = se;

                    se = se + sc;
                    if (se > 100) {
                        s2.setText("" + ori);
                        st.setText("oops! Not Allowed!\nNow " + na + " Its your turn.");
                        to = 1;
                    } else if (se == 100) {
                        s2.setText("100");
                        bo.setEnabled(false);
                        st.setText("GAME OVER!\n" + na2 + " WINS.");
                        JOptionPane.showMessageDialog(null, "Congrats! " + na2 + " You WIN.");

                    } else {
                        s2.setText("" + se);
                    }
                } else {
                    int ori = se;
                    se = se + sc;
                    if (se > 100) {
                        s2.setText("" + ori);
                        st.setText("oops! Not Allowed!\nNow " + na + " Its your turn.");
                        to = 1;
                    } else if (se == 100) {
                        s2.setText("100");
                        bo.setEnabled(false);
                        st.setText("GAME OVER!\n" + na2 + " WINS.");
                        JOptionPane.showMessageDialog(null, "Congrats! " + na2 + " You WIN.");

                    } else {
                        bo.setEnabled(true);
                        td.setEnabled(false);

                        st.setText(na2 + " Go to " + se);
                        s2.setText("" + se);
                    }
                }
            }







        }
}//GEN-LAST:event_tdActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        bo.setValueAt("100", 0, 0);
        di.setIcon(new ImageIcon(""));
        na2 = n2.getText().toUpperCase();
        na = n1.getText().toUpperCase();
        if (!n1.getText().isEmpty() && !n2.getText().isEmpty()) {
            bo.setEnabled(true);
            st.setText("Welcome " + n1.getText().toUpperCase() + " & " + n2.getText().toUpperCase() + ".");
            double ra = Math.random();
            if (ra < 0.50) {

                to = 1;
                st.append("\n" + n1.getText().toUpperCase() + " You won the toss.\nYou may throw a DICE.");
            } else if (ra > 0.50) {

                to = 2;
                st.append("\n" + n2.getText().toUpperCase() + " You won the toss.\nYou may throw a DICE.");
            }
            td.setEnabled(true);
            p1.setText(n1.getText().toUpperCase());
            p2.setText(n2.getText().toUpperCase());
            s1.setText("0");
            s2.setText("0");
        }

        bo.setValueAt(op, rol, col);
        bo.setValueAt(op1, rol2, col2);
        //         TODO add your handling code here:
}//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
               st.setText("           WELCOME USER...\nIt is a 'SNAKE & LADDER' gameEnter the name of Player 1 & \nPlayer 2 AND Press Start Button \nTo Play.");

        n1.setText("");
        n2.setText("");
        p1.setText("");
        p2.setText("");
        s1.setText("");
        s2.setText("");
        bo.setModel(model);
        td.setEnabled(false);
        di.setIcon(new ImageIcon(""));
       
        

}//GEN-LAST:event_jButton3ActionPerformed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        jList1.setSelectedIndex(-1);
}//GEN-LAST:event_jList1MouseClicked

    private void jList2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList2MouseClicked
        jList2.setSelectedIndex(-1);
}//GEN-LAST:event_jList2MouseClicked

    private void boMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boMouseClicked

        fi = Integer.parseInt(s1.getText());
        se = Integer.parseInt(s2.getText());
        if (fi == 0 && se == 0) {
        } else {




            if (to == 1) {

                if (fi == se) {


                    st.setText("YO!! " + na + "\nYou sends " + na2 + " to home.\nNow " + na + " Its your turn.");
                    s2.setText("0");
                    pitar1 = bo.getSelectedRow();
                    pitac1 = bo.getSelectedColumn();
                    //pita1= (String) bo.getValueAt(pitar1,pitac1);
                    bo.setValueAt(op1 + " (" + na.toUpperCase().substring(0, 3) + ")", pitar1, pitac1);
                    // bo.setValueAt(pita1,pitar1,pitac1);

                    to = 1;
                    td.setEnabled(true);
                    bo.setEnabled(false);
                } else {




                    String mat;
                    ro2 = bo.getSelectedRow();
                    co2 = bo.getSelectedColumn();
                    mat = (String) bo.getValueAt(ro2, co2);
                    int va = Integer.parseInt(mat);
                    if (va == fi) {
                        bo.setValueAt(op, rol, col);
                        rol = bo.getSelectedRow();
                        col = bo.getSelectedColumn();
                        op = (String) bo.getValueAt(rol, col);
                        bo.setValueAt(mat + " (" + na.substring(0, 3) + ")", ro2, co2);
                        if (va == 7 || va == 9 || va == 21 || va == 36 || va == 41 || va == 44 || va == 50 || va == 61 || va == 67) {
                            st.setText("YO!! " + na + "\nyou got a LADDER");
                            td.setEnabled(false);
                            if (va == 7) {
                                s1.setText("26");
                                st.append("\nGo to 26 \n & then again throw a DICE");
                            } else if (va == 9) {
                                s1.setText("55");
                                st.append("\nGo to 55 \n & then again throw a DICE");
                            } else if (va == 21) {
                                s1.setText("97");
                                st.append("\nGo to 97 \n & then again throw a DICE");
                            } else if (va == 36) {
                                s1.setText("64");
                                st.append("\nGo to 64 \n & then again throw a DICE");
                            } else if (va == 41) {
                                s1.setText("93");
                                st.append("\nGo to 93 \n & then again throw a DICE");
                            } else if (va == 44) {
                                s1.setText("65");
                                st.append("\nGo to 65 \n & then again throw a DICE");
                            } else if (va == 50) {
                                s1.setText("92");
                                st.append("\nGo to 92 \n & then again throw a DICE");
                            } else if (va == 61) {
                                s1.setText("98");
                                st.append("\nGo to 98 \n & then again throw a DICE");
                            } else if (va == 66) {
                                s1.setText("86");
                                st.append("\nGo to 86 \n & then again throw a DICE");
                            } else if (va == 67) {
                                s1.setText("88");
                                st.append("\nGo to 88 \n & then again throw a DICE");
                            }
                            la = 1;

                            //to=1;
                        } else if (va == 99 || va == 95 || va == 91 || va == 73 || va == 62 || va == 58 || va == 52 || va == 46 || va == 43 || va == 32) {
                            st.setText("Crap!! " + na + "\nyou got a SNAKE");
                            td.setEnabled(false);
                            if (va == 32) {
                                st.append("\nGo to 5");
                                s1.setText("5");
                            } else if (va == 43) {
                                st.append("\nGo to 17");
                                s1.setText("17");
                            } else if (va == 46) {
                                st.append("\nGo to 15");
                                s1.setText("15");
                            } else if (va == 52) {
                                st.append("\nGo to 11");
                                s1.setText("11");
                            } else if (va == 58) {
                                st.append("\nGo to 24");
                                s1.setText("24");
                            } else if (va == 62) {
                                st.append("\nGo to 22");
                                s1.setText("22");
                            } else if (va == 73) {
                                st.append("\nGo to 3");
                                s1.setText("3");
                            } else if (va == 91) {
                                st.append("\nGo to 51");
                                s1.setText("51");
                            } else if (va == 95) {
                                st.append("\nGo to 65");
                                s1.setText("65");
                            } else if (va == 99) {
                                st.append("\nGo to 10");
                                s1.setText("10");
                            }

                            la = 2;
                            td.setEnabled(true);
                        } else {
                            if (la == 1) {
                                st.setText("Now " + na + " \nIts Your Turn.\nYou may throw a DICE.");
                                to = 1;
                            } else if (la == 2) {
                                st.setText("Now " + na2 + " \nIts Your Turn.\nYou may throw a DICE.");
                                to = 2;
                            } else {
                                st.setText("Now " + na2 + " \nIts Your Turn.\nYou may throw a DICE.");
                                if (sc == 6) {
                                    to = 1;
                                } else {
                                    to = 2;
                                }
                            }
                            la = 0;
                            td.setEnabled(true);
                        }

                    } else {
                        JOptionPane.showMessageDialog(null, "OYE " + na + " Don't CHEAT!!!");
                    }






                }














            } else if (to == 2) {

                if (se == fi) {
                    st.setText("YO!! " + na2 + "\nYou sends " + na + " to home.\nNow " + na2 + " Its your turn.");
                    s1.setText("0");
                    pitar = bo.getSelectedRow();
                    pitac = bo.getSelectedColumn();
                    //pita=(String)bo.getValueAt(pitar,pitac);
                    bo.setValueAt(op + " (" + na2.toUpperCase().substring(0, 3) + ")", pitar, pitac);
                    // bo.setValueAt(pita1,pitar1,pitac1);
                    to = 2;
                    td.setEnabled(true);
                    bo.setEnabled(false);
                } else {




                    String mat;
                    ro1 = bo.getSelectedRow();
                    co1 = bo.getSelectedColumn();
                    mat = (String) bo.getValueAt(ro1, co1);
                    int va = Integer.parseInt(mat);
                    if (va == se) {
                        bo.setValueAt(op1, rol2, col2);
                        rol2 = bo.getSelectedRow();
                        col2 = bo.getSelectedColumn();
                        op1 = (String) bo.getValueAt(rol2, col2);
                        bo.setValueAt(mat + " (" + na2.substring(0, 3) + ")", ro1, co1);
                        if (va == 7 || va == 9 || va == 21 || va == 36 || va == 41 || va == 44 || va == 50 || va == 61 || va == 67) {
                            st.setText("YO!! " + na2 + "\nyou got a LADDER");
                            td.setEnabled(false);
                            if (va == 7) {
                                s2.setText("26");
                                st.append("\nGo to 26 \n & then again throw a DICE");
                            } else if (va == 9) {
                                s2.setText("55");
                                st.append("\nGo to 55 \n & then again throw a DICE");
                            } else if (va == 21) {
                                s2.setText("97");
                                st.append("\nGo to 97 \n & then again throw a DICE");
                            } else if (va == 36) {
                                s2.setText("64");
                                st.append("\nGo to 64 \n & then again throw a DICE");
                            } else if (va == 41) {
                                s2.setText("93");
                                st.append("\nGo to 93 \n & then again throw a DICE");
                            } else if (va == 44) {
                                s2.setText("65");
                                st.append("\nGo to 65 \n & then again throw a DICE");
                            } else if (va == 50) {
                                s2.setText("92");
                                st.append("\nGo to 92 \n & then again throw a DICE");
                            } else if (va == 61) {
                                s2.setText("98");
                                st.append("\nGo to 98 \n & then again throw a DICE");
                            } else if (va == 66) {
                                s2.setText("86");
                                st.append("\nGo to 86 \n & then again throw a DICE");
                            } else if (va == 67) {
                                s2.setText("88");
                                st.append("\nGo to 88 \n & then again throw a DICE");
                            }
                            laa = 1;


                        } else if (va == 99 || va == 95 || va == 91 || va == 73 || va == 62 || va == 58 || va == 52 || va == 46 || va == 43 || va == 32) {
                            st.setText("Crap!! " + na2 + "\nyou got a SNAKE");
                            td.setEnabled(false);
                            if (va == 32) {
                                st.append("\nGo to 5");
                                s2.setText("5");
                            } else if (va == 43) {
                                st.append("\nGo to 17");
                                s2.setText("17");
                            } else if (va == 46) {
                                st.append("\nGo to 15");
                                s2.setText("15");
                            } else if (va == 52) {
                                st.append("\nGo to 11");
                                s2.setText("11");
                            } else if (va == 58) {
                                st.append("\nGo to 24");
                                s2.setText("24");
                            } else if (va == 62) {
                                st.append("\nGo to 22");
                                s2.setText("22");
                            } else if (va == 73) {
                                st.append("\nGo to 3");
                                s2.setText("3");
                            } else if (va == 91) {
                                st.append("\nGo to 51");
                                s2.setText("51");
                            } else if (va == 95) {
                                st.append("\nGo to 65");
                                s2.setText("65");
                            } else if (va == 99) {
                                st.append("\nGo to 10");
                                s2.setText("10");
                            }

                            laa = 2;
                            //td.setEnabled(true);
                        } else {
                            if (laa == 1) {
                                st.setText("Now " + na2 + " \nIts Your Turn.\nYou may throw a DICE.");
                                to = 2;
                            } else if (laa == 2) {
                                st.setText("Now " + na + " \nIts Your Turn.\nYou may throw a DICE.");
                                to = 1;
                            } else {
                                st.setText("Now " + na + " \nIts Your Turn.\nYou may throw a DICE.");
                                if (sc == 6) {
                                    to = 2;
                                } else {
                                    to = 1;
                                }
                            }
                            laa = 0;
                            td.setEnabled(true);
                        }

                    } else {
                        JOptionPane.showMessageDialog(null, "OYE " + na2 + " Don't CHEAT!!!");
                    }






                }














            }



        }
}//GEN-LAST:event_boMouseClicked

    private void boMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_boMouseReleased
        di.setIcon(new ImageIcon(""));
}//GEN-LAST:event_boMouseReleased

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Snake().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable bo;
    private javax.swing.JLabel di;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField n1;
    private javax.swing.JTextField n2;
    private javax.swing.JLabel p1;
    private javax.swing.JLabel p2;
    private javax.swing.JLabel s1;
    private javax.swing.JLabel s2;
    private javax.swing.JTextArea st;
    private javax.swing.JButton td;
    // End of variables declaration//GEN-END:variables

}
